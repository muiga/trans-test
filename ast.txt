{
  type: 'Program',
  start: 0,
  end: 1280,
  body: [
    {
      type: 'ExpressionStatement',
      start: 0,
      end: 1280,
      expression: {
        type: 'LogicalExpression',
        start: 0,
        end: 1279,
        operator: '&&',
        left: {
          type: 'Identifier',
          start: 0,
          end: 18,
          name: '__VITE_IS_MODERN__'
        },
        right: {
          type: 'CallExpression',
          start: 21,
          end: 1278,
          optional: false,
          callee: {
            type: 'FunctionExpression',
            start: 21,
            end: 1276,
            async: false,
            generator: false,
            id: {
              type: 'Identifier',
              start: 30,
              end: 38,
              name: 'polyfill'
            },
            params: [],
            body: {
              type: 'BlockStatement',
              start: 41,
              end: 1276,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 45,
                  end: 100,
                  kind: 'const',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 51,
                      end: 99,
                      id: {
                        type: 'Identifier',
                        start: 51,
                        end: 58,
                        name: 'relList'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 61,
                        end: 99,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'CallExpression',
                          start: 61,
                          end: 91,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 61,
                            end: 83,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 61,
                              end: 69,
                              name: 'document'
                            },
                            property: {
                              type: 'Identifier',
                              start: 70,
                              end: 83,
                              name: 'createElement'
                            }
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 84,
                              end: 90,
                              value: 'link',
                              raw: '"link"'
                            }
                          ]
                        },
                        property: {
                          type: 'Identifier',
                          start: 92,
                          end: 99,
                          name: 'relList'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'IfStatement',
                  start: 103,
                  end: 190,
                  test: {
                    type: 'LogicalExpression',
                    start: 107,
                    end: 171,
                    operator: '&&',
                    left: {
                      type: 'LogicalExpression',
                      start: 107,
                      end: 134,
                      operator: '&&',
                      left: {
                        type: 'Identifier',
                        start: 107,
                        end: 114,
                        name: 'relList'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 118,
                        end: 134,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 118,
                          end: 125,
                          name: 'relList'
                        },
                        property: {
                          type: 'Identifier',
                          start: 126,
                          end: 134,
                          name: 'supports'
                        }
                      }
                    },
                    right: {
                      type: 'CallExpression',
                      start: 138,
                      end: 171,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 138,
                        end: 154,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 138,
                          end: 145,
                          name: 'relList'
                        },
                        property: {
                          type: 'Identifier',
                          start: 146,
                          end: 154,
                          name: 'supports'
                        }
                      },
                      arguments: [
                        {
                          type: 'Literal',
                          start: 155,
                          end: 170,
                          value: 'modulepreload',
                          raw: '"modulepreload"'
                        }
                      ]
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 173,
                    end: 190,
                    body: [
                      {
                        type: 'ReturnStatement',
                        start: 179,
                        end: 186,
                        argument: null
                      }
                    ]
                  },
                  alternate: null
                },
                {
                  type: 'ForOfStatement',
                  start: 193,
                  end: 299,
                  await: false,
                  left: {
                    type: 'VariableDeclaration',
                    start: 198,
                    end: 208,
                    kind: 'const',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 204,
                        end: 208,
                        id: {
                          type: 'Identifier',
                          start: 204,
                          end: 208,
                          name: 'link'
                        },
                        init: null
                      }
                    ]
                  },
                  right: {
                    type: 'CallExpression',
                    start: 212,
                    end: 266,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 212,
                      end: 237,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 212,
                        end: 220,
                        name: 'document'
                      },
                      property: {
                        type: 'Identifier',
                        start: 221,
                        end: 237,
                        name: 'querySelectorAll'
                      }
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 238,
                        end: 265,
                        value: 'link[rel="modulepreload"]',
                        raw: `'link[rel="modulepreload"]'`
                      }
                    ]
                  },
                  body: {
                    type: 'BlockStatement',
                    start: 268,
                    end: 299,
                    body: [
                      {
                        type: 'ExpressionStatement',
                        start: 274,
                        end: 295,
                        expression: {
                          type: 'CallExpression',
                          start: 274,
                          end: 294,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 274,
                            end: 288,
                            name: 'processPreload'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 289,
                              end: 293,
                              name: 'link'
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 302,
                  end: 671,
                  expression: {
                    type: 'CallExpression',
                    start: 302,
                    end: 670,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 302,
                      end: 624,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'NewExpression',
                        start: 302,
                        end: 616,
                        callee: {
                          type: 'Identifier',
                          start: 306,
                          end: 322,
                          name: 'MutationObserver'
                        },
                        arguments: [
                          {
                            type: 'ArrowFunctionExpression',
                            start: 323,
                            end: 615,
                            async: false,
                            expression: false,
                            generator: false,
                            params: [
                              {
                                type: 'Identifier',
                                start: 324,
                                end: 333,
                                name: 'mutations'
                              }
                            ],
                            body: {
                              type: 'BlockStatement',
                              start: 338,
                              end: 615,
                              body: [
                                {
                                  type: 'ForOfStatement',
                                  start: 344,
                                  end: 611,
                                  await: false,
                                  left: {
                                    type: 'VariableDeclaration',
                                    start: 349,
                                    end: 363,
                                    kind: 'const',
                                    declarations: [
                                      {
                                        type: 'VariableDeclarator',
                                        start: 355,
                                        end: 363,
                                        id: {
                                          type: 'Identifier',
                                          start: 355,
                                          end: 363,
                                          name: 'mutation'
                                        },
                                        init: null
                                      }
                                    ]
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 367,
                                    end: 376,
                                    name: 'mutations'
                                  },
                                  body: {
                                    type: 'BlockStatement',
                                    start: 378,
                                    end: 611,
                                    body: [
                                      {
                                        type: 'IfStatement',
                                        start: 386,
                                        end: 448,
                                        test: {
                                          type: 'BinaryExpression',
                                          start: 390,
                                          end: 419,
                                          operator: '!==',
                                          left: {
                                            type: 'MemberExpression',
                                            start: 390,
                                            end: 403,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 390,
                                              end: 398,
                                              name: 'mutation'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 399,
                                              end: 403,
                                              name: 'type'
                                            }
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 408,
                                            end: 419,
                                            value: 'childList',
                                            raw: '"childList"'
                                          }
                                        },
                                        consequent: {
                                          type: 'BlockStatement',
                                          start: 421,
                                          end: 448,
                                          body: [
                                            {
                                              type: 'ContinueStatement',
                                              start: 431,
                                              end: 440,
                                              label: null
                                            }
                                          ]
                                        },
                                        alternate: null
                                      },
                                      {
                                        type: 'ForOfStatement',
                                        start: 455,
                                        end: 605,
                                        await: false,
                                        left: {
                                          type: 'VariableDeclaration',
                                          start: 460,
                                          end: 470,
                                          kind: 'const',
                                          declarations: [
                                            {
                                              type: 'VariableDeclarator',
                                              start: 466,
                                              end: 470,
                                              id: {
                                                type: 'Identifier',
                                                start: 466,
                                                end: 470,
                                                name: 'node'
                                              },
                                              init: null
                                            }
                                          ]
                                        },
                                        right: {
                                          type: 'MemberExpression',
                                          start: 474,
                                          end: 493,
                                          computed: false,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 474,
                                            end: 482,
                                            name: 'mutation'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 483,
                                            end: 493,
                                            name: 'addedNodes'
                                          }
                                        },
                                        body: {
                                          type: 'BlockStatement',
                                          start: 495,
                                          end: 605,
                                          body: [
                                            {
                                              type: 'IfStatement',
                                              start: 505,
                                              end: 597,
                                              test: {
                                                type: 'LogicalExpression',
                                                start: 509,
                                                end: 564,
                                                operator: '&&',
                                                left: {
                                                  type: 'BinaryExpression',
                                                  start: 509,
                                                  end: 532,
                                                  operator: '===',
                                                  left: {
                                                    type: 'MemberExpression',
                                                    start: 509,
                                                    end: 521,
                                                    computed: false,
                                                    optional: false,
                                                    object: {
                                                      type: 'Identifier',
                                                      start: 509,
                                                      end: 513,
                                                      name: 'node'
                                                    },
                                                    property: {
                                                      type: 'Identifier',
                                                      start: 514,
                                                      end: 521,
                                                      name: 'tagName'
                                                    }
                                                  },
                                                  right: {
                                                    type: 'Literal',
                                                    start: 526,
                                                    end: 532,
                                                    value: 'LINK',
                                                    raw: '"LINK"'
                                                  }
                                                },
                                                right: {
                                                  type: 'BinaryExpression',
                                                  start: 536,
                                                  end: 564,
                                                  operator: '===',
                                                  left: {
                                                    type: 'MemberExpression',
                                                    start: 536,
                                                    end: 544,
                                                    computed: false,
                                                    optional: false,
                                                    object: {
                                                      type: 'Identifier',
                                                      start: 536,
                                                      end: 540,
                                                      name: 'node'
                                                    },
                                                    property: {
                                                      type: 'Identifier',
                                                      start: 541,
                                                      end: 544,
                                                      name: 'rel'
                                                    }
                                                  },
                                                  right: {
                                                    type: 'Literal',
                                                    start: 549,
                                                    end: 564,
                                                    value: 'modulepreload',
                                                    raw: '"modulepreload"'
                                                  }
                                                }
                                              },
                                              consequent: {
                                                type: 'ExpressionStatement',
                                                start: 576,
                                                end: 597,
                                                expression: {
                                                  type: 'CallExpression',
                                                  start: 576,
                                                  end: 596,
                                                  optional: false,
                                                  callee: {
                                                    type: 'Identifier',
                                                    start: 576,
                                                    end: 590,
                                                    name: 'processPreload'
                                                  },
                                                  arguments: [
                                                    {
                                                      type: 'Identifier',
                                                      start: 591,
                                                      end: 595,
                                                      name: 'node'
                                                    }
                                                  ]
                                                }
                                              },
                                              alternate: null
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            id: null
                          }
                        ]
                      },
                      property: {
                        type: 'Identifier',
                        start: 617,
                        end: 624,
                        name: 'observe'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 625,
                        end: 633,
                        name: 'document'
                      },
                      {
                        type: 'ObjectExpression',
                        start: 635,
                        end: 669,
                        properties: [
                          {
                            type: 'Property',
                            start: 637,
                            end: 652,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 637,
                              end: 646,
                              name: 'childList'
                            },
                            value: {
                              type: 'Literal',
                              start: 648,
                              end: 652,
                              value: true,
                              raw: 'true'
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 654,
                            end: 667,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 654,
                              end: 661,
                              name: 'subtree'
                            },
                            value: {
                              type: 'Literal',
                              start: 663,
                              end: 667,
                              value: true,
                              raw: 'true'
                            },
                            kind: 'init'
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  type: 'FunctionDeclaration',
                  start: 674,
                  end: 1110,
                  async: false,
                  generator: false,
                  id: {
                    type: 'Identifier',
                    start: 683,
                    end: 695,
                    name: 'getFetchOpts'
                  },
                  params: [
                    {
                      type: 'Identifier',
                      start: 696,
                      end: 700,
                      name: 'link'
                    }
                  ],
                  body: {
                    type: 'BlockStatement',
                    start: 702,
                    end: 1110,
                    body: [
                      {
                        type: 'VariableDeclaration',
                        start: 708,
                        end: 729,
                        kind: 'const',
                        declarations: [
                          {
                            type: 'VariableDeclarator',
                            start: 714,
                            end: 728,
                            id: {
                              type: 'Identifier',
                              start: 714,
                              end: 723,
                              name: 'fetchOpts'
                            },
                            init: {
                              type: 'ObjectExpression',
                              start: 726,
                              end: 728,
                              properties: []
                            }
                          }
                        ]
                      },
                      {
                        type: 'IfStatement',
                        start: 734,
                        end: 791,
                        test: {
                          type: 'MemberExpression',
                          start: 738,
                          end: 752,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 738,
                            end: 742,
                            name: 'link'
                          },
                          property: {
                            type: 'Identifier',
                            start: 743,
                            end: 752,
                            name: 'integrity'
                          }
                        },
                        consequent: {
                          type: 'ExpressionStatement',
                          start: 754,
                          end: 791,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 754,
                            end: 790,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 754,
                              end: 773,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 754,
                                end: 763,
                                name: 'fetchOpts'
                              },
                              property: {
                                type: 'Identifier',
                                start: 764,
                                end: 773,
                                name: 'integrity'
                              }
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 776,
                              end: 790,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 776,
                                end: 780,
                                name: 'link'
                              },
                              property: {
                                type: 'Identifier',
                                start: 781,
                                end: 790,
                                name: 'integrity'
                              }
                            }
                          }
                        },
                        alternate: null
                      },
                      {
                        type: 'IfStatement',
                        start: 796,
                        end: 868,
                        test: {
                          type: 'MemberExpression',
                          start: 800,
                          end: 819,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 800,
                            end: 804,
                            name: 'link'
                          },
                          property: {
                            type: 'Identifier',
                            start: 805,
                            end: 819,
                            name: 'referrerPolicy'
                          }
                        },
                        consequent: {
                          type: 'ExpressionStatement',
                          start: 821,
                          end: 868,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 821,
                            end: 867,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 821,
                              end: 845,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 821,
                                end: 830,
                                name: 'fetchOpts'
                              },
                              property: {
                                type: 'Identifier',
                                start: 831,
                                end: 845,
                                name: 'referrerPolicy'
                              }
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 848,
                              end: 867,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 848,
                                end: 852,
                                name: 'link'
                              },
                              property: {
                                type: 'Identifier',
                                start: 853,
                                end: 867,
                                name: 'referrerPolicy'
                              }
                            }
                          }
                        },
                        alternate: null
                      },
                      {
                        type: 'IfStatement',
                        start: 873,
                        end: 1084,
                        test: {
                          type: 'BinaryExpression',
                          start: 877,
                          end: 915,
                          operator: '===',
                          left: {
                            type: 'MemberExpression',
                            start: 877,
                            end: 893,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 877,
                              end: 881,
                              name: 'link'
                            },
                            property: {
                              type: 'Identifier',
                              start: 882,
                              end: 893,
                              name: 'crossOrigin'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 898,
                            end: 915,
                            value: 'use-credentials',
                            raw: '"use-credentials"'
                          }
                        },
                        consequent: {
                          type: 'ExpressionStatement',
                          start: 923,
                          end: 957,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 923,
                            end: 956,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 923,
                              end: 944,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 923,
                                end: 932,
                                name: 'fetchOpts'
                              },
                              property: {
                                type: 'Identifier',
                                start: 933,
                                end: 944,
                                name: 'credentials'
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 947,
                              end: 956,
                              value: 'include',
                              raw: '"include"'
                            }
                          }
                        },
                        alternate: {
                          type: 'IfStatement',
                          start: 967,
                          end: 1084,
                          test: {
                            type: 'BinaryExpression',
                            start: 971,
                            end: 1003,
                            operator: '===',
                            left: {
                              type: 'MemberExpression',
                              start: 971,
                              end: 987,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 971,
                                end: 975,
                                name: 'link'
                              },
                              property: {
                                type: 'Identifier',
                                start: 976,
                                end: 987,
                                name: 'crossOrigin'
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 992,
                              end: 1003,
                              value: 'anonymous',
                              raw: '"anonymous"'
                            }
                          },
                          consequent: {
                            type: 'ExpressionStatement',
                            start: 1005,
                            end: 1036,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 1005,
                              end: 1035,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 1005,
                                end: 1026,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 1005,
                                  end: 1014,
                                  name: 'fetchOpts'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 1015,
                                  end: 1026,
                                  name: 'credentials'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 1029,
                                end: 1035,
                                value: 'omit',
                                raw: '"omit"'
                              }
                            }
                          },
                          alternate: {
                            type: 'ExpressionStatement',
                            start: 1046,
                            end: 1084,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 1046,
                              end: 1083,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 1046,
                                end: 1067,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 1046,
                                  end: 1055,
                                  name: 'fetchOpts'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 1056,
                                  end: 1067,
                                  name: 'credentials'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 1070,
                                end: 1083,
                                value: 'same-origin',
                                raw: '"same-origin"'
                              }
                            }
                          }
                        }
                      },
                      {
                        type: 'ReturnStatement',
                        start: 1089,
                        end: 1106,
                        argument: {
                          type: 'Identifier',
                          start: 1096,
                          end: 1105,
                          name: 'fetchOpts'
                        }
                      }
                    ]
                  },
                  expression: false
                },
                {
                  type: 'FunctionDeclaration',
                  start: 1113,
                  end: 1274,
                  async: false,
                  generator: false,
                  id: {
                    type: 'Identifier',
                    start: 1122,
                    end: 1136,
                    name: 'processPreload'
                  },
                  params: [
                    {
                      type: 'Identifier',
                      start: 1137,
                      end: 1141,
                      name: 'link'
                    }
                  ],
                  body: {
                    type: 'BlockStatement',
                    start: 1143,
                    end: 1274,
                    body: [
                      {
                        type: 'IfStatement',
                        start: 1149,
                        end: 1175,
                        test: {
                          type: 'MemberExpression',
                          start: 1153,
                          end: 1160,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1153,
                            end: 1157,
                            name: 'link'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1158,
                            end: 1160,
                            name: 'ep'
                          }
                        },
                        consequent: {
                          type: 'ReturnStatement',
                          start: 1168,
                          end: 1175,
                          argument: null
                        },
                        alternate: null
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 1180,
                        end: 1195,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 1180,
                          end: 1194,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 1180,
                            end: 1187,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 1180,
                              end: 1184,
                              name: 'link'
                            },
                            property: {
                              type: 'Identifier',
                              start: 1185,
                              end: 1187,
                              name: 'ep'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 1190,
                            end: 1194,
                            value: true,
                            raw: 'true'
                          }
                        }
                      },
                      {
                        type: 'VariableDeclaration',
                        start: 1200,
                        end: 1237,
                        kind: 'const',
                        declarations: [
                          {
                            type: 'VariableDeclarator',
                            start: 1206,
                            end: 1236,
                            id: {
                              type: 'Identifier',
                              start: 1206,
                              end: 1215,
                              name: 'fetchOpts'
                            },
                            init: {
                              type: 'CallExpression',
                              start: 1218,
                              end: 1236,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 1218,
                                end: 1230,
                                name: 'getFetchOpts'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 1231,
                                  end: 1235,
                                  name: 'link'
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 1242,
                        end: 1270,
                        expression: {
                          type: 'CallExpression',
                          start: 1242,
                          end: 1269,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 1242,
                            end: 1247,
                            name: 'fetch'
                          },
                          arguments: [
                            {
                              type: 'MemberExpression',
                              start: 1248,
                              end: 1257,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 1248,
                                end: 1252,
                                name: 'link'
                              },
                              property: {
                                type: 'Identifier',
                                start: 1253,
                                end: 1257,
                                name: 'href'
                              }
                            },
                            {
                              type: 'Identifier',
                              start: 1259,
                              end: 1268,
                              name: 'fetchOpts'
                            }
                          ]
                        }
                      }
                    ]
                  },
                  expression: false
                }
              ]
            },
            expression: false
          },
          arguments: []
        }
      }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 308,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 40,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 9,
          end: 12,
          imported: { type: 'Identifier', start: 9, end: 12, name: 'jsx' },
          local: { type: 'Identifier', start: 9, end: 12, name: 'jsx' }
        }
      ],
      source: {
        type: 'Literal',
        start: 20,
        end: 39,
        value: 'react/jsx-runtime',
        raw: '"react/jsx-runtime"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 41,
      end: 76,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 50,
          end: 60,
          imported: {
            type: 'Identifier',
            start: 50,
            end: 60,
            name: 'StrictMode'
          },
          local: {
            type: 'Identifier',
            start: 50,
            end: 60,
            name: 'StrictMode'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 68,
        end: 75,
        value: 'react',
        raw: '"react"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 77,
      end: 123,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 86,
          end: 96,
          imported: {
            type: 'Identifier',
            start: 86,
            end: 96,
            name: 'createRoot'
          },
          local: {
            type: 'Identifier',
            start: 86,
            end: 96,
            name: 'createRoot'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 104,
        end: 122,
        value: 'react-dom/client',
        raw: '"react-dom/client"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 124,
      end: 145,
      specifiers: [],
      source: {
        type: 'Literal',
        start: 131,
        end: 144,
        value: './index.css',
        raw: '"./index.css"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 146,
      end: 174,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 153,
          end: 156,
          local: { type: 'Identifier', start: 153, end: 156, name: 'App' }
        }
      ],
      source: {
        type: 'Literal',
        start: 162,
        end: 173,
        value: './App.tsx',
        raw: '"./App.tsx"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 175,
      end: 307,
      expression: {
        type: 'CallExpression',
        start: 175,
        end: 306,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 175,
          end: 225,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 175,
            end: 218,
            optional: false,
            callee: {
              type: 'Identifier',
              start: 175,
              end: 185,
              name: 'createRoot'
            },
            arguments: [
              {
                type: 'CallExpression',
                start: 186,
                end: 217,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 186,
                  end: 209,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 186,
                    end: 194,
                    name: 'document'
                  },
                  property: {
                    type: 'Identifier',
                    start: 195,
                    end: 209,
                    name: 'getElementById'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 210,
                    end: 216,
                    value: 'root',
                    raw: '"root"'
                  }
                ]
              }
            ]
          },
          property: { type: 'Identifier', start: 219, end: 225, name: 'render' }
        },
        arguments: [
          {
            type: 'CallExpression',
            start: 245,
            end: 304,
            optional: false,
            _rollupAnnotations: [ { end: 244, start: 229, type: 'pure' } ],
            callee: { type: 'Identifier', start: 245, end: 248, name: 'jsx' },
            arguments: [
              {
                type: 'Identifier',
                start: 249,
                end: 259,
                name: 'StrictMode'
              },
              {
                type: 'ObjectExpression',
                start: 261,
                end: 303,
                properties: [
                  {
                    type: 'Property',
                    start: 263,
                    end: 301,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 263,
                      end: 271,
                      name: 'children'
                    },
                    value: {
                      type: 'CallExpression',
                      start: 289,
                      end: 301,
                      optional: false,
                      _rollupAnnotations: [ { end: 288, start: 273, type: 'pure' } ],
                      callee: {
                        type: 'Identifier',
                        start: 289,
                        end: 292,
                        name: 'jsx'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 293,
                          end: 296,
                          name: 'App'
                        },
                        {
                          type: 'ObjectExpression',
                          start: 298,
                          end: 300,
                          properties: []
                        }
                      ]
                    },
                    kind: 'init'
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ],
  sourceType: 'module'
}
{ type: 'Program', start: 0, end: 0, body: [], sourceType: 'module' }
{
  type: 'Program',
  start: 0,
  end: 3823,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 56,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 9,
          end: 17,
          imported: { type: 'Identifier', start: 9, end: 17, name: 'Fragment' },
          local: { type: 'Identifier', start: 9, end: 17, name: 'Fragment' }
        },
        {
          type: 'ImportSpecifier',
          start: 19,
          end: 22,
          imported: { type: 'Identifier', start: 19, end: 22, name: 'jsx' },
          local: { type: 'Identifier', start: 19, end: 22, name: 'jsx' }
        },
        {
          type: 'ImportSpecifier',
          start: 24,
          end: 28,
          imported: { type: 'Identifier', start: 24, end: 28, name: 'jsxs' },
          local: { type: 'Identifier', start: 24, end: 28, name: 'jsxs' }
        }
      ],
      source: {
        type: 'Literal',
        start: 36,
        end: 55,
        value: 'react/jsx-runtime',
        raw: '"react/jsx-runtime"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 57,
      end: 90,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 66,
          end: 74,
          imported: { type: 'Identifier', start: 66, end: 74, name: 'useState' },
          local: { type: 'Identifier', start: 66, end: 74, name: 'useState' }
        }
      ],
      source: {
        type: 'Literal',
        start: 82,
        end: 89,
        value: 'react',
        raw: '"react"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 91,
      end: 134,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 98,
          end: 107,
          local: {
            type: 'Identifier',
            start: 98,
            end: 107,
            name: 'reactLogo'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 113,
        end: 133,
        value: './assets/react.svg',
        raw: '"./assets/react.svg"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 135,
      end: 168,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 142,
          end: 150,
          local: {
            type: 'Identifier',
            start: 142,
            end: 150,
            name: 'viteLogo'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 156,
        end: 167,
        value: '/vite.svg',
        raw: '"/vite.svg"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 169,
      end: 188,
      specifiers: [],
      source: {
        type: 'Literal',
        start: 176,
        end: 187,
        value: './App.css',
        raw: '"./App.css"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 189,
      end: 231,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 198,
          end: 203,
          imported: { type: 'Identifier', start: 198, end: 203, name: 'trans' },
          local: { type: 'Identifier', start: 198, end: 203, name: 'trans' }
        }
      ],
      source: {
        type: 'Literal',
        start: 211,
        end: 230,
        value: './utils/translate',
        raw: '"./utils/translate"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 232,
      end: 271,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 239,
          end: 244,
          local: { type: 'Identifier', start: 239, end: 244, name: 'Trans' }
        }
      ],
      source: {
        type: 'Literal',
        start: 250,
        end: 270,
        value: './components/Trans',
        raw: '"./components/Trans"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 272,
      end: 295,
      kind: 'const',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 278,
          end: 294,
          id: {
            type: 'Identifier',
            start: 278,
            end: 286,
            name: 'currency'
          },
          init: {
            type: 'Literal',
            start: 289,
            end: 294,
            value: 'KES',
            raw: '"KES"'
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 296,
      end: 332,
      kind: 'const',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 302,
          end: 331,
          id: {
            type: 'Identifier',
            start: 302,
            end: 326,
            name: 'VITE_REFERRAL_MIN_PAYOUT'
          },
          init: {
            type: 'Literal',
            start: 329,
            end: 331,
            raw: '14',
            value: 14
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 333,
      end: 3802,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 342, end: 345, name: 'App' },
      params: [],
      body: {
        type: 'BlockStatement',
        start: 348,
        end: 3802,
        body: [
          {
            type: 'VariableDeclaration',
            start: 352,
            end: 390,
            kind: 'const',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 358,
                end: 389,
                id: {
                  type: 'ArrayPattern',
                  start: 358,
                  end: 375,
                  elements: [
                    {
                      type: 'Identifier',
                      start: 359,
                      end: 364,
                      name: 'count'
                    },
                    {
                      type: 'Identifier',
                      start: 366,
                      end: 374,
                      name: 'setCount'
                    }
                  ]
                },
                init: {
                  type: 'CallExpression',
                  start: 378,
                  end: 389,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 378,
                    end: 386,
                    name: 'useState'
                  },
                  arguments: [
                    {
                      type: 'Literal',
                      start: 387,
                      end: 388,
                      raw: '0',
                      value: 0
                    }
                  ]
                }
              }
            ]
          },
          {
            type: 'ReturnStatement',
            start: 393,
            end: 3800,
            argument: {
              type: 'CallExpression',
              start: 416,
              end: 3799,
              optional: false,
              _rollupAnnotations: [ { end: 415, start: 400, type: 'pure' } ],
              callee: {
                type: 'Identifier',
                start: 416,
                end: 420,
                name: 'jsxs'
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 421,
                  end: 429,
                  name: 'Fragment'
                },
                {
                  type: 'ObjectExpression',
                  start: 431,
                  end: 3798,
                  properties: [
                    {
                      type: 'Property',
                      start: 433,
                      end: 3796,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 433,
                        end: 441,
                        name: 'children'
                      },
                      value: {
                        type: 'ArrayExpression',
                        start: 443,
                        end: 3796,
                        elements: [
                          {
                            type: 'CallExpression',
                            start: 465,
                            end: 855,
                            optional: false,
                            _rollupAnnotations: [ { end: 464, start: 449, type: 'pure' } ],
                            callee: {
                              type: 'Identifier',
                              start: 465,
                              end: 469,
                              name: 'jsxs'
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 470,
                                end: 475,
                                value: 'div',
                                raw: '"div"'
                              },
                              {
                                type: 'ObjectExpression',
                                start: 477,
                                end: 854,
                                properties: [
                                  {
                                    type: 'Property',
                                    start: 479,
                                    end: 852,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 479,
                                      end: 487,
                                      name: 'children'
                                    },
                                    value: {
                                      type: 'ArrayExpression',
                                      start: 489,
                                      end: 852,
                                      elements: [
                                        {
                                          type: 'CallExpression',
                                          start: 513,
                                          end: 663,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 512,
                                              start: 497,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 513,
                                            end: 516,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 517,
                                              end: 520,
                                              value: 'a',
                                              raw: '"a"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 522,
                                              end: 662,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 524,
                                                  end: 548,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 524,
                                                    end: 528,
                                                    name: 'href'
                                                  },
                                                  value: {
                                                    type: 'Literal',
                                                    start: 530,
                                                    end: 548,
                                                    value: 'https://vite.dev',
                                                    raw: '"https://vite.dev"'
                                                  },
                                                  kind: 'init'
                                                },
                                                {
                                                  type: 'Property',
                                                  start: 550,
                                                  end: 566,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 550,
                                                    end: 556,
                                                    name: 'target'
                                                  },
                                                  value: {
                                                    type: 'Literal',
                                                    start: 558,
                                                    end: 566,
                                                    value: '_blank',
                                                    raw: '"_blank"'
                                                  },
                                                  kind: 'init'
                                                },
                                                {
                                                  type: 'Property',
                                                  start: 568,
                                                  end: 660,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 568,
                                                    end: 576,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 594,
                                                    end: 660,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 593,
                                                        start: 578,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 594,
                                                      end: 597,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Literal',
                                                        start: 598,
                                                        end: 603,
                                                        value: 'img',
                                                        raw: '"img"'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 605,
                                                        end: 659,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 607,
                                                            end: 620,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 607,
                                                              end: 610,
                                                              name: 'src'
                                                            },
                                                            value: {
                                                              type: 'Identifier',
                                                              start: 612,
                                                              end: 620,
                                                              name: 'viteLogo'
                                                            },
                                                            kind: 'init'
                                                          },
                                                          {
                                                            type: 'Property',
                                                            start: 622,
                                                            end: 639,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 622,
                                                              end: 631,
                                                              name: 'className'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 633,
                                                              end: 639,
                                                              value: 'logo',
                                                              raw: '"logo"'
                                                            },
                                                            kind: 'init'
                                                          },
                                                          {
                                                            type: 'Property',
                                                            start: 641,
                                                            end: 657,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 641,
                                                              end: 644,
                                                              name: 'alt'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 646,
                                                              end: 657,
                                                              value: 'Vite logo',
                                                              raw: '"Vite logo"'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 687,
                                          end: 846,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 686,
                                              start: 671,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 687,
                                            end: 690,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 691,
                                              end: 694,
                                              value: 'a',
                                              raw: '"a"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 696,
                                              end: 845,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 698,
                                                  end: 723,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 698,
                                                    end: 702,
                                                    name: 'href'
                                                  },
                                                  value: {
                                                    type: 'Literal',
                                                    start: 704,
                                                    end: 723,
                                                    value: 'https://react.dev',
                                                    raw: '"https://react.dev"'
                                                  },
                                                  kind: 'init'
                                                },
                                                {
                                                  type: 'Property',
                                                  start: 725,
                                                  end: 741,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 725,
                                                    end: 731,
                                                    name: 'target'
                                                  },
                                                  value: {
                                                    type: 'Literal',
                                                    start: 733,
                                                    end: 741,
                                                    value: '_blank',
                                                    raw: '"_blank"'
                                                  },
                                                  kind: 'init'
                                                },
                                                {
                                                  type: 'Property',
                                                  start: 743,
                                                  end: 843,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 743,
                                                    end: 751,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 769,
                                                    end: 843,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 768,
                                                        start: 753,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 769,
                                                      end: 772,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Literal',
                                                        start: 773,
                                                        end: 778,
                                                        value: 'img',
                                                        raw: '"img"'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 780,
                                                        end: 842,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 782,
                                                            end: 796,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 782,
                                                              end: 785,
                                                              name: 'src'
                                                            },
                                                            value: {
                                                              type: 'Identifier',
                                                              start: 787,
                                                              end: 796,
                                                              name: 'reactLogo'
                                                            },
                                                            kind: 'init'
                                                          },
                                                          {
                                                            type: 'Property',
                                                            start: 798,
                                                            end: 821,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 798,
                                                              end: 807,
                                                              name: 'className'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 809,
                                                              end: 821,
                                                              value: 'logo react',
                                                              raw: '"logo react"'
                                                            },
                                                            kind: 'init'
                                                          },
                                                          {
                                                            type: 'Property',
                                                            start: 823,
                                                            end: 840,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 823,
                                                              end: 826,
                                                              name: 'alt'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 828,
                                                              end: 840,
                                                              value: 'React logo',
                                                              raw: '"React logo"'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            type: 'CallExpression',
                            start: 877,
                            end: 968,
                            optional: false,
                            _rollupAnnotations: [ { end: 876, start: 861, type: 'pure' } ],
                            callee: {
                              type: 'Identifier',
                              start: 877,
                              end: 881,
                              name: 'jsxs'
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 882,
                                end: 886,
                                value: 'h1',
                                raw: '"h1"'
                              },
                              {
                                type: 'ObjectExpression',
                                start: 888,
                                end: 967,
                                properties: [
                                  {
                                    type: 'Property',
                                    start: 890,
                                    end: 965,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 890,
                                      end: 898,
                                      name: 'children'
                                    },
                                    value: {
                                      type: 'ArrayExpression',
                                      start: 900,
                                      end: 965,
                                      elements: [
                                        {
                                          type: 'CallExpression',
                                          start: 908,
                                          end: 934,
                                          optional: false,
                                          callee: {
                                            type: 'Identifier',
                                            start: 908,
                                            end: 913,
                                            name: 'trans'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 914,
                                              end: 933,
                                              value: 'Edit Vite + React',
                                              raw: '"Edit Vite + React"'
                                            }
                                          ]
                                        },
                                        {
                                          type: 'Literal',
                                          start: 942,
                                          end: 945,
                                          value: ' ',
                                          raw: '" "'
                                        },
                                        {
                                          type: 'Literal',
                                          start: 953,
                                          end: 959,
                                          value: 'smak',
                                          raw: '"smak"'
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            type: 'CallExpression',
                            start: 990,
                            end: 1693,
                            optional: false,
                            _rollupAnnotations: [ { end: 989, start: 974, type: 'pure' } ],
                            callee: {
                              type: 'Identifier',
                              start: 990,
                              end: 994,
                              name: 'jsxs'
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 995,
                                end: 1000,
                                value: 'div',
                                raw: '"div"'
                              },
                              {
                                type: 'ObjectExpression',
                                start: 1002,
                                end: 1692,
                                properties: [
                                  {
                                    type: 'Property',
                                    start: 1004,
                                    end: 1021,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1004,
                                      end: 1013,
                                      name: 'className'
                                    },
                                    value: {
                                      type: 'Literal',
                                      start: 1015,
                                      end: 1021,
                                      value: 'card',
                                      raw: '"card"'
                                    },
                                    kind: 'init'
                                  },
                                  {
                                    type: 'Property',
                                    start: 1023,
                                    end: 1690,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1023,
                                      end: 1031,
                                      name: 'children'
                                    },
                                    value: {
                                      type: 'ArrayExpression',
                                      start: 1033,
                                      end: 1690,
                                      elements: [
                                        {
                                          type: 'CallExpression',
                                          start: 1057,
                                          end: 1199,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 1056,
                                              start: 1041,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 1057,
                                            end: 1061,
                                            name: 'jsxs'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 1062,
                                              end: 1070,
                                              value: 'button',
                                              raw: '"button"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 1072,
                                              end: 1198,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 1074,
                                                  end: 1121,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 1074,
                                                    end: 1081,
                                                    name: 'onClick'
                                                  },
                                                  value: {
                                                    type: 'ArrowFunctionExpression',
                                                    start: 1083,
                                                    end: 1121,
                                                    async: false,
                                                    expression: true,
                                                    generator: false,
                                                    params: [],
                                                    body: {
                                                      type: 'CallExpression',
                                                      start: 1089,
                                                      end: 1121,
                                                      optional: false,
                                                      callee: {
                                                        type: 'Identifier',
                                                        start: 1089,
                                                        end: 1097,
                                                        name: 'setCount'
                                                      },
                                                      arguments: [
                                                        {
                                                          type: 'ArrowFunctionExpression',
                                                          start: 1098,
                                                          end: 1120,
                                                          async: false,
                                                          expression: true,
                                                          generator: false,
                                                          params: [
                                                            {
                                                              type: 'Identifier',
                                                              start: 1099,
                                                              end: 1105,
                                                              name: 'count2'
                                                            }
                                                          ],
                                                          body: {
                                                            type: 'BinaryExpression',
                                                            start: 1110,
                                                            end: 1120,
                                                            operator: '+',
                                                            left: {
                                                              type: 'Identifier',
                                                              start: 1110,
                                                              end: 1116,
                                                              name: 'count2'
                                                            },
                                                            right: {
                                                              type: 'Literal',
                                                              start: 1119,
                                                              end: 1120,
                                                              raw: '1',
                                                              value: 1
                                                            }
                                                          },
                                                          id: null
                                                        }
                                                      ]
                                                    },
                                                    id: null
                                                  },
                                                  kind: 'init'
                                                },
                                                {
                                                  type: 'Property',
                                                  start: 1123,
                                                  end: 1196,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 1123,
                                                    end: 1131,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'ArrayExpression',
                                                    start: 1133,
                                                    end: 1196,
                                                    elements: [
                                                      {
                                                        type: 'CallExpression',
                                                        start: 1143,
                                                        end: 1160,
                                                        optional: false,
                                                        callee: {
                                                          type: 'Identifier',
                                                          start: 1143,
                                                          end: 1148,
                                                          name: 'trans'
                                                        },
                                                        arguments: [
                                                          {
                                                            type: 'Literal',
                                                            start: 1149,
                                                            end: 1159,
                                                            value: 'count is',
                                                            raw: '"count is"'
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        type: 'Literal',
                                                        start: 1170,
                                                        end: 1173,
                                                        value: ' ',
                                                        raw: '" "'
                                                      },
                                                      {
                                                        type: 'Identifier',
                                                        start: 1183,
                                                        end: 1188,
                                                        name: 'count'
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 1223,
                                          end: 1684,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 1222,
                                              start: 1207,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 1223,
                                            end: 1226,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 1227,
                                              end: 1230,
                                              value: 'p',
                                              raw: '"p"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 1232,
                                              end: 1683,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 1234,
                                                  end: 1681,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 1234,
                                                    end: 1242,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 1260,
                                                    end: 1681,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 1259,
                                                        start: 1244,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 1260,
                                                      end: 1264,
                                                      name: 'jsxs'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 1265,
                                                        end: 1270,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 1272,
                                                        end: 1680,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 1274,
                                                            end: 1678,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 1274,
                                                              end: 1282,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'ArrayExpression',
                                                              start: 1284,
                                                              end: 1678,
                                                              elements: [
                                                                {
                                                                  type: 'Literal',
                                                                  start: 1294,
                                                                  end: 1300,
                                                                  value: 'Edit',
                                                                  raw: '"Edit"'
                                                                },
                                                                {
                                                                  type: 'CallExpression',
                                                                  start: 1326,
                                                                  end: 1581,
                                                                  optional: false,
                                                                  _rollupAnnotations: [
                                                                    {
                                                                      end: 1325,
                                                                      start: 1310,
                                                                      type: 'pure'
                                                                    }
                                                                  ],
                                                                  callee: {
                                                                    type: 'Identifier',
                                                                    start: 1326,
                                                                    end: 1330,
                                                                    name: 'jsxs'
                                                                  },
                                                                  arguments: [
                                                                    {
                                                                      type: 'Literal',
                                                                      start: 1331,
                                                                      end: 1337,
                                                                      value: 'code',
                                                                      raw: '"code"'
                                                                    },
                                                                    {
                                                                      type: 'ObjectExpression',
                                                                      start: 1339,
                                                                      end: 1580,
                                                                      properties: [
                                                                        {
                                                                          type: 'Property',
                                                                          start: 1341,
                                                                          end: 1364,
                                                                          method: false,
                                                                          shorthand: false,
                                                                          computed: false,
                                                                          key: {
                                                                            type: 'Identifier',
                                                                            start: 1341,
                                                                            end: 1346,
                                                                            name: 'style'
                                                                          },
                                                                          value: {
                                                                            type: 'ObjectExpression',
                                                                            start: 1348,
                                                                            end: 1364,
                                                                            properties: [
                                                                              {
                                                                                type: 'Property',
                                                                                start: 1350,
                                                                                end: 1362,
                                                                                method: false,
                                                                                shorthand: false,
                                                                                computed: false,
                                                                                key: {
                                                                                  type: 'Identifier',
                                                                                  start: 1350,
                                                                                  end: 1355,
                                                                                  name: 'color'
                                                                                },
                                                                                value: {
                                                                                  type: 'Literal',
                                                                                  start: 1357,
                                                                                  end: 1362,
                                                                                  value: 'red',
                                                                                  raw: '"red"'
                                                                                },
                                                                                kind: 'init'
                                                                              }
                                                                            ]
                                                                          },
                                                                          kind: 'init'
                                                                        },
                                                                        {
                                                                          type: 'Property',
                                                                          start: 1366,
                                                                          end: 1578,
                                                                          method: false,
                                                                          shorthand: false,
                                                                          computed: false,
                                                                          key: {
                                                                            type: 'Identifier',
                                                                            start: 1366,
                                                                            end: 1374,
                                                                            name: 'children'
                                                                          },
                                                                          value: {
                                                                            type: 'ArrayExpression',
                                                                            start: 1376,
                                                                            end: 1578,
                                                                            elements: [
                                                                              {
                                                                                type: 'Literal',
                                                                                start: 1388,
                                                                                end: 1401,
                                                                                value: 'src/App.tsx',
                                                                                raw: '"src/App.tsx"'
                                                                              },
                                                                              {
                                                                                type: 'Literal',
                                                                                start: 1413,
                                                                                end: 1416,
                                                                                value: ' ',
                                                                                raw: '" "'
                                                                              },
                                                                              {
                                                                                type: 'CallExpression',
                                                                                start: 1444,
                                                                                end: 1568,
                                                                                optional: false,
                                                                                _rollupAnnotations: [
                                                                                  {
                                                                                    end: 1443,
                                                                                    start: 1428,
                                                                                    type: 'pure'
                                                                                  }
                                                                                ],
                                                                                callee: {
                                                                                  type: 'Identifier',
                                                                                  start: 1444,
                                                                                  end: 1448,
                                                                                  name: 'jsxs'
                                                                                },
                                                                                arguments: [
                                                                                  {
                                                                                    type: 'Literal',
                                                                                    start: 1449,
                                                                                    end: 1455,
                                                                                    value: 'span',
                                                                                    raw: '"span"'
                                                                                  },
                                                                                  {
                                                                                    type: 'ObjectExpression',
                                                                                    start: 1457,
                                                                                    end: 1567,
                                                                                    properties: [
                                                                                      {
                                                                                        type: 'Property',
                                                                                        start: 1459,
                                                                                        end: 1565,
                                                                                        method: false,
                                                                                        shorthand: false,
                                                                                        computed: false,
                                                                                        key: {
                                                                                          type: 'Identifier',
                                                                                          start: 1459,
                                                                                          end: 1467,
                                                                                          name: 'children'
                                                                                        },
                                                                                        value: {
                                                                                          type: 'ArrayExpression',
                                                                                          start: 1469,
                                                                                          end: 1565,
                                                                                          elements: [
                                                                                            {
                                                                                              type: 'Literal',
                                                                                              start: 1483,
                                                                                              end: 1487,
                                                                                              value: '3 ',
                                                                                              raw: '"3 "'
                                                                                            },
                                                                                            {
                                                                                              type: 'CallExpression',
                                                                                              start: 1517,
                                                                                              end: 1553,
                                                                                              optional: false,
                                                                                              _rollupAnnotations: [
                                                                                                {
                                                                                                  end: 1516,
                                                                                                  start: 1501,
                                                                                                  type: 'pure'
                                                                                                }
                                                                                              ],
                                                                                              callee: {
                                                                                                type: 'Identifier',
                                                                                                start: 1517,
                                                                                                end: 1520,
                                                                                                name: 'jsx'
                                                                                              },
                                                                                              arguments: [
                                                                                                {
                                                                                                  type: 'Literal',
                                                                                                  start: 1521,
                                                                                                  end: 1529,
                                                                                                  value: 'strong',
                                                                                                  raw: '"strong"'
                                                                                                },
                                                                                                {
                                                                                                  type: 'ObjectExpression',
                                                                                                  start: 1531,
                                                                                                  end: 1552,
                                                                                                  properties: [
                                                                                                    {
                                                                                                      type: 'Property',
                                                                                                      start: 1533,
                                                                                                      end: 1550,
                                                                                                      method: false,
                                                                                                      shorthand: false,
                                                                                                      computed: false,
                                                                                                      key: {
                                                                                                        type: 'Identifier',
                                                                                                        start: 1533,
                                                                                                        end: 1541,
                                                                                                        name: 'children'
                                                                                                      },
                                                                                                      value: {
                                                                                                        type: 'Literal',
                                                                                                        start: 1543,
                                                                                                        end: 1550,
                                                                                                        value: 'goats',
                                                                                                        raw: '"goats"'
                                                                                                      },
                                                                                                      kind: 'init'
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        kind: 'init'
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          kind: 'init'
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  type: 'Literal',
                                                                  start: 1591,
                                                                  end: 1610,
                                                                  value: 'and save to test ',
                                                                  raw: '"and save to test "'
                                                                },
                                                                {
                                                                  type: 'CallExpression',
                                                                  start: 1636,
                                                                  end: 1670,
                                                                  optional: false,
                                                                  _rollupAnnotations: [
                                                                    {
                                                                      end: 1635,
                                                                      start: 1620,
                                                                      type: 'pure'
                                                                    }
                                                                  ],
                                                                  callee: {
                                                                    type: 'Identifier',
                                                                    start: 1636,
                                                                    end: 1639,
                                                                    name: 'jsx'
                                                                  },
                                                                  arguments: [
                                                                    {
                                                                      type: 'Literal',
                                                                      start: 1640,
                                                                      end: 1648,
                                                                      value: 'strong',
                                                                      raw: '"strong"'
                                                                    },
                                                                    {
                                                                      type: 'ObjectExpression',
                                                                      start: 1650,
                                                                      end: 1669,
                                                                      properties: [
                                                                        {
                                                                          type: 'Property',
                                                                          start: 1652,
                                                                          end: 1667,
                                                                          method: false,
                                                                          shorthand: false,
                                                                          computed: false,
                                                                          key: {
                                                                            type: 'Identifier',
                                                                            start: 1652,
                                                                            end: 1660,
                                                                            name: 'children'
                                                                          },
                                                                          value: {
                                                                            type: 'Literal',
                                                                            start: 1662,
                                                                            end: 1667,
                                                                            value: 'HMR',
                                                                            raw: '"HMR"'
                                                                          },
                                                                          kind: 'init'
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            type: 'CallExpression',
                            start: 1715,
                            end: 1823,
                            optional: false,
                            _rollupAnnotations: [
                              { end: 1714, start: 1699, type: 'pure' }
                            ],
                            callee: {
                              type: 'Identifier',
                              start: 1715,
                              end: 1718,
                              name: 'jsx'
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 1719,
                                end: 1722,
                                value: 'p',
                                raw: '"p"'
                              },
                              {
                                type: 'ObjectExpression',
                                start: 1724,
                                end: 1822,
                                properties: [
                                  {
                                    type: 'Property',
                                    start: 1726,
                                    end: 1752,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1726,
                                      end: 1735,
                                      name: 'className'
                                    },
                                    value: {
                                      type: 'Literal',
                                      start: 1737,
                                      end: 1752,
                                      value: 'read-the-docs',
                                      raw: '"read-the-docs"'
                                    },
                                    kind: 'init'
                                  },
                                  {
                                    type: 'Property',
                                    start: 1754,
                                    end: 1820,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1754,
                                      end: 1762,
                                      name: 'children'
                                    },
                                    value: {
                                      type: 'CallExpression',
                                      start: 1764,
                                      end: 1820,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 1764,
                                        end: 1769,
                                        name: 'trans'
                                      },
                                      arguments: [
                                        {
                                          type: 'Literal',
                                          start: 1770,
                                          end: 1819,
                                          value: 'Click on the Vite and React logos to learn more',
                                          raw: '"Click on the Vite and React logos to learn more"'
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            type: 'CallExpression',
                            start: 1845,
                            end: 3792,
                            optional: false,
                            _rollupAnnotations: [
                              { end: 1844, start: 1829, type: 'pure' }
                            ],
                            callee: {
                              type: 'Identifier',
                              start: 1845,
                              end: 1849,
                              name: 'jsxs'
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 1850,
                                end: 1855,
                                value: 'div',
                                raw: '"div"'
                              },
                              {
                                type: 'ObjectExpression',
                                start: 1857,
                                end: 3791,
                                properties: [
                                  {
                                    type: 'Property',
                                    start: 1859,
                                    end: 1923,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1859,
                                      end: 1864,
                                      name: 'style'
                                    },
                                    value: {
                                      type: 'ObjectExpression',
                                      start: 1866,
                                      end: 1923,
                                      properties: [
                                        {
                                          type: 'Property',
                                          start: 1874,
                                          end: 1893,
                                          method: false,
                                          shorthand: false,
                                          computed: false,
                                          key: {
                                            type: 'Identifier',
                                            start: 1874,
                                            end: 1883,
                                            name: 'textAlign'
                                          },
                                          value: {
                                            type: 'Literal',
                                            start: 1885,
                                            end: 1893,
                                            value: 'center',
                                            raw: '"center"'
                                          },
                                          kind: 'init'
                                        },
                                        {
                                          type: 'Property',
                                          start: 1901,
                                          end: 1917,
                                          method: false,
                                          shorthand: false,
                                          computed: false,
                                          key: {
                                            type: 'Identifier',
                                            start: 1901,
                                            end: 1909,
                                            name: 'maxWidth'
                                          },
                                          value: {
                                            type: 'Literal',
                                            start: 1911,
                                            end: 1917,
                                            value: '70ch',
                                            raw: '"70ch"'
                                          },
                                          kind: 'init'
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  },
                                  {
                                    type: 'Property',
                                    start: 1925,
                                    end: 3789,
                                    method: false,
                                    shorthand: false,
                                    computed: false,
                                    key: {
                                      type: 'Identifier',
                                      start: 1925,
                                      end: 1933,
                                      name: 'children'
                                    },
                                    value: {
                                      type: 'ArrayExpression',
                                      start: 1935,
                                      end: 3789,
                                      elements: [
                                        {
                                          type: 'CallExpression',
                                          start: 1959,
                                          end: 2093,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 1958,
                                              start: 1943,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 1959,
                                            end: 1963,
                                            name: 'jsxs'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 1964,
                                              end: 1968,
                                              value: 'h4',
                                              raw: '"h4"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 1970,
                                              end: 2092,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 1972,
                                                  end: 2090,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 1972,
                                                    end: 1980,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'ArrayExpression',
                                                    start: 1982,
                                                    end: 2090,
                                                    elements: [
                                                      {
                                                        type: 'Literal',
                                                        start: 1992,
                                                        end: 1995,
                                                        value: ' ',
                                                        raw: '" "'
                                                      },
                                                      {
                                                        type: 'CallExpression',
                                                        start: 2021,
                                                        end: 2082,
                                                        optional: false,
                                                        _rollupAnnotations: [
                                                          {
                                                            end: 2020,
                                                            start: 2005,
                                                            type: 'pure'
                                                          }
                                                        ],
                                                        callee: {
                                                          type: 'Identifier',
                                                          start: 2021,
                                                          end: 2024,
                                                          name: 'jsx'
                                                        },
                                                        arguments: [
                                                          {
                                                            type: 'Identifier',
                                                            start: 2025,
                                                            end: 2030,
                                                            name: 'Trans'
                                                          },
                                                          {
                                                            type: 'ObjectExpression',
                                                            start: 2032,
                                                            end: 2081,
                                                            properties: [
                                                              {
                                                                type: 'Property',
                                                                start: 2034,
                                                                end: 2079,
                                                                method: false,
                                                                shorthand: false,
                                                                computed: false,
                                                                key: {
                                                                  type: 'Identifier',
                                                                  start: 2034,
                                                                  end: 2042,
                                                                  name: 'children'
                                                                },
                                                                value: {
                                                                  type: 'Literal',
                                                                  start: 2044,
                                                                  end: 2079,
                                                                  value: 'what is betkumi affiliate program',
                                                                  raw: '"what is betkumi affiliate program"'
                                                                },
                                                                kind: 'init'
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 2117,
                                          end: 2358,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 2116,
                                              start: 2101,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 2117,
                                            end: 2120,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 2121,
                                              end: 2124,
                                              value: 'p',
                                              raw: '"p"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 2126,
                                              end: 2357,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 2128,
                                                  end: 2355,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 2128,
                                                    end: 2136,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 2154,
                                                    end: 2355,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 2153,
                                                        start: 2138,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 2154,
                                                      end: 2157,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 2158,
                                                        end: 2163,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 2165,
                                                        end: 2354,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 2167,
                                                            end: 2352,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 2167,
                                                              end: 2175,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 2177,
                                                              end: 2352,
                                                              value: 'BetKumi Affiliates is a program where we give you the opportunity to earn money every month simply by giving us the chance to welcome more players through our virtual doors.',
                                                              raw: '"BetKumi Affiliates is a program where we give you the opportunity to earn money every month simply by giving us the chance to welcome more players through our virtual doors."'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 2382,
                                          end: 2486,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 2381,
                                              start: 2366,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 2382,
                                            end: 2385,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 2386,
                                              end: 2390,
                                              value: 'h4',
                                              raw: '"h4"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 2392,
                                              end: 2485,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 2394,
                                                  end: 2483,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 2394,
                                                    end: 2402,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 2420,
                                                    end: 2483,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 2419,
                                                        start: 2404,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 2420,
                                                      end: 2423,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 2424,
                                                        end: 2429,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 2431,
                                                        end: 2482,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 2433,
                                                            end: 2480,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 2433,
                                                              end: 2441,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 2443,
                                                              end: 2480,
                                                              value: 'How does the Affiliate Program work',
                                                              raw: '"How does the Affiliate Program work"'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 2510,
                                          end: 2790,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 2509,
                                              start: 2494,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 2510,
                                            end: 2513,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 2514,
                                              end: 2517,
                                              value: 'p',
                                              raw: '"p"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 2519,
                                              end: 2789,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 2521,
                                                  end: 2787,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 2521,
                                                    end: 2529,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 2547,
                                                    end: 2787,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 2546,
                                                        start: 2531,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 2547,
                                                      end: 2550,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 2551,
                                                        end: 2556,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 2558,
                                                        end: 2786,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 2560,
                                                            end: 2784,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 2560,
                                                              end: 2568,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 2570,
                                                              end: 2784,
                                                              value: 'When you share your referral link with any of your friends, family or advertise the link and a player signup at our site that player becomes your referral and they will earn you commissions by playing at Betkumi.',
                                                              raw: '"When you share your referral link with any of your friends, family or advertise the link and a player signup at our site that player becomes your referral and they will earn you commissions by playing at Betkumi."'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 2814,
                                          end: 2902,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 2813,
                                              start: 2798,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 2814,
                                            end: 2817,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 2818,
                                              end: 2822,
                                              value: 'h4',
                                              raw: '"h4"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 2824,
                                              end: 2901,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 2826,
                                                  end: 2899,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 2826,
                                                    end: 2834,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 2852,
                                                    end: 2899,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 2851,
                                                        start: 2836,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 2852,
                                                      end: 2855,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 2856,
                                                        end: 2861,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 2863,
                                                        end: 2898,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 2865,
                                                            end: 2896,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 2865,
                                                              end: 2873,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 2875,
                                                              end: 2896,
                                                              value: 'How much do i earn?',
                                                              raw: '"How much do i earn?"'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 2926,
                                          end: 3120,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 2925,
                                              start: 2910,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 2926,
                                            end: 2929,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 2930,
                                              end: 2933,
                                              value: 'p',
                                              raw: '"p"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 2935,
                                              end: 3119,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 2937,
                                                  end: 3117,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 2937,
                                                    end: 2945,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 2963,
                                                    end: 3117,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 2962,
                                                        start: 2947,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 2963,
                                                      end: 2966,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 2967,
                                                        end: 2972,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 2974,
                                                        end: 3116,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 2976,
                                                            end: 3114,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 2976,
                                                              end: 2984,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 2986,
                                                              end: 3114,
                                                              value: 'As part of our affiliate network, you will be paid in a revenue share based model. You earn a 30% commission on revenues made.',
                                                              raw: '"As part of our affiliate network, you will be paid in a revenue share based model. You earn a 30% commission on revenues made."'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 3144,
                                          end: 3233,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 3143,
                                              start: 3128,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 3144,
                                            end: 3147,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 3148,
                                              end: 3152,
                                              value: 'h4',
                                              raw: '"h4"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 3154,
                                              end: 3232,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 3156,
                                                  end: 3230,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 3156,
                                                    end: 3164,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 3182,
                                                    end: 3230,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 3181,
                                                        start: 3166,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 3182,
                                                      end: 3185,
                                                      name: 'jsx'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Identifier',
                                                        start: 3186,
                                                        end: 3191,
                                                        name: 'Trans'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 3193,
                                                        end: 3229,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 3195,
                                                            end: 3227,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 3195,
                                                              end: 3203,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'Literal',
                                                              start: 3205,
                                                              end: 3227,
                                                              value: 'When can I withdraw?',
                                                              raw: '"When can I withdraw?"'
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          type: 'CallExpression',
                                          start: 3257,
                                          end: 3783,
                                          optional: false,
                                          _rollupAnnotations: [
                                            {
                                              end: 3256,
                                              start: 3241,
                                              type: 'pure'
                                            }
                                          ],
                                          callee: {
                                            type: 'Identifier',
                                            start: 3257,
                                            end: 3260,
                                            name: 'jsx'
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 3261,
                                              end: 3266,
                                              value: 'div',
                                              raw: '"div"'
                                            },
                                            {
                                              type: 'ObjectExpression',
                                              start: 3268,
                                              end: 3782,
                                              properties: [
                                                {
                                                  type: 'Property',
                                                  start: 3270,
                                                  end: 3780,
                                                  method: false,
                                                  shorthand: false,
                                                  computed: false,
                                                  key: {
                                                    type: 'Identifier',
                                                    start: 3270,
                                                    end: 3278,
                                                    name: 'children'
                                                  },
                                                  value: {
                                                    type: 'CallExpression',
                                                    start: 3296,
                                                    end: 3780,
                                                    optional: false,
                                                    _rollupAnnotations: [
                                                      {
                                                        end: 3295,
                                                        start: 3280,
                                                        type: 'pure'
                                                      }
                                                    ],
                                                    callee: {
                                                      type: 'Identifier',
                                                      start: 3296,
                                                      end: 3300,
                                                      name: 'jsxs'
                                                    },
                                                    arguments: [
                                                      {
                                                        type: 'Literal',
                                                        start: 3301,
                                                        end: 3305,
                                                        value: 'ul',
                                                        raw: '"ul"'
                                                      },
                                                      {
                                                        type: 'ObjectExpression',
                                                        start: 3307,
                                                        end: 3779,
                                                        properties: [
                                                          {
                                                            type: 'Property',
                                                            start: 3309,
                                                            end: 3777,
                                                            method: false,
                                                            shorthand: false,
                                                            computed: false,
                                                            key: {
                                                              type: 'Identifier',
                                                              start: 3309,
                                                              end: 3317,
                                                              name: 'children'
                                                            },
                                                            value: {
                                                              type: 'ArrayExpression',
                                                              start: 3319,
                                                              end: 3777,
                                                              elements: [
                                                                {
                                                                  type: 'CallExpression',
                                                                  start: 3345,
                                                                  end: 3593,
                                                                  optional: false,
                                                                  _rollupAnnotations: [
                                                                    {
                                                                      end: 3344,
                                                                      start: 3329,
                                                                      type: 'pure'
                                                                    }
                                                                  ],
                                                                  callee: {
                                                                    type: 'Identifier',
                                                                    start: 3345,
                                                                    end: 3348,
                                                                    name: 'jsx'
                                                                  },
                                                                  arguments: [
                                                                    {
                                                                      type: 'Literal',
                                                                      start: 3349,
                                                                      end: 3353,
                                                                      value: 'li',
                                                                      raw: '"li"'
                                                                    },
                                                                    {
                                                                      type: 'ObjectExpression',
                                                                      start: 3355,
                                                                      end: 3592,
                                                                      properties: [
                                                                        {
                                                                          type: 'Property',
                                                                          start: 3357,
                                                                          end: 3590,
                                                                          method: false,
                                                                          shorthand: false,
                                                                          computed: false,
                                                                          key: {
                                                                            type: 'Identifier',
                                                                            start: 3357,
                                                                            end: 3365,
                                                                            name: 'children'
                                                                          },
                                                                          value: {
                                                                            type: 'CallExpression',
                                                                            start: 3383,
                                                                            end: 3590,
                                                                            optional: false,
                                                                            _rollupAnnotations: [
                                                                              {
                                                                                end: 3382,
                                                                                start: 3367,
                                                                                type: 'pure'
                                                                              }
                                                                            ],
                                                                            callee: {
                                                                              type: 'Identifier',
                                                                              start: 3383,
                                                                              end: 3387,
                                                                              name: 'jsxs'
                                                                            },
                                                                            arguments: [
                                                                              {
                                                                                type: 'Identifier',
                                                                                start: 3388,
                                                                                end: 3393,
                                                                                name: 'Trans'
                                                                              },
                                                                              {
                                                                                type: 'ObjectExpression',
                                                                                start: 3395,
                                                                                end: 3589,
                                                                                properties: [
                                                                                  {
                                                                                    type: 'Property',
                                                                                    start: 3397,
                                                                                    end: 3587,
                                                                                    method: false,
                                                                                    shorthand: false,
                                                                                    computed: false,
                                                                                    key: {
                                                                                      type: 'Identifier',
                                                                                      start: 3397,
                                                                                      end: 3405,
                                                                                      name: 'children'
                                                                                    },
                                                                                    value: {
                                                                                      type: 'ArrayExpression',
                                                                                      start: 3407,
                                                                                      end: 3587,
                                                                                      elements: [
                                                                                        {
                                                                                          type: 'Literal',
                                                                                          start: 3419,
                                                                                          end: 3491,
                                                                                          value: 'You can withdraw your earnings once you have accumulated a minimum of ',
                                                                                          raw: '"You can withdraw your earnings once you have accumulated a minimum of "'
                                                                                        },
                                                                                        {
                                                                                          type: 'Identifier',
                                                                                          start: 3503,
                                                                                          end: 3511,
                                                                                          name: 'currency'
                                                                                        },
                                                                                        {
                                                                                          type: 'Literal',
                                                                                          start: 3523,
                                                                                          end: 3526,
                                                                                          value: ' ',
                                                                                          raw: '" "'
                                                                                        },
                                                                                        {
                                                                                          type: 'Identifier',
                                                                                          start: 3538,
                                                                                          end: 3562,
                                                                                          name: 'VITE_REFERRAL_MIN_PAYOUT'
                                                                                        },
                                                                                        {
                                                                                          type: 'Literal',
                                                                                          start: 3574,
                                                                                          end: 3577,
                                                                                          value: '.',
                                                                                          raw: '"."'
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    kind: 'init'
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          kind: 'init'
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  type: 'CallExpression',
                                                                  start: 3619,
                                                                  end: 3769,
                                                                  optional: false,
                                                                  _rollupAnnotations: [
                                                                    {
                                                                      end: 3618,
                                                                      start: 3603,
                                                                      type: 'pure'
                                                                    }
                                                                  ],
                                                                  callee: {
                                                                    type: 'Identifier',
                                                                    start: 3619,
                                                                    end: 3622,
                                                                    name: 'jsx'
                                                                  },
                                                                  arguments: [
                                                                    {
                                                                      type: 'Literal',
                                                                      start: 3623,
                                                                      end: 3627,
                                                                      value: 'li',
                                                                      raw: '"li"'
                                                                    },
                                                                    {
                                                                      type: 'ObjectExpression',
                                                                      start: 3629,
                                                                      end: 3768,
                                                                      properties: [
                                                                        {
                                                                          type: 'Property',
                                                                          start: 3631,
                                                                          end: 3766,
                                                                          method: false,
                                                                          shorthand: false,
                                                                          computed: false,
                                                                          key: {
                                                                            type: 'Identifier',
                                                                            start: 3631,
                                                                            end: 3639,
                                                                            name: 'children'
                                                                          },
                                                                          value: {
                                                                            type: 'CallExpression',
                                                                            start: 3657,
                                                                            end: 3766,
                                                                            optional: false,
                                                                            _rollupAnnotations: [
                                                                              {
                                                                                end: 3656,
                                                                                start: 3641,
                                                                                type: 'pure'
                                                                              }
                                                                            ],
                                                                            callee: {
                                                                              type: 'Identifier',
                                                                              start: 3657,
                                                                              end: 3660,
                                                                              name: 'jsx'
                                                                            },
                                                                            arguments: [
                                                                              {
                                                                                type: 'Identifier',
                                                                                start: 3661,
                                                                                end: 3666,
                                                                                name: 'Trans'
                                                                              },
                                                                              {
                                                                                type: 'ObjectExpression',
                                                                                start: 3668,
                                                                                end: 3765,
                                                                                properties: [
                                                                                  {
                                                                                    type: 'Property',
                                                                                    start: 3670,
                                                                                    end: 3763,
                                                                                    method: false,
                                                                                    shorthand: false,
                                                                                    computed: false,
                                                                                    key: {
                                                                                      type: 'Identifier',
                                                                                      start: 3670,
                                                                                      end: 3678,
                                                                                      name: 'children'
                                                                                    },
                                                                                    value: {
                                                                                      type: 'Literal',
                                                                                      start: 3680,
                                                                                      end: 3763,
                                                                                      value: 'You can withdraw your earnings if 14 days have passed since your last withdrawal.',
                                                                                      raw: '"You can withdraw your earnings if 14 days have passed since your last withdrawal."'
                                                                                    },
                                                                                    kind: 'init'
                                                                                  }
                                                                                ]
                                                                              }
                                                                            ]
                                                                          },
                                                                          kind: 'init'
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            kind: 'init'
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  kind: 'init'
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    kind: 'init'
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      kind: 'init'
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 3803,
      end: 3822,
      declaration: { type: 'Identifier', start: 3818, end: 3821, name: 'App' }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 8866,
  body: [
    {
      type: 'ImportDeclaration',
      start: 237,
      end: 292,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 244,
          end: 264,
          local: {
            type: 'Identifier',
            start: 249,
            end: 264,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 270,
        end: 291,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 293,
      end: 448,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 302,
          end: 335,
          imported: {
            type: 'Identifier',
            start: 302,
            end: 311,
            name: '__exports'
          },
          local: {
            type: 'Identifier',
            start: 315,
            end: 335,
            name: 'react_production_min'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 343,
        end: 447,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js?commonjs-exports',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js?commonjs-exports"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 450,
      end: 463,
      expression: {
        type: 'Literal',
        start: 450,
        end: 462,
        value: 'use strict',
        raw: "'use strict'"
      }
    },
    {
      type: 'VariableDeclaration',
      start: 463,
      end: 820,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 467,
          end: 496,
          id: { type: 'Identifier', start: 467, end: 468, name: 'l' },
          init: {
            type: 'CallExpression',
            start: 469,
            end: 496,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 469,
              end: 479,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 469,
                end: 475,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 476, end: 479, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 480,
                end: 495,
                value: 'react.element',
                raw: '"react.element"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 497,
          end: 525,
          id: { type: 'Identifier', start: 497, end: 498, name: 'n' },
          init: {
            type: 'CallExpression',
            start: 499,
            end: 525,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 499,
              end: 509,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 499,
                end: 505,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 506, end: 509, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 510,
                end: 524,
                value: 'react.portal',
                raw: '"react.portal"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 526,
          end: 556,
          id: { type: 'Identifier', start: 526, end: 527, name: 'p' },
          init: {
            type: 'CallExpression',
            start: 528,
            end: 556,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 528,
              end: 538,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 528,
                end: 534,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 535, end: 538, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 539,
                end: 555,
                value: 'react.fragment',
                raw: '"react.fragment"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 557,
          end: 590,
          id: { type: 'Identifier', start: 557, end: 558, name: 'q' },
          init: {
            type: 'CallExpression',
            start: 559,
            end: 590,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 559,
              end: 569,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 559,
                end: 565,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 566, end: 569, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 570,
                end: 589,
                value: 'react.strict_mode',
                raw: '"react.strict_mode"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 591,
          end: 621,
          id: { type: 'Identifier', start: 591, end: 592, name: 'r' },
          init: {
            type: 'CallExpression',
            start: 593,
            end: 621,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 593,
              end: 603,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 593,
                end: 599,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 600, end: 603, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 604,
                end: 620,
                value: 'react.profiler',
                raw: '"react.profiler"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 622,
          end: 652,
          id: { type: 'Identifier', start: 622, end: 623, name: 't' },
          init: {
            type: 'CallExpression',
            start: 624,
            end: 652,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 624,
              end: 634,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 624,
                end: 630,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 631, end: 634, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 635,
                end: 651,
                value: 'react.provider',
                raw: '"react.provider"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 653,
          end: 682,
          id: { type: 'Identifier', start: 653, end: 654, name: 'u' },
          init: {
            type: 'CallExpression',
            start: 655,
            end: 682,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 655,
              end: 665,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 655,
                end: 661,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 662, end: 665, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 666,
                end: 681,
                value: 'react.context',
                raw: '"react.context"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 683,
          end: 716,
          id: { type: 'Identifier', start: 683, end: 684, name: 'v' },
          init: {
            type: 'CallExpression',
            start: 685,
            end: 716,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 685,
              end: 695,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 685,
                end: 691,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 692, end: 695, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 696,
                end: 715,
                value: 'react.forward_ref',
                raw: '"react.forward_ref"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 717,
          end: 747,
          id: { type: 'Identifier', start: 717, end: 718, name: 'w' },
          init: {
            type: 'CallExpression',
            start: 719,
            end: 747,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 719,
              end: 729,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 719,
                end: 725,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 726, end: 729, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 730,
                end: 746,
                value: 'react.suspense',
                raw: '"react.suspense"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 748,
          end: 774,
          id: { type: 'Identifier', start: 748, end: 749, name: 'x' },
          init: {
            type: 'CallExpression',
            start: 750,
            end: 774,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 750,
              end: 760,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 750,
                end: 756,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 757, end: 760, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 761,
                end: 773,
                value: 'react.memo',
                raw: '"react.memo"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 775,
          end: 801,
          id: { type: 'Identifier', start: 775, end: 776, name: 'y' },
          init: {
            type: 'CallExpression',
            start: 777,
            end: 801,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 777,
              end: 787,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 777,
                end: 783,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 784, end: 787, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 788,
                end: 800,
                value: 'react.lazy',
                raw: '"react.lazy"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 802,
          end: 819,
          id: { type: 'Identifier', start: 802, end: 803, name: 'z' },
          init: {
            type: 'MemberExpression',
            start: 804,
            end: 819,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 804,
              end: 810,
              name: 'Symbol'
            },
            property: {
              type: 'Identifier',
              start: 811,
              end: 819,
              name: 'iterator'
            }
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 820,
      end: 941,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 829, end: 830, name: 'A' },
      params: [ { type: 'Identifier', start: 831, end: 832, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 833,
        end: 941,
        body: [
          {
            type: 'IfStatement',
            start: 834,
            end: 879,
            test: {
              type: 'LogicalExpression',
              start: 837,
              end: 866,
              operator: '||',
              left: {
                type: 'BinaryExpression',
                start: 837,
                end: 845,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 837,
                  end: 841,
                  raw: 'null',
                  value: null
                },
                right: { type: 'Identifier', start: 844, end: 845, name: 'a' }
              },
              right: {
                type: 'BinaryExpression',
                start: 847,
                end: 866,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 847,
                  end: 855,
                  value: 'object',
                  raw: '"object"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 858,
                  end: 866,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 865,
                    end: 866,
                    name: 'a'
                  },
                  prefix: true
                }
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 867,
              end: 879,
              argument: {
                type: 'Literal',
                start: 874,
                end: 878,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 879,
            end: 906,
            expression: {
              type: 'AssignmentExpression',
              start: 879,
              end: 905,
              operator: '=',
              left: { type: 'Identifier', start: 879, end: 880, name: 'a' },
              right: {
                type: 'LogicalExpression',
                start: 881,
                end: 905,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 881,
                  end: 888,
                  operator: '&&',
                  left: {
                    type: 'Identifier',
                    start: 881,
                    end: 882,
                    name: 'z'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 884,
                    end: 888,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 884,
                      end: 885,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 886,
                      end: 887,
                      name: 'z'
                    }
                  }
                },
                right: {
                  type: 'MemberExpression',
                  start: 890,
                  end: 905,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 890,
                    end: 891,
                    name: 'a'
                  },
                  property: {
                    type: 'Literal',
                    start: 892,
                    end: 904,
                    value: '@@iterator',
                    raw: '"@@iterator"'
                  }
                }
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 906,
            end: 940,
            argument: {
              type: 'ConditionalExpression',
              start: 912,
              end: 940,
              test: {
                type: 'BinaryExpression',
                start: 912,
                end: 933,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 912,
                  end: 922,
                  value: 'function',
                  raw: '"function"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 925,
                  end: 933,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 932,
                    end: 933,
                    name: 'a'
                  },
                  prefix: true
                }
              },
              consequent: { type: 'Identifier', start: 934, end: 935, name: 'a' },
              alternate: {
                type: 'Literal',
                start: 936,
                end: 940,
                raw: 'null',
                value: null
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 942,
      end: 1096,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 946,
          end: 1074,
          id: { type: 'Identifier', start: 946, end: 947, name: 'B' },
          init: {
            type: 'ObjectExpression',
            start: 948,
            end: 1074,
            properties: [
              {
                type: 'Property',
                start: 949,
                end: 979,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 949,
                  end: 958,
                  name: 'isMounted'
                },
                value: {
                  type: 'FunctionExpression',
                  start: 959,
                  end: 979,
                  async: false,
                  generator: false,
                  id: null,
                  params: [],
                  body: {
                    type: 'BlockStatement',
                    start: 969,
                    end: 979,
                    body: [
                      {
                        type: 'ReturnStatement',
                        start: 970,
                        end: 978,
                        argument: {
                          type: 'UnaryExpression',
                          start: 976,
                          end: 978,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 977,
                            end: 978,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      }
                    ]
                  },
                  expression: false
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 980,
                end: 1011,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 980,
                  end: 998,
                  name: 'enqueueForceUpdate'
                },
                value: {
                  type: 'FunctionExpression',
                  start: 999,
                  end: 1011,
                  async: false,
                  generator: false,
                  id: null,
                  params: [],
                  body: {
                    type: 'BlockStatement',
                    start: 1009,
                    end: 1011,
                    body: []
                  },
                  expression: false
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 1012,
                end: 1044,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1012,
                  end: 1031,
                  name: 'enqueueReplaceState'
                },
                value: {
                  type: 'FunctionExpression',
                  start: 1032,
                  end: 1044,
                  async: false,
                  generator: false,
                  id: null,
                  params: [],
                  body: {
                    type: 'BlockStatement',
                    start: 1042,
                    end: 1044,
                    body: []
                  },
                  expression: false
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 1045,
                end: 1073,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1045,
                  end: 1060,
                  name: 'enqueueSetState'
                },
                value: {
                  type: 'FunctionExpression',
                  start: 1061,
                  end: 1073,
                  async: false,
                  generator: false,
                  id: null,
                  params: [],
                  body: {
                    type: 'BlockStatement',
                    start: 1071,
                    end: 1073,
                    body: []
                  },
                  expression: false
                },
                kind: 'init'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1075,
          end: 1090,
          id: { type: 'Identifier', start: 1075, end: 1076, name: 'C' },
          init: {
            type: 'MemberExpression',
            start: 1077,
            end: 1090,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 1077,
              end: 1083,
              name: 'Object'
            },
            property: {
              type: 'Identifier',
              start: 1084,
              end: 1090,
              name: 'assign'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1091,
          end: 1095,
          id: { type: 'Identifier', start: 1091, end: 1092, name: 'D' },
          init: {
            type: 'ObjectExpression',
            start: 1093,
            end: 1095,
            properties: []
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 1096,
      end: 1172,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1105, end: 1106, name: 'E' },
      params: [
        { type: 'Identifier', start: 1107, end: 1108, name: 'a' },
        { type: 'Identifier', start: 1109, end: 1110, name: 'b' },
        { type: 'Identifier', start: 1111, end: 1112, name: 'e' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1113,
        end: 1172,
        body: [
          {
            type: 'ExpressionStatement',
            start: 1114,
            end: 1127,
            expression: {
              type: 'AssignmentExpression',
              start: 1114,
              end: 1126,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1114,
                end: 1124,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1114, end: 1118 },
                property: {
                  type: 'Identifier',
                  start: 1119,
                  end: 1124,
                  name: 'props'
                }
              },
              right: { type: 'Identifier', start: 1125, end: 1126, name: 'a' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1127,
            end: 1142,
            expression: {
              type: 'AssignmentExpression',
              start: 1127,
              end: 1141,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1127,
                end: 1139,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1127, end: 1131 },
                property: {
                  type: 'Identifier',
                  start: 1132,
                  end: 1139,
                  name: 'context'
                }
              },
              right: { type: 'Identifier', start: 1140, end: 1141, name: 'b' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1142,
            end: 1154,
            expression: {
              type: 'AssignmentExpression',
              start: 1142,
              end: 1153,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1142,
                end: 1151,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1142, end: 1146 },
                property: {
                  type: 'Identifier',
                  start: 1147,
                  end: 1151,
                  name: 'refs'
                }
              },
              right: { type: 'Identifier', start: 1152, end: 1153, name: 'D' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1154,
            end: 1171,
            expression: {
              type: 'AssignmentExpression',
              start: 1154,
              end: 1171,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1154,
                end: 1166,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1154, end: 1158 },
                property: {
                  type: 'Identifier',
                  start: 1159,
                  end: 1166,
                  name: 'updater'
                }
              },
              right: {
                type: 'LogicalExpression',
                start: 1167,
                end: 1171,
                operator: '||',
                left: {
                  type: 'Identifier',
                  start: 1167,
                  end: 1168,
                  name: 'e'
                },
                right: {
                  type: 'Identifier',
                  start: 1170,
                  end: 1171,
                  name: 'B'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'ExpressionStatement',
      start: 1172,
      end: 1204,
      expression: {
        type: 'AssignmentExpression',
        start: 1172,
        end: 1203,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1172,
          end: 1200,
          computed: false,
          optional: false,
          object: {
            type: 'MemberExpression',
            start: 1172,
            end: 1183,
            computed: false,
            optional: false,
            object: { type: 'Identifier', start: 1172, end: 1173, name: 'E' },
            property: {
              type: 'Identifier',
              start: 1174,
              end: 1183,
              name: 'prototype'
            }
          },
          property: {
            type: 'Identifier',
            start: 1184,
            end: 1200,
            name: 'isReactComponent'
          }
        },
        right: {
          type: 'ObjectExpression',
          start: 1201,
          end: 1203,
          properties: []
        }
      }
    },
    {
      type: 'ExpressionStatement',
      start: 1205,
      end: 1479,
      expression: {
        type: 'AssignmentExpression',
        start: 1205,
        end: 1478,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1205,
          end: 1225,
          computed: false,
          optional: false,
          object: {
            type: 'MemberExpression',
            start: 1205,
            end: 1216,
            computed: false,
            optional: false,
            object: { type: 'Identifier', start: 1205, end: 1206, name: 'E' },
            property: {
              type: 'Identifier',
              start: 1207,
              end: 1216,
              name: 'prototype'
            }
          },
          property: {
            type: 'Identifier',
            start: 1217,
            end: 1225,
            name: 'setState'
          }
        },
        right: {
          type: 'FunctionExpression',
          start: 1226,
          end: 1478,
          async: false,
          generator: false,
          id: null,
          params: [
            { type: 'Identifier', start: 1235, end: 1236, name: 'a' },
            { type: 'Identifier', start: 1237, end: 1238, name: 'b' }
          ],
          body: {
            type: 'BlockStatement',
            start: 1239,
            end: 1478,
            body: [
              {
                type: 'IfStatement',
                start: 1240,
                end: 1428,
                test: {
                  type: 'LogicalExpression',
                  start: 1243,
                  end: 1294,
                  operator: '&&',
                  left: {
                    type: 'LogicalExpression',
                    start: 1243,
                    end: 1285,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 1243,
                      end: 1262,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 1243,
                        end: 1251,
                        value: 'object',
                        raw: '"object"'
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 1254,
                        end: 1262,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 1261,
                          end: 1262,
                          name: 'a'
                        },
                        prefix: true
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 1264,
                      end: 1285,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 1264,
                        end: 1274,
                        value: 'function',
                        raw: '"function"'
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 1277,
                        end: 1285,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 1284,
                          end: 1285,
                          name: 'a'
                        },
                        prefix: true
                      }
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 1287,
                    end: 1294,
                    operator: '!=',
                    left: {
                      type: 'Literal',
                      start: 1287,
                      end: 1291,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 1293,
                      end: 1294,
                      name: 'a'
                    }
                  }
                },
                consequent: {
                  type: 'ThrowStatement',
                  start: 1295,
                  end: 1428,
                  argument: {
                    type: 'CallExpression',
                    start: 1301,
                    end: 1427,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 1301,
                      end: 1306,
                      name: 'Error'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 1307,
                        end: 1426,
                        value: 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
                        raw: '"setState(...): takes an object of state variables to update or a function which returns an object of state variables."'
                      }
                    ]
                  }
                },
                alternate: null
              },
              {
                type: 'ExpressionStatement',
                start: 1428,
                end: 1477,
                expression: {
                  type: 'CallExpression',
                  start: 1428,
                  end: 1477,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 1428,
                    end: 1456,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'MemberExpression',
                      start: 1428,
                      end: 1440,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'ThisExpression',
                        start: 1428,
                        end: 1432
                      },
                      property: {
                        type: 'Identifier',
                        start: 1433,
                        end: 1440,
                        name: 'updater'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 1441,
                      end: 1456,
                      name: 'enqueueSetState'
                    }
                  },
                  arguments: [
                    { type: 'ThisExpression', start: 1457, end: 1461 },
                    {
                      type: 'Identifier',
                      start: 1462,
                      end: 1463,
                      name: 'a'
                    },
                    {
                      type: 'Identifier',
                      start: 1464,
                      end: 1465,
                      name: 'b'
                    },
                    {
                      type: 'Literal',
                      start: 1466,
                      end: 1476,
                      value: 'setState',
                      raw: '"setState"'
                    }
                  ]
                }
              }
            ]
          },
          expression: false
        }
      }
    },
    {
      type: 'ExpressionStatement',
      start: 1479,
      end: 1570,
      expression: {
        type: 'AssignmentExpression',
        start: 1479,
        end: 1569,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1479,
          end: 1502,
          computed: false,
          optional: false,
          object: {
            type: 'MemberExpression',
            start: 1479,
            end: 1490,
            computed: false,
            optional: false,
            object: { type: 'Identifier', start: 1479, end: 1480, name: 'E' },
            property: {
              type: 'Identifier',
              start: 1481,
              end: 1490,
              name: 'prototype'
            }
          },
          property: {
            type: 'Identifier',
            start: 1491,
            end: 1502,
            name: 'forceUpdate'
          }
        },
        right: {
          type: 'FunctionExpression',
          start: 1503,
          end: 1569,
          async: false,
          generator: false,
          id: null,
          params: [ { type: 'Identifier', start: 1512, end: 1513, name: 'a' } ],
          body: {
            type: 'BlockStatement',
            start: 1514,
            end: 1569,
            body: [
              {
                type: 'ExpressionStatement',
                start: 1515,
                end: 1568,
                expression: {
                  type: 'CallExpression',
                  start: 1515,
                  end: 1568,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 1515,
                    end: 1546,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'MemberExpression',
                      start: 1515,
                      end: 1527,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'ThisExpression',
                        start: 1515,
                        end: 1519
                      },
                      property: {
                        type: 'Identifier',
                        start: 1520,
                        end: 1527,
                        name: 'updater'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 1528,
                      end: 1546,
                      name: 'enqueueForceUpdate'
                    }
                  },
                  arguments: [
                    { type: 'ThisExpression', start: 1547, end: 1551 },
                    {
                      type: 'Identifier',
                      start: 1552,
                      end: 1553,
                      name: 'a'
                    },
                    {
                      type: 'Literal',
                      start: 1554,
                      end: 1567,
                      value: 'forceUpdate',
                      raw: '"forceUpdate"'
                    }
                  ]
                }
              }
            ]
          },
          expression: false
        }
      }
    },
    {
      type: 'FunctionDeclaration',
      start: 1570,
      end: 1584,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1579, end: 1580, name: 'F' },
      params: [],
      body: { type: 'BlockStatement', start: 1582, end: 1584, body: [] },
      expression: false
    },
    {
      type: 'ExpressionStatement',
      start: 1584,
      end: 1608,
      expression: {
        type: 'AssignmentExpression',
        start: 1584,
        end: 1607,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1584,
          end: 1595,
          computed: false,
          optional: false,
          object: { type: 'Identifier', start: 1584, end: 1585, name: 'F' },
          property: {
            type: 'Identifier',
            start: 1586,
            end: 1595,
            name: 'prototype'
          }
        },
        right: {
          type: 'MemberExpression',
          start: 1596,
          end: 1607,
          computed: false,
          optional: false,
          object: { type: 'Identifier', start: 1596, end: 1597, name: 'E' },
          property: {
            type: 'Identifier',
            start: 1598,
            end: 1607,
            name: 'prototype'
          }
        }
      }
    },
    {
      type: 'FunctionDeclaration',
      start: 1608,
      end: 1684,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1617, end: 1618, name: 'G' },
      params: [
        { type: 'Identifier', start: 1619, end: 1620, name: 'a' },
        { type: 'Identifier', start: 1621, end: 1622, name: 'b' },
        { type: 'Identifier', start: 1623, end: 1624, name: 'e' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1625,
        end: 1684,
        body: [
          {
            type: 'ExpressionStatement',
            start: 1626,
            end: 1639,
            expression: {
              type: 'AssignmentExpression',
              start: 1626,
              end: 1638,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1626,
                end: 1636,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1626, end: 1630 },
                property: {
                  type: 'Identifier',
                  start: 1631,
                  end: 1636,
                  name: 'props'
                }
              },
              right: { type: 'Identifier', start: 1637, end: 1638, name: 'a' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1639,
            end: 1654,
            expression: {
              type: 'AssignmentExpression',
              start: 1639,
              end: 1653,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1639,
                end: 1651,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1639, end: 1643 },
                property: {
                  type: 'Identifier',
                  start: 1644,
                  end: 1651,
                  name: 'context'
                }
              },
              right: { type: 'Identifier', start: 1652, end: 1653, name: 'b' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1654,
            end: 1666,
            expression: {
              type: 'AssignmentExpression',
              start: 1654,
              end: 1665,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1654,
                end: 1663,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1654, end: 1658 },
                property: {
                  type: 'Identifier',
                  start: 1659,
                  end: 1663,
                  name: 'refs'
                }
              },
              right: { type: 'Identifier', start: 1664, end: 1665, name: 'D' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1666,
            end: 1683,
            expression: {
              type: 'AssignmentExpression',
              start: 1666,
              end: 1683,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1666,
                end: 1678,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 1666, end: 1670 },
                property: {
                  type: 'Identifier',
                  start: 1671,
                  end: 1678,
                  name: 'updater'
                }
              },
              right: {
                type: 'LogicalExpression',
                start: 1679,
                end: 1683,
                operator: '||',
                left: {
                  type: 'Identifier',
                  start: 1679,
                  end: 1680,
                  name: 'e'
                },
                right: {
                  type: 'Identifier',
                  start: 1682,
                  end: 1683,
                  name: 'B'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 1684,
      end: 1708,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1688,
          end: 1707,
          id: { type: 'Identifier', start: 1688, end: 1689, name: 'H' },
          init: {
            type: 'AssignmentExpression',
            start: 1690,
            end: 1707,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 1690,
              end: 1701,
              computed: false,
              optional: false,
              object: { type: 'Identifier', start: 1690, end: 1691, name: 'G' },
              property: {
                type: 'Identifier',
                start: 1692,
                end: 1701,
                name: 'prototype'
              }
            },
            right: {
              type: 'NewExpression',
              start: 1702,
              end: 1707,
              callee: { type: 'Identifier', start: 1706, end: 1707, name: 'F' },
              arguments: []
            }
          }
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 1709,
      end: 1725,
      expression: {
        type: 'AssignmentExpression',
        start: 1709,
        end: 1724,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1709,
          end: 1722,
          computed: false,
          optional: false,
          object: { type: 'Identifier', start: 1709, end: 1710, name: 'H' },
          property: {
            type: 'Identifier',
            start: 1711,
            end: 1722,
            name: 'constructor'
          }
        },
        right: { type: 'Identifier', start: 1723, end: 1724, name: 'G' }
      }
    },
    {
      type: 'ExpressionStatement',
      start: 1725,
      end: 1742,
      expression: {
        type: 'CallExpression',
        start: 1725,
        end: 1741,
        optional: false,
        callee: { type: 'Identifier', start: 1725, end: 1726, name: 'C' },
        arguments: [
          { type: 'Identifier', start: 1727, end: 1728, name: 'H' },
          {
            type: 'MemberExpression',
            start: 1729,
            end: 1740,
            computed: false,
            optional: false,
            object: { type: 'Identifier', start: 1729, end: 1730, name: 'E' },
            property: {
              type: 'Identifier',
              start: 1731,
              end: 1740,
              name: 'prototype'
            }
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 1742,
      end: 1768,
      expression: {
        type: 'AssignmentExpression',
        start: 1742,
        end: 1767,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 1742,
          end: 1764,
          computed: false,
          optional: false,
          object: { type: 'Identifier', start: 1742, end: 1743, name: 'H' },
          property: {
            type: 'Identifier',
            start: 1744,
            end: 1764,
            name: 'isPureReactComponent'
          }
        },
        right: {
          type: 'UnaryExpression',
          start: 1765,
          end: 1767,
          operator: '!',
          argument: {
            type: 'Literal',
            start: 1766,
            end: 1767,
            raw: '0',
            value: 0
          },
          prefix: true
        }
      }
    },
    {
      type: 'VariableDeclaration',
      start: 1768,
      end: 1879,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1772,
          end: 1787,
          id: { type: 'Identifier', start: 1772, end: 1773, name: 'I' },
          init: {
            type: 'MemberExpression',
            start: 1774,
            end: 1787,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 1774,
              end: 1779,
              name: 'Array'
            },
            property: {
              type: 'Identifier',
              start: 1780,
              end: 1787,
              name: 'isArray'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1788,
          end: 1821,
          id: { type: 'Identifier', start: 1788, end: 1789, name: 'J' },
          init: {
            type: 'MemberExpression',
            start: 1790,
            end: 1821,
            computed: false,
            optional: false,
            object: {
              type: 'MemberExpression',
              start: 1790,
              end: 1806,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 1790,
                end: 1796,
                name: 'Object'
              },
              property: {
                type: 'Identifier',
                start: 1797,
                end: 1806,
                name: 'prototype'
              }
            },
            property: {
              type: 'Identifier',
              start: 1807,
              end: 1821,
              name: 'hasOwnProperty'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1822,
          end: 1838,
          id: { type: 'Identifier', start: 1822, end: 1823, name: 'K' },
          init: {
            type: 'ObjectExpression',
            start: 1824,
            end: 1838,
            properties: [
              {
                type: 'Property',
                start: 1825,
                end: 1837,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1825,
                  end: 1832,
                  name: 'current'
                },
                value: {
                  type: 'Literal',
                  start: 1833,
                  end: 1837,
                  raw: 'null',
                  value: null
                },
                kind: 'init'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1839,
          end: 1878,
          id: { type: 'Identifier', start: 1839, end: 1840, name: 'L' },
          init: {
            type: 'ObjectExpression',
            start: 1841,
            end: 1878,
            properties: [
              {
                type: 'Property',
                start: 1842,
                end: 1848,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1842,
                  end: 1845,
                  name: 'key'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 1846,
                  end: 1848,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 1847,
                    end: 1848,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 1849,
                end: 1855,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1849,
                  end: 1852,
                  name: 'ref'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 1853,
                  end: 1855,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 1854,
                    end: 1855,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 1856,
                end: 1865,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1856,
                  end: 1862,
                  name: '__self'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 1863,
                  end: 1865,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 1864,
                    end: 1865,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 1866,
                end: 1877,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 1866,
                  end: 1874,
                  name: '__source'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 1875,
                  end: 1877,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 1876,
                    end: 1877,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 1880,
      end: 2310,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1889, end: 1890, name: 'M' },
      params: [
        { type: 'Identifier', start: 1891, end: 1892, name: 'a' },
        { type: 'Identifier', start: 1893, end: 1894, name: 'b' },
        { type: 'Identifier', start: 1895, end: 1896, name: 'e' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1897,
        end: 2310,
        body: [
          {
            type: 'VariableDeclaration',
            start: 1898,
            end: 1923,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 1902,
                end: 1903,
                id: {
                  type: 'Identifier',
                  start: 1902,
                  end: 1903,
                  name: 'd'
                },
                init: null
              },
              {
                type: 'VariableDeclarator',
                start: 1904,
                end: 1908,
                id: {
                  type: 'Identifier',
                  start: 1904,
                  end: 1905,
                  name: 'c'
                },
                init: {
                  type: 'ObjectExpression',
                  start: 1906,
                  end: 1908,
                  properties: []
                }
              },
              {
                type: 'VariableDeclarator',
                start: 1909,
                end: 1915,
                id: {
                  type: 'Identifier',
                  start: 1909,
                  end: 1910,
                  name: 'k'
                },
                init: {
                  type: 'Literal',
                  start: 1911,
                  end: 1915,
                  raw: 'null',
                  value: null
                }
              },
              {
                type: 'VariableDeclarator',
                start: 1916,
                end: 1922,
                id: {
                  type: 'Identifier',
                  start: 1916,
                  end: 1917,
                  name: 'h'
                },
                init: {
                  type: 'Literal',
                  start: 1918,
                  end: 1922,
                  raw: 'null',
                  value: null
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 1923,
            end: 2047,
            test: {
              type: 'BinaryExpression',
              start: 1926,
              end: 1933,
              operator: '!=',
              left: {
                type: 'Literal',
                start: 1926,
                end: 1930,
                raw: 'null',
                value: null
              },
              right: { type: 'Identifier', start: 1932, end: 1933, name: 'b' }
            },
            consequent: {
              type: 'ForInStatement',
              start: 1934,
              end: 2047,
              left: { type: 'Identifier', start: 1938, end: 1939, name: 'd' },
              right: {
                type: 'SequenceExpression',
                start: 1943,
                end: 1999,
                expressions: [
                  {
                    type: 'LogicalExpression',
                    start: 1943,
                    end: 1968,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 1943,
                      end: 1957,
                      operator: '!==',
                      left: {
                        type: 'UnaryExpression',
                        start: 1943,
                        end: 1949,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 1948,
                          end: 1949,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 1952,
                        end: 1957,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 1952,
                          end: 1953,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 1954,
                          end: 1957,
                          name: 'ref'
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 1960,
                      end: 1967,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 1960,
                        end: 1961,
                        name: 'h'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 1962,
                        end: 1967,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 1962,
                          end: 1963,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 1964,
                          end: 1967,
                          name: 'ref'
                        }
                      }
                    }
                  },
                  {
                    type: 'LogicalExpression',
                    start: 1969,
                    end: 1997,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 1969,
                      end: 1983,
                      operator: '!==',
                      left: {
                        type: 'UnaryExpression',
                        start: 1969,
                        end: 1975,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 1974,
                          end: 1975,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 1978,
                        end: 1983,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 1978,
                          end: 1979,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 1980,
                          end: 1983,
                          name: 'key'
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 1986,
                      end: 1996,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 1986,
                        end: 1987,
                        name: 'k'
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 1988,
                        end: 1996,
                        operator: '+',
                        left: {
                          type: 'Literal',
                          start: 1988,
                          end: 1990,
                          value: '',
                          raw: '""'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 1991,
                          end: 1996,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1991,
                            end: 1992,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1993,
                            end: 1996,
                            name: 'key'
                          }
                        }
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    start: 1998,
                    end: 1999,
                    name: 'b'
                  }
                ]
              },
              body: {
                type: 'ExpressionStatement',
                start: 2000,
                end: 2047,
                expression: {
                  type: 'LogicalExpression',
                  start: 2000,
                  end: 2046,
                  operator: '&&',
                  left: {
                    type: 'LogicalExpression',
                    start: 2000,
                    end: 2033,
                    operator: '&&',
                    left: {
                      type: 'CallExpression',
                      start: 2000,
                      end: 2011,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 2000,
                        end: 2006,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 2000,
                          end: 2001,
                          name: 'J'
                        },
                        property: {
                          type: 'Identifier',
                          start: 2002,
                          end: 2006,
                          name: 'call'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 2007,
                          end: 2008,
                          name: 'b'
                        },
                        {
                          type: 'Identifier',
                          start: 2009,
                          end: 2010,
                          name: 'd'
                        }
                      ]
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 2013,
                      end: 2033,
                      operator: '!',
                      argument: {
                        type: 'CallExpression',
                        start: 2014,
                        end: 2033,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 2014,
                          end: 2030,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 2014,
                            end: 2015,
                            name: 'L'
                          },
                          property: {
                            type: 'Identifier',
                            start: 2016,
                            end: 2030,
                            name: 'hasOwnProperty'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 2031,
                            end: 2032,
                            name: 'd'
                          }
                        ]
                      },
                      prefix: true
                    }
                  },
                  right: {
                    type: 'AssignmentExpression',
                    start: 2036,
                    end: 2045,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 2036,
                      end: 2040,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2036,
                        end: 2037,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2038,
                        end: 2039,
                        name: 'd'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 2041,
                      end: 2045,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2041,
                        end: 2042,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2043,
                        end: 2044,
                        name: 'd'
                      }
                    }
                  }
                }
              }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 2047,
            end: 2072,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 2051,
                end: 2071,
                id: {
                  type: 'Identifier',
                  start: 2051,
                  end: 2052,
                  name: 'g'
                },
                init: {
                  type: 'BinaryExpression',
                  start: 2053,
                  end: 2071,
                  operator: '-',
                  left: {
                    type: 'MemberExpression',
                    start: 2053,
                    end: 2069,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2053,
                      end: 2062,
                      name: 'arguments'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2063,
                      end: 2069,
                      name: 'length'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2070,
                    end: 2071,
                    raw: '2',
                    value: 2
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 2072,
            end: 2171,
            test: {
              type: 'BinaryExpression',
              start: 2075,
              end: 2080,
              operator: '===',
              left: {
                type: 'Literal',
                start: 2075,
                end: 2076,
                raw: '1',
                value: 1
              },
              right: { type: 'Identifier', start: 2079, end: 2080, name: 'g' }
            },
            consequent: {
              type: 'ExpressionStatement',
              start: 2081,
              end: 2094,
              expression: {
                type: 'AssignmentExpression',
                start: 2081,
                end: 2093,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 2081,
                  end: 2091,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 2081,
                    end: 2082,
                    name: 'c'
                  },
                  property: {
                    type: 'Identifier',
                    start: 2083,
                    end: 2091,
                    name: 'children'
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 2092,
                  end: 2093,
                  name: 'e'
                }
              }
            },
            alternate: {
              type: 'IfStatement',
              start: 2099,
              end: 2171,
              test: {
                type: 'BinaryExpression',
                start: 2102,
                end: 2105,
                operator: '<',
                left: {
                  type: 'Literal',
                  start: 2102,
                  end: 2103,
                  raw: '1',
                  value: 1
                },
                right: {
                  type: 'Identifier',
                  start: 2104,
                  end: 2105,
                  name: 'g'
                }
              },
              consequent: {
                type: 'BlockStatement',
                start: 2106,
                end: 2171,
                body: [
                  {
                    type: 'ForStatement',
                    start: 2107,
                    end: 2158,
                    init: {
                      type: 'VariableDeclaration',
                      start: 2111,
                      end: 2129,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 2115,
                          end: 2125,
                          id: {
                            type: 'Identifier',
                            start: 2115,
                            end: 2116,
                            name: 'f'
                          },
                          init: {
                            type: 'CallExpression',
                            start: 2117,
                            end: 2125,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 2117,
                              end: 2122,
                              name: 'Array'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 2123,
                                end: 2124,
                                name: 'g'
                              }
                            ]
                          }
                        },
                        {
                          type: 'VariableDeclarator',
                          start: 2126,
                          end: 2129,
                          id: {
                            type: 'Identifier',
                            start: 2126,
                            end: 2127,
                            name: 'm'
                          },
                          init: {
                            type: 'Literal',
                            start: 2128,
                            end: 2129,
                            raw: '0',
                            value: 0
                          }
                        }
                      ]
                    },
                    test: {
                      type: 'BinaryExpression',
                      start: 2130,
                      end: 2133,
                      operator: '<',
                      left: {
                        type: 'Identifier',
                        start: 2130,
                        end: 2131,
                        name: 'm'
                      },
                      right: {
                        type: 'Identifier',
                        start: 2132,
                        end: 2133,
                        name: 'g'
                      }
                    },
                    update: {
                      type: 'UpdateExpression',
                      start: 2134,
                      end: 2137,
                      prefix: false,
                      operator: '++',
                      argument: {
                        type: 'Identifier',
                        start: 2134,
                        end: 2135,
                        name: 'm'
                      }
                    },
                    body: {
                      type: 'ExpressionStatement',
                      start: 2138,
                      end: 2158,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 2138,
                        end: 2157,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 2138,
                          end: 2142,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 2138,
                            end: 2139,
                            name: 'f'
                          },
                          property: {
                            type: 'Identifier',
                            start: 2140,
                            end: 2141,
                            name: 'm'
                          }
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 2143,
                          end: 2157,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 2143,
                            end: 2152,
                            name: 'arguments'
                          },
                          property: {
                            type: 'BinaryExpression',
                            start: 2153,
                            end: 2156,
                            operator: '+',
                            left: {
                              type: 'Identifier',
                              start: 2153,
                              end: 2154,
                              name: 'm'
                            },
                            right: {
                              type: 'Literal',
                              start: 2155,
                              end: 2156,
                              raw: '2',
                              value: 2
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 2158,
                    end: 2170,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 2158,
                      end: 2170,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 2158,
                        end: 2168,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 2158,
                          end: 2159,
                          name: 'c'
                        },
                        property: {
                          type: 'Identifier',
                          start: 2160,
                          end: 2168,
                          name: 'children'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 2169,
                        end: 2170,
                        name: 'f'
                      }
                    }
                  }
                ]
              },
              alternate: null
            }
          },
          {
            type: 'IfStatement',
            start: 2171,
            end: 2247,
            test: {
              type: 'LogicalExpression',
              start: 2174,
              end: 2191,
              operator: '&&',
              left: { type: 'Identifier', start: 2174, end: 2175, name: 'a' },
              right: {
                type: 'MemberExpression',
                start: 2177,
                end: 2191,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 2177,
                  end: 2178,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 2179,
                  end: 2191,
                  name: 'defaultProps'
                }
              }
            },
            consequent: {
              type: 'ForInStatement',
              start: 2192,
              end: 2247,
              left: { type: 'Identifier', start: 2196, end: 2197, name: 'd' },
              right: {
                type: 'SequenceExpression',
                start: 2201,
                end: 2219,
                expressions: [
                  {
                    type: 'AssignmentExpression',
                    start: 2201,
                    end: 2217,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 2201,
                      end: 2202,
                      name: 'g'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 2203,
                      end: 2217,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2203,
                        end: 2204,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2205,
                        end: 2217,
                        name: 'defaultProps'
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    start: 2218,
                    end: 2219,
                    name: 'g'
                  }
                ]
              },
              body: {
                type: 'ExpressionStatement',
                start: 2220,
                end: 2247,
                expression: {
                  type: 'LogicalExpression',
                  start: 2220,
                  end: 2246,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 2220,
                    end: 2233,
                    operator: '===',
                    left: {
                      type: 'UnaryExpression',
                      start: 2220,
                      end: 2226,
                      operator: 'void',
                      argument: {
                        type: 'Literal',
                        start: 2225,
                        end: 2226,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 2229,
                      end: 2233,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2229,
                        end: 2230,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2231,
                        end: 2232,
                        name: 'd'
                      }
                    }
                  },
                  right: {
                    type: 'AssignmentExpression',
                    start: 2236,
                    end: 2245,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 2236,
                      end: 2240,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2236,
                        end: 2237,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2238,
                        end: 2239,
                        name: 'd'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 2241,
                      end: 2245,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2241,
                        end: 2242,
                        name: 'g'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2243,
                        end: 2244,
                        name: 'd'
                      }
                    }
                  }
                }
              }
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 2247,
            end: 2309,
            argument: {
              type: 'ObjectExpression',
              start: 2253,
              end: 2309,
              properties: [
                {
                  type: 'Property',
                  start: 2254,
                  end: 2264,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2254,
                    end: 2262,
                    name: '$$typeof'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2263,
                    end: 2264,
                    name: 'l'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2265,
                  end: 2271,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2265,
                    end: 2269,
                    name: 'type'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2270,
                    end: 2271,
                    name: 'a'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2272,
                  end: 2277,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2272,
                    end: 2275,
                    name: 'key'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2276,
                    end: 2277,
                    name: 'k'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2278,
                  end: 2283,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2278,
                    end: 2281,
                    name: 'ref'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2282,
                    end: 2283,
                    name: 'h'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2284,
                  end: 2291,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2284,
                    end: 2289,
                    name: 'props'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2290,
                    end: 2291,
                    name: 'c'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2292,
                  end: 2308,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2292,
                    end: 2298,
                    name: '_owner'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 2299,
                    end: 2308,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2299,
                      end: 2300,
                      name: 'K'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2301,
                      end: 2308,
                      name: 'current'
                    }
                  },
                  kind: 'init'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2311,
      end: 2404,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2320, end: 2321, name: 'N' },
      params: [
        { type: 'Identifier', start: 2322, end: 2323, name: 'a' },
        { type: 'Identifier', start: 2324, end: 2325, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 2326,
        end: 2404,
        body: [
          {
            type: 'ReturnStatement',
            start: 2327,
            end: 2403,
            argument: {
              type: 'ObjectExpression',
              start: 2333,
              end: 2403,
              properties: [
                {
                  type: 'Property',
                  start: 2334,
                  end: 2344,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2334,
                    end: 2342,
                    name: '$$typeof'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2343,
                    end: 2344,
                    name: 'l'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2345,
                  end: 2356,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2345,
                    end: 2349,
                    name: 'type'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 2350,
                    end: 2356,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2350,
                      end: 2351,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2352,
                      end: 2356,
                      name: 'type'
                    }
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2357,
                  end: 2362,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2357,
                    end: 2360,
                    name: 'key'
                  },
                  value: {
                    type: 'Identifier',
                    start: 2361,
                    end: 2362,
                    name: 'b'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2363,
                  end: 2372,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2363,
                    end: 2366,
                    name: 'ref'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 2367,
                    end: 2372,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2367,
                      end: 2368,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2369,
                      end: 2372,
                      name: 'ref'
                    }
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2373,
                  end: 2386,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2373,
                    end: 2378,
                    name: 'props'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 2379,
                    end: 2386,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2379,
                      end: 2380,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2381,
                      end: 2386,
                      name: 'props'
                    }
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 2387,
                  end: 2402,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 2387,
                    end: 2393,
                    name: '_owner'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 2394,
                    end: 2402,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2394,
                      end: 2395,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2396,
                      end: 2402,
                      name: '_owner'
                    }
                  },
                  kind: 'init'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2404,
      end: 2470,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2413, end: 2414, name: 'O' },
      params: [ { type: 'Identifier', start: 2415, end: 2416, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 2417,
        end: 2470,
        body: [
          {
            type: 'ReturnStatement',
            start: 2418,
            end: 2469,
            argument: {
              type: 'LogicalExpression',
              start: 2424,
              end: 2469,
              operator: '&&',
              left: {
                type: 'LogicalExpression',
                start: 2424,
                end: 2453,
                operator: '&&',
                left: {
                  type: 'BinaryExpression',
                  start: 2424,
                  end: 2443,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 2424,
                    end: 2432,
                    value: 'object',
                    raw: '"object"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 2435,
                    end: 2443,
                    operator: 'typeof',
                    argument: {
                      type: 'Identifier',
                      start: 2442,
                      end: 2443,
                      name: 'a'
                    },
                    prefix: true
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 2445,
                  end: 2453,
                  operator: '!==',
                  left: {
                    type: 'Literal',
                    start: 2445,
                    end: 2449,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'Identifier',
                    start: 2452,
                    end: 2453,
                    name: 'a'
                  }
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 2455,
                end: 2469,
                operator: '===',
                left: {
                  type: 'MemberExpression',
                  start: 2455,
                  end: 2465,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 2455,
                    end: 2456,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 2457,
                    end: 2465,
                    name: '$$typeof'
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 2468,
                  end: 2469,
                  name: 'l'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2470,
      end: 2569,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2479, end: 2485, name: 'escape' },
      params: [ { type: 'Identifier', start: 2486, end: 2487, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 2488,
        end: 2569,
        body: [
          {
            type: 'VariableDeclaration',
            start: 2489,
            end: 2515,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 2493,
                end: 2514,
                id: {
                  type: 'Identifier',
                  start: 2493,
                  end: 2494,
                  name: 'b'
                },
                init: {
                  type: 'ObjectExpression',
                  start: 2495,
                  end: 2514,
                  properties: [
                    {
                      type: 'Property',
                      start: 2496,
                      end: 2504,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Literal',
                        start: 2496,
                        end: 2499,
                        value: '=',
                        raw: '"="'
                      },
                      value: {
                        type: 'Literal',
                        start: 2500,
                        end: 2504,
                        value: '=0',
                        raw: '"=0"'
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 2505,
                      end: 2513,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Literal',
                        start: 2505,
                        end: 2508,
                        value: ':',
                        raw: '":"'
                      },
                      value: {
                        type: 'Literal',
                        start: 2509,
                        end: 2513,
                        value: '=2',
                        raw: '"=2"'
                      },
                      kind: 'init'
                    }
                  ]
                }
              }
            ]
          },
          {
            type: 'ReturnStatement',
            start: 2515,
            end: 2568,
            argument: {
              type: 'BinaryExpression',
              start: 2521,
              end: 2568,
              operator: '+',
              left: {
                type: 'Literal',
                start: 2521,
                end: 2524,
                value: '$',
                raw: '"$"'
              },
              right: {
                type: 'CallExpression',
                start: 2525,
                end: 2568,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 2525,
                  end: 2534,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 2525,
                    end: 2526,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 2527,
                    end: 2534,
                    name: 'replace'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 2535,
                    end: 2542,
                    raw: '/[=:]/g',
                    regex: { flags: 'g', pattern: '[=:]' },
                    value: /[=:]/g
                  },
                  {
                    type: 'FunctionExpression',
                    start: 2543,
                    end: 2567,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 2552,
                        end: 2553,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 2554,
                      end: 2567,
                      body: [
                        {
                          type: 'ReturnStatement',
                          start: 2555,
                          end: 2566,
                          argument: {
                            type: 'MemberExpression',
                            start: 2562,
                            end: 2566,
                            computed: true,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 2562,
                              end: 2563,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 2564,
                              end: 2565,
                              name: 'a'
                            }
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 2569,
      end: 2582,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 2573,
          end: 2581,
          id: { type: 'Identifier', start: 2573, end: 2574, name: 'P' },
          init: {
            type: 'Literal',
            start: 2575,
            end: 2581,
            raw: '/\\/+/g',
            regex: { flags: 'g', pattern: '\\/+' },
            value: /\/+/g
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 2582,
      end: 2679,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2591, end: 2592, name: 'Q' },
      params: [
        { type: 'Identifier', start: 2593, end: 2594, name: 'a' },
        { type: 'Identifier', start: 2595, end: 2596, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 2597,
        end: 2679,
        body: [
          {
            type: 'ReturnStatement',
            start: 2598,
            end: 2678,
            argument: {
              type: 'ConditionalExpression',
              start: 2604,
              end: 2678,
              test: {
                type: 'LogicalExpression',
                start: 2604,
                end: 2646,
                operator: '&&',
                left: {
                  type: 'LogicalExpression',
                  start: 2604,
                  end: 2633,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 2604,
                    end: 2623,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 2604,
                      end: 2612,
                      value: 'object',
                      raw: '"object"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 2615,
                      end: 2623,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 2622,
                        end: 2623,
                        name: 'a'
                      },
                      prefix: true
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 2625,
                    end: 2633,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 2625,
                      end: 2629,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 2632,
                      end: 2633,
                      name: 'a'
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 2635,
                  end: 2646,
                  operator: '!=',
                  left: {
                    type: 'Literal',
                    start: 2635,
                    end: 2639,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 2641,
                    end: 2646,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2641,
                      end: 2642,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2643,
                      end: 2646,
                      name: 'key'
                    }
                  }
                }
              },
              consequent: {
                type: 'CallExpression',
                start: 2647,
                end: 2663,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 2647,
                  end: 2653,
                  name: 'escape'
                },
                arguments: [
                  {
                    type: 'BinaryExpression',
                    start: 2654,
                    end: 2662,
                    operator: '+',
                    left: {
                      type: 'Literal',
                      start: 2654,
                      end: 2656,
                      value: '',
                      raw: '""'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 2657,
                      end: 2662,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2657,
                        end: 2658,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2659,
                        end: 2662,
                        name: 'key'
                      }
                    }
                  }
                ]
              },
              alternate: {
                type: 'CallExpression',
                start: 2664,
                end: 2678,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 2664,
                  end: 2674,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 2664,
                    end: 2665,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 2666,
                    end: 2674,
                    name: 'toString'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 2675,
                    end: 2677,
                    raw: '36',
                    value: 36
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2680,
      end: 3594,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2689, end: 2690, name: 'R' },
      params: [
        { type: 'Identifier', start: 2691, end: 2692, name: 'a' },
        { type: 'Identifier', start: 2693, end: 2694, name: 'b' },
        { type: 'Identifier', start: 2695, end: 2696, name: 'e' },
        { type: 'Identifier', start: 2697, end: 2698, name: 'd' },
        { type: 'Identifier', start: 2699, end: 2700, name: 'c' }
      ],
      body: {
        type: 'BlockStatement',
        start: 2701,
        end: 3594,
        body: [
          {
            type: 'VariableDeclaration',
            start: 2702,
            end: 2717,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 2706,
                end: 2716,
                id: {
                  type: 'Identifier',
                  start: 2706,
                  end: 2707,
                  name: 'k'
                },
                init: {
                  type: 'UnaryExpression',
                  start: 2708,
                  end: 2716,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 2715,
                    end: 2716,
                    name: 'a'
                  },
                  prefix: true
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 2717,
            end: 2758,
            test: {
              type: 'LogicalExpression',
              start: 2720,
              end: 2750,
              operator: '||',
              left: {
                type: 'BinaryExpression',
                start: 2720,
                end: 2735,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 2720,
                  end: 2731,
                  value: 'undefined',
                  raw: '"undefined"'
                },
                right: {
                  type: 'Identifier',
                  start: 2734,
                  end: 2735,
                  name: 'k'
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 2737,
                end: 2750,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 2737,
                  end: 2746,
                  value: 'boolean',
                  raw: '"boolean"'
                },
                right: {
                  type: 'Identifier',
                  start: 2749,
                  end: 2750,
                  name: 'k'
                }
              }
            },
            consequent: {
              type: 'ExpressionStatement',
              start: 2751,
              end: 2758,
              expression: {
                type: 'AssignmentExpression',
                start: 2751,
                end: 2757,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 2751,
                  end: 2752,
                  name: 'a'
                },
                right: {
                  type: 'Literal',
                  start: 2753,
                  end: 2757,
                  raw: 'null',
                  value: null
                }
              }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 2758,
            end: 2767,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 2762,
                end: 2766,
                id: {
                  type: 'Identifier',
                  start: 2762,
                  end: 2763,
                  name: 'h'
                },
                init: {
                  type: 'UnaryExpression',
                  start: 2764,
                  end: 2766,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 2765,
                    end: 2766,
                    raw: '1',
                    value: 1
                  },
                  prefix: true
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 2767,
            end: 2891,
            test: {
              type: 'BinaryExpression',
              start: 2770,
              end: 2778,
              operator: '===',
              left: {
                type: 'Literal',
                start: 2770,
                end: 2774,
                raw: 'null',
                value: null
              },
              right: { type: 'Identifier', start: 2777, end: 2778, name: 'a' }
            },
            consequent: {
              type: 'ExpressionStatement',
              start: 2779,
              end: 2784,
              expression: {
                type: 'AssignmentExpression',
                start: 2779,
                end: 2783,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 2779,
                  end: 2780,
                  name: 'h'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 2781,
                  end: 2783,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 2782,
                    end: 2783,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                }
              }
            },
            alternate: {
              type: 'SwitchStatement',
              start: 2789,
              end: 2891,
              discriminant: { type: 'Identifier', start: 2796, end: 2797, name: 'k' },
              cases: [
                {
                  type: 'SwitchCase',
                  start: 2799,
                  end: 2813,
                  test: {
                    type: 'Literal',
                    start: 2804,
                    end: 2812,
                    value: 'string',
                    raw: '"string"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 2813,
                  end: 2838,
                  test: {
                    type: 'Literal',
                    start: 2818,
                    end: 2826,
                    value: 'number',
                    raw: '"number"'
                  },
                  consequent: [
                    {
                      type: 'ExpressionStatement',
                      start: 2827,
                      end: 2832,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 2827,
                        end: 2831,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 2827,
                          end: 2828,
                          name: 'h'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 2829,
                          end: 2831,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2830,
                            end: 2831,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        }
                      }
                    },
                    {
                      type: 'BreakStatement',
                      start: 2832,
                      end: 2838,
                      label: null
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 2838,
                  end: 2890,
                  test: {
                    type: 'Literal',
                    start: 2843,
                    end: 2851,
                    value: 'object',
                    raw: '"object"'
                  },
                  consequent: [
                    {
                      type: 'SwitchStatement',
                      start: 2852,
                      end: 2890,
                      discriminant: {
                        type: 'MemberExpression',
                        start: 2859,
                        end: 2869,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 2859,
                          end: 2860,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 2861,
                          end: 2869,
                          name: '$$typeof'
                        }
                      },
                      cases: [
                        {
                          type: 'SwitchCase',
                          start: 2871,
                          end: 2878,
                          test: {
                            type: 'Identifier',
                            start: 2876,
                            end: 2877,
                            name: 'l'
                          },
                          consequent: []
                        },
                        {
                          type: 'SwitchCase',
                          start: 2878,
                          end: 2889,
                          test: {
                            type: 'Identifier',
                            start: 2883,
                            end: 2884,
                            name: 'n'
                          },
                          consequent: [
                            {
                              type: 'ExpressionStatement',
                              start: 2885,
                              end: 2889,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 2885,
                                end: 2889,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 2885,
                                  end: 2886,
                                  name: 'h'
                                },
                                right: {
                                  type: 'UnaryExpression',
                                  start: 2887,
                                  end: 2889,
                                  operator: '!',
                                  argument: {
                                    type: 'Literal',
                                    start: 2888,
                                    end: 2889,
                                    raw: '0',
                                    value: 0
                                  },
                                  prefix: true
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            type: 'IfStatement',
            start: 2891,
            end: 3122,
            test: { type: 'Identifier', start: 2894, end: 2895, name: 'h' },
            consequent: {
              type: 'ReturnStatement',
              start: 2896,
              end: 3122,
              argument: {
                type: 'SequenceExpression',
                start: 2903,
                end: 3121,
                expressions: [
                  {
                    type: 'AssignmentExpression',
                    start: 2903,
                    end: 2906,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 2903,
                      end: 2904,
                      name: 'h'
                    },
                    right: {
                      type: 'Identifier',
                      start: 2905,
                      end: 2906,
                      name: 'a'
                    }
                  },
                  {
                    type: 'AssignmentExpression',
                    start: 2907,
                    end: 2913,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 2907,
                      end: 2908,
                      name: 'c'
                    },
                    right: {
                      type: 'CallExpression',
                      start: 2909,
                      end: 2913,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 2909,
                        end: 2910,
                        name: 'c'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 2911,
                          end: 2912,
                          name: 'h'
                        }
                      ]
                    }
                  },
                  {
                    type: 'AssignmentExpression',
                    start: 2914,
                    end: 2935,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 2914,
                      end: 2915,
                      name: 'a'
                    },
                    right: {
                      type: 'ConditionalExpression',
                      start: 2916,
                      end: 2935,
                      test: {
                        type: 'BinaryExpression',
                        start: 2916,
                        end: 2922,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 2916,
                          end: 2918,
                          value: '',
                          raw: '""'
                        },
                        right: {
                          type: 'Identifier',
                          start: 2921,
                          end: 2922,
                          name: 'd'
                        }
                      },
                      consequent: {
                        type: 'BinaryExpression',
                        start: 2923,
                        end: 2933,
                        operator: '+',
                        left: {
                          type: 'Literal',
                          start: 2923,
                          end: 2926,
                          value: '.',
                          raw: '"."'
                        },
                        right: {
                          type: 'CallExpression',
                          start: 2927,
                          end: 2933,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 2927,
                            end: 2928,
                            name: 'Q'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 2929,
                              end: 2930,
                              name: 'h'
                            },
                            {
                              type: 'Literal',
                              start: 2931,
                              end: 2932,
                              raw: '0',
                              value: 0
                            }
                          ]
                        }
                      },
                      alternate: {
                        type: 'Identifier',
                        start: 2934,
                        end: 2935,
                        name: 'd'
                      }
                    }
                  },
                  {
                    type: 'ConditionalExpression',
                    start: 2936,
                    end: 3119,
                    test: {
                      type: 'CallExpression',
                      start: 2936,
                      end: 2940,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 2936,
                        end: 2937,
                        name: 'I'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 2938,
                          end: 2939,
                          name: 'c'
                        }
                      ]
                    },
                    consequent: {
                      type: 'SequenceExpression',
                      start: 2942,
                      end: 3016,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 2942,
                          end: 2946,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 2942,
                            end: 2943,
                            name: 'e'
                          },
                          right: {
                            type: 'Literal',
                            start: 2944,
                            end: 2946,
                            value: '',
                            raw: '""'
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 2947,
                          end: 2982,
                          operator: '&&',
                          left: {
                            type: 'BinaryExpression',
                            start: 2947,
                            end: 2954,
                            operator: '!=',
                            left: {
                              type: 'Literal',
                              start: 2947,
                              end: 2951,
                              raw: 'null',
                              value: null
                            },
                            right: {
                              type: 'Identifier',
                              start: 2953,
                              end: 2954,
                              name: 'a'
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 2957,
                            end: 2981,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 2957,
                              end: 2958,
                              name: 'e'
                            },
                            right: {
                              type: 'BinaryExpression',
                              start: 2959,
                              end: 2981,
                              operator: '+',
                              left: {
                                type: 'CallExpression',
                                start: 2959,
                                end: 2977,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 2959,
                                  end: 2968,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 2959,
                                    end: 2960,
                                    name: 'a'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 2961,
                                    end: 2968,
                                    name: 'replace'
                                  }
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 2969,
                                    end: 2970,
                                    name: 'P'
                                  },
                                  {
                                    type: 'Literal',
                                    start: 2971,
                                    end: 2976,
                                    value: '$&/',
                                    raw: '"$&/"'
                                  }
                                ]
                              },
                              right: {
                                type: 'Literal',
                                start: 2978,
                                end: 2981,
                                value: '/',
                                raw: '"/"'
                              }
                            }
                          }
                        },
                        {
                          type: 'CallExpression',
                          start: 2983,
                          end: 3016,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 2983,
                            end: 2984,
                            name: 'R'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 2985,
                              end: 2986,
                              name: 'c'
                            },
                            {
                              type: 'Identifier',
                              start: 2987,
                              end: 2988,
                              name: 'b'
                            },
                            {
                              type: 'Identifier',
                              start: 2989,
                              end: 2990,
                              name: 'e'
                            },
                            {
                              type: 'Literal',
                              start: 2991,
                              end: 2993,
                              value: '',
                              raw: '""'
                            },
                            {
                              type: 'FunctionExpression',
                              start: 2994,
                              end: 3015,
                              async: false,
                              generator: false,
                              id: null,
                              params: [
                                {
                                  type: 'Identifier',
                                  start: 3003,
                                  end: 3004,
                                  name: 'a'
                                }
                              ],
                              body: {
                                type: 'BlockStatement',
                                start: 3005,
                                end: 3015,
                                body: [
                                  {
                                    type: 'ReturnStatement',
                                    start: 3006,
                                    end: 3014,
                                    argument: {
                                      type: 'Identifier',
                                      start: 3013,
                                      end: 3014,
                                      name: 'a'
                                    }
                                  }
                                ]
                              },
                              expression: false
                            }
                          ]
                        }
                      ]
                    },
                    alternate: {
                      type: 'LogicalExpression',
                      start: 3018,
                      end: 3119,
                      operator: '&&',
                      left: {
                        type: 'BinaryExpression',
                        start: 3018,
                        end: 3025,
                        operator: '!=',
                        left: {
                          type: 'Literal',
                          start: 3018,
                          end: 3022,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'Identifier',
                          start: 3024,
                          end: 3025,
                          name: 'c'
                        }
                      },
                      right: {
                        type: 'SequenceExpression',
                        start: 3028,
                        end: 3118,
                        expressions: [
                          {
                            type: 'LogicalExpression',
                            start: 3028,
                            end: 3108,
                            operator: '&&',
                            left: {
                              type: 'CallExpression',
                              start: 3028,
                              end: 3032,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 3028,
                                end: 3029,
                                name: 'O'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 3030,
                                  end: 3031,
                                  name: 'c'
                                }
                              ]
                            },
                            right: {
                              type: 'AssignmentExpression',
                              start: 3035,
                              end: 3107,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 3035,
                                end: 3036,
                                name: 'c'
                              },
                              right: {
                                type: 'CallExpression',
                                start: 3037,
                                end: 3107,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 3037,
                                  end: 3038,
                                  name: 'N'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 3039,
                                    end: 3040,
                                    name: 'c'
                                  },
                                  {
                                    type: 'BinaryExpression',
                                    start: 3041,
                                    end: 3106,
                                    operator: '+',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 3041,
                                      end: 3104,
                                      operator: '+',
                                      left: {
                                        type: 'Identifier',
                                        start: 3041,
                                        end: 3042,
                                        name: 'e'
                                      },
                                      right: {
                                        type: 'ConditionalExpression',
                                        start: 3044,
                                        end: 3103,
                                        test: {
                                          type: 'LogicalExpression',
                                          start: 3044,
                                          end: 3068,
                                          operator: '||',
                                          left: {
                                            type: 'UnaryExpression',
                                            start: 3044,
                                            end: 3050,
                                            operator: '!',
                                            argument: {
                                              type: 'MemberExpression',
                                              start: 3045,
                                              end: 3050,
                                              computed: false,
                                              optional: false,
                                              object: {
                                                type: 'Identifier',
                                                start: 3045,
                                                end: 3046,
                                                name: 'c'
                                              },
                                              property: {
                                                type: 'Identifier',
                                                start: 3047,
                                                end: 3050,
                                                name: 'key'
                                              }
                                            },
                                            prefix: true
                                          },
                                          right: {
                                            type: 'LogicalExpression',
                                            start: 3052,
                                            end: 3068,
                                            operator: '&&',
                                            left: {
                                              type: 'Identifier',
                                              start: 3052,
                                              end: 3053,
                                              name: 'h'
                                            },
                                            right: {
                                              type: 'BinaryExpression',
                                              start: 3055,
                                              end: 3068,
                                              operator: '===',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 3055,
                                                end: 3060,
                                                computed: false,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 3055,
                                                  end: 3056,
                                                  name: 'h'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 3057,
                                                  end: 3060,
                                                  name: 'key'
                                                }
                                              },
                                              right: {
                                                type: 'MemberExpression',
                                                start: 3063,
                                                end: 3068,
                                                computed: false,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 3063,
                                                  end: 3064,
                                                  name: 'c'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 3065,
                                                  end: 3068,
                                                  name: 'key'
                                                }
                                              }
                                            }
                                          }
                                        },
                                        consequent: {
                                          type: 'Literal',
                                          start: 3069,
                                          end: 3071,
                                          value: '',
                                          raw: '""'
                                        },
                                        alternate: {
                                          type: 'BinaryExpression',
                                          start: 3072,
                                          end: 3103,
                                          operator: '+',
                                          left: {
                                            type: 'CallExpression',
                                            start: 3072,
                                            end: 3099,
                                            optional: false,
                                            callee: {
                                              type: 'MemberExpression',
                                              start: 3072,
                                              end: 3090,
                                              computed: false,
                                              optional: false,
                                              object: {
                                                type: 'BinaryExpression',
                                                start: 3073,
                                                end: 3081,
                                                operator: '+',
                                                left: {
                                                  type: 'Literal',
                                                  start: 3073,
                                                  end: 3075,
                                                  value: '',
                                                  raw: '""'
                                                },
                                                right: {
                                                  type: 'MemberExpression',
                                                  start: 3076,
                                                  end: 3081,
                                                  computed: false,
                                                  optional: false,
                                                  object: {
                                                    type: 'Identifier',
                                                    start: 3076,
                                                    end: 3077,
                                                    name: 'c'
                                                  },
                                                  property: {
                                                    type: 'Identifier',
                                                    start: 3078,
                                                    end: 3081,
                                                    name: 'key'
                                                  }
                                                }
                                              },
                                              property: {
                                                type: 'Identifier',
                                                start: 3083,
                                                end: 3090,
                                                name: 'replace'
                                              }
                                            },
                                            arguments: [
                                              {
                                                type: 'Identifier',
                                                start: 3091,
                                                end: 3092,
                                                name: 'P'
                                              },
                                              {
                                                type: 'Literal',
                                                start: 3093,
                                                end: 3098,
                                                value: '$&/',
                                                raw: '"$&/"'
                                              }
                                            ]
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 3100,
                                            end: 3103,
                                            value: '/',
                                            raw: '"/"'
                                          }
                                        }
                                      }
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 3105,
                                      end: 3106,
                                      name: 'a'
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            type: 'CallExpression',
                            start: 3109,
                            end: 3118,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 3109,
                              end: 3115,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 3109,
                                end: 3110,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 3111,
                                end: 3115,
                                name: 'push'
                              }
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 3116,
                                end: 3117,
                                name: 'c'
                              }
                            ]
                          }
                        ]
                      }
                    }
                  },
                  {
                    type: 'Literal',
                    start: 3120,
                    end: 3121,
                    raw: '1',
                    value: 1
                  }
                ]
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 3122,
            end: 3126,
            expression: {
              type: 'AssignmentExpression',
              start: 3122,
              end: 3125,
              operator: '=',
              left: { type: 'Identifier', start: 3122, end: 3123, name: 'h' },
              right: {
                type: 'Literal',
                start: 3124,
                end: 3125,
                raw: '0',
                value: 0
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 3126,
            end: 3145,
            expression: {
              type: 'AssignmentExpression',
              start: 3126,
              end: 3144,
              operator: '=',
              left: { type: 'Identifier', start: 3126, end: 3127, name: 'd' },
              right: {
                type: 'ConditionalExpression',
                start: 3128,
                end: 3144,
                test: {
                  type: 'BinaryExpression',
                  start: 3128,
                  end: 3134,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 3128,
                    end: 3130,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'Identifier',
                    start: 3133,
                    end: 3134,
                    name: 'd'
                  }
                },
                consequent: {
                  type: 'Literal',
                  start: 3135,
                  end: 3138,
                  value: '.',
                  raw: '"."'
                },
                alternate: {
                  type: 'BinaryExpression',
                  start: 3139,
                  end: 3144,
                  operator: '+',
                  left: {
                    type: 'Identifier',
                    start: 3139,
                    end: 3140,
                    name: 'd'
                  },
                  right: {
                    type: 'Literal',
                    start: 3141,
                    end: 3144,
                    value: ':',
                    raw: '":"'
                  }
                }
              }
            }
          },
          {
            type: 'IfStatement',
            start: 3145,
            end: 3585,
            test: {
              type: 'CallExpression',
              start: 3148,
              end: 3152,
              optional: false,
              callee: { type: 'Identifier', start: 3148, end: 3149, name: 'I' },
              arguments: [
                {
                  type: 'Identifier',
                  start: 3150,
                  end: 3151,
                  name: 'a'
                }
              ]
            },
            consequent: {
              type: 'ForStatement',
              start: 3153,
              end: 3220,
              init: {
                type: 'VariableDeclaration',
                start: 3157,
                end: 3164,
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    start: 3161,
                    end: 3164,
                    id: {
                      type: 'Identifier',
                      start: 3161,
                      end: 3162,
                      name: 'g'
                    },
                    init: {
                      type: 'Literal',
                      start: 3163,
                      end: 3164,
                      raw: '0',
                      value: 0
                    }
                  }
                ]
              },
              test: {
                type: 'BinaryExpression',
                start: 3165,
                end: 3175,
                operator: '<',
                left: {
                  type: 'Identifier',
                  start: 3165,
                  end: 3166,
                  name: 'g'
                },
                right: {
                  type: 'MemberExpression',
                  start: 3167,
                  end: 3175,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 3167,
                    end: 3168,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 3169,
                    end: 3175,
                    name: 'length'
                  }
                }
              },
              update: {
                type: 'UpdateExpression',
                start: 3176,
                end: 3179,
                prefix: false,
                operator: '++',
                argument: {
                  type: 'Identifier',
                  start: 3176,
                  end: 3177,
                  name: 'g'
                }
              },
              body: {
                type: 'BlockStatement',
                start: 3180,
                end: 3220,
                body: [
                  {
                    type: 'ExpressionStatement',
                    start: 3181,
                    end: 3189,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 3181,
                      end: 3188,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 3181,
                        end: 3182,
                        name: 'k'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 3184,
                        end: 3188,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 3184,
                          end: 3185,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 3186,
                          end: 3187,
                          name: 'g'
                        }
                      }
                    }
                  },
                  {
                    type: 'VariableDeclaration',
                    start: 3189,
                    end: 3204,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 3193,
                        end: 3203,
                        id: {
                          type: 'Identifier',
                          start: 3193,
                          end: 3194,
                          name: 'f'
                        },
                        init: {
                          type: 'BinaryExpression',
                          start: 3195,
                          end: 3203,
                          operator: '+',
                          left: {
                            type: 'Identifier',
                            start: 3195,
                            end: 3196,
                            name: 'd'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 3197,
                            end: 3203,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 3197,
                              end: 3198,
                              name: 'Q'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 3199,
                                end: 3200,
                                name: 'k'
                              },
                              {
                                type: 'Identifier',
                                start: 3201,
                                end: 3202,
                                name: 'g'
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 3204,
                    end: 3219,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 3204,
                      end: 3219,
                      operator: '+=',
                      left: {
                        type: 'Identifier',
                        start: 3204,
                        end: 3205,
                        name: 'h'
                      },
                      right: {
                        type: 'CallExpression',
                        start: 3207,
                        end: 3219,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 3207,
                          end: 3208,
                          name: 'R'
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 3209,
                            end: 3210,
                            name: 'k'
                          },
                          {
                            type: 'Identifier',
                            start: 3211,
                            end: 3212,
                            name: 'b'
                          },
                          {
                            type: 'Identifier',
                            start: 3213,
                            end: 3214,
                            name: 'e'
                          },
                          {
                            type: 'Identifier',
                            start: 3215,
                            end: 3216,
                            name: 'f'
                          },
                          {
                            type: 'Identifier',
                            start: 3217,
                            end: 3218,
                            name: 'c'
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            alternate: {
              type: 'IfStatement',
              start: 3225,
              end: 3585,
              test: {
                type: 'SequenceExpression',
                start: 3228,
                end: 3256,
                expressions: [
                  {
                    type: 'AssignmentExpression',
                    start: 3228,
                    end: 3234,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 3228,
                      end: 3229,
                      name: 'f'
                    },
                    right: {
                      type: 'CallExpression',
                      start: 3230,
                      end: 3234,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 3230,
                        end: 3231,
                        name: 'A'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3232,
                          end: 3233,
                          name: 'a'
                        }
                      ]
                    }
                  },
                  {
                    type: 'BinaryExpression',
                    start: 3235,
                    end: 3256,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 3235,
                      end: 3245,
                      value: 'function',
                      raw: '"function"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 3248,
                      end: 3256,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 3255,
                        end: 3256,
                        name: 'f'
                      },
                      prefix: true
                    }
                  }
                ]
              },
              consequent: {
                type: 'ForStatement',
                start: 3257,
                end: 3336,
                init: {
                  type: 'SequenceExpression',
                  start: 3261,
                  end: 3276,
                  expressions: [
                    {
                      type: 'AssignmentExpression',
                      start: 3261,
                      end: 3272,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 3261,
                        end: 3262,
                        name: 'a'
                      },
                      right: {
                        type: 'CallExpression',
                        start: 3263,
                        end: 3272,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 3263,
                          end: 3269,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 3263,
                            end: 3264,
                            name: 'f'
                          },
                          property: {
                            type: 'Identifier',
                            start: 3265,
                            end: 3269,
                            name: 'call'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 3270,
                            end: 3271,
                            name: 'a'
                          }
                        ]
                      }
                    },
                    {
                      type: 'AssignmentExpression',
                      start: 3273,
                      end: 3276,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 3273,
                        end: 3274,
                        name: 'g'
                      },
                      right: {
                        type: 'Literal',
                        start: 3275,
                        end: 3276,
                        raw: '0',
                        value: 0
                      }
                    }
                  ]
                },
                test: {
                  type: 'UnaryExpression',
                  start: 3277,
                  end: 3295,
                  operator: '!',
                  argument: {
                    type: 'MemberExpression',
                    start: 3278,
                    end: 3295,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'AssignmentExpression',
                      start: 3279,
                      end: 3289,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 3279,
                        end: 3280,
                        name: 'k'
                      },
                      right: {
                        type: 'CallExpression',
                        start: 3281,
                        end: 3289,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 3281,
                          end: 3287,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 3281,
                            end: 3282,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 3283,
                            end: 3287,
                            name: 'next'
                          }
                        },
                        arguments: []
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 3291,
                      end: 3295,
                      name: 'done'
                    }
                  },
                  prefix: true
                },
                update: null,
                body: {
                  type: 'ExpressionStatement',
                  start: 3297,
                  end: 3336,
                  expression: {
                    type: 'SequenceExpression',
                    start: 3297,
                    end: 3335,
                    expressions: [
                      {
                        type: 'AssignmentExpression',
                        start: 3297,
                        end: 3306,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 3297,
                          end: 3298,
                          name: 'k'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 3299,
                          end: 3306,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 3299,
                            end: 3300,
                            name: 'k'
                          },
                          property: {
                            type: 'Identifier',
                            start: 3301,
                            end: 3306,
                            name: 'value'
                          }
                        }
                      },
                      {
                        type: 'AssignmentExpression',
                        start: 3307,
                        end: 3319,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 3307,
                          end: 3308,
                          name: 'f'
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 3309,
                          end: 3319,
                          operator: '+',
                          left: {
                            type: 'Identifier',
                            start: 3309,
                            end: 3310,
                            name: 'd'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 3311,
                            end: 3319,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 3311,
                              end: 3312,
                              name: 'Q'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 3313,
                                end: 3314,
                                name: 'k'
                              },
                              {
                                type: 'UpdateExpression',
                                start: 3315,
                                end: 3318,
                                prefix: false,
                                operator: '++',
                                argument: {
                                  type: 'Identifier',
                                  start: 3315,
                                  end: 3316,
                                  name: 'g'
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        type: 'AssignmentExpression',
                        start: 3320,
                        end: 3335,
                        operator: '+=',
                        left: {
                          type: 'Identifier',
                          start: 3320,
                          end: 3321,
                          name: 'h'
                        },
                        right: {
                          type: 'CallExpression',
                          start: 3323,
                          end: 3335,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 3323,
                            end: 3324,
                            name: 'R'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 3325,
                              end: 3326,
                              name: 'k'
                            },
                            {
                              type: 'Identifier',
                              start: 3327,
                              end: 3328,
                              name: 'b'
                            },
                            {
                              type: 'Identifier',
                              start: 3329,
                              end: 3330,
                              name: 'e'
                            },
                            {
                              type: 'Identifier',
                              start: 3331,
                              end: 3332,
                              name: 'f'
                            },
                            {
                              type: 'Identifier',
                              start: 3333,
                              end: 3334,
                              name: 'c'
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              alternate: {
                type: 'IfStatement',
                start: 3341,
                end: 3585,
                test: {
                  type: 'BinaryExpression',
                  start: 3344,
                  end: 3356,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 3344,
                    end: 3352,
                    value: 'object',
                    raw: '"object"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 3355,
                    end: 3356,
                    name: 'k'
                  }
                },
                consequent: {
                  type: 'ThrowStatement',
                  start: 3357,
                  end: 3585,
                  argument: {
                    type: 'SequenceExpression',
                    start: 3363,
                    end: 3584,
                    expressions: [
                      {
                        type: 'AssignmentExpression',
                        start: 3363,
                        end: 3374,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 3363,
                          end: 3364,
                          name: 'b'
                        },
                        right: {
                          type: 'CallExpression',
                          start: 3365,
                          end: 3374,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 3365,
                            end: 3371,
                            name: 'String'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 3372,
                              end: 3373,
                              name: 'a'
                            }
                          ]
                        }
                      },
                      {
                        type: 'CallExpression',
                        start: 3375,
                        end: 3584,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 3375,
                          end: 3380,
                          name: 'Error'
                        },
                        arguments: [
                          {
                            type: 'BinaryExpression',
                            start: 3381,
                            end: 3583,
                            operator: '+',
                            left: {
                              type: 'BinaryExpression',
                              start: 3381,
                              end: 3507,
                              operator: '+',
                              left: {
                                type: 'Literal',
                                start: 3381,
                                end: 3430,
                                value: 'Objects are not valid as a React child (found: ',
                                raw: '"Objects are not valid as a React child (found: "'
                              },
                              right: {
                                type: 'ConditionalExpression',
                                start: 3432,
                                end: 3506,
                                test: {
                                  type: 'BinaryExpression',
                                  start: 3432,
                                  end: 3453,
                                  operator: '===',
                                  left: {
                                    type: 'Literal',
                                    start: 3432,
                                    end: 3449,
                                    value: '[object Object]',
                                    raw: '"[object Object]"'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 3452,
                                    end: 3453,
                                    name: 'b'
                                  }
                                },
                                consequent: {
                                  type: 'BinaryExpression',
                                  start: 3454,
                                  end: 3504,
                                  operator: '+',
                                  left: {
                                    type: 'BinaryExpression',
                                    start: 3454,
                                    end: 3500,
                                    operator: '+',
                                    left: {
                                      type: 'Literal',
                                      start: 3454,
                                      end: 3474,
                                      value: 'object with keys {',
                                      raw: '"object with keys {"'
                                    },
                                    right: {
                                      type: 'CallExpression',
                                      start: 3475,
                                      end: 3500,
                                      optional: false,
                                      callee: {
                                        type: 'MemberExpression',
                                        start: 3475,
                                        end: 3494,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'CallExpression',
                                          start: 3475,
                                          end: 3489,
                                          optional: false,
                                          callee: {
                                            type: 'MemberExpression',
                                            start: 3475,
                                            end: 3486,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 3475,
                                              end: 3481,
                                              name: 'Object'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 3482,
                                              end: 3486,
                                              name: 'keys'
                                            }
                                          },
                                          arguments: [
                                            {
                                              type: 'Identifier',
                                              start: 3487,
                                              end: 3488,
                                              name: 'a'
                                            }
                                          ]
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 3490,
                                          end: 3494,
                                          name: 'join'
                                        }
                                      },
                                      arguments: [
                                        {
                                          type: 'Literal',
                                          start: 3495,
                                          end: 3499,
                                          value: ', ',
                                          raw: '", "'
                                        }
                                      ]
                                    }
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 3501,
                                    end: 3504,
                                    value: '}',
                                    raw: '"}"'
                                  }
                                },
                                alternate: {
                                  type: 'Identifier',
                                  start: 3505,
                                  end: 3506,
                                  name: 'b'
                                }
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 3508,
                              end: 3583,
                              value: '). If you meant to render a collection of children, use an array instead.',
                              raw: '"). If you meant to render a collection of children, use an array instead."'
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                alternate: null
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 3585,
            end: 3593,
            argument: { type: 'Identifier', start: 3592, end: 3593, name: 'h' }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 3595,
      end: 3704,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 3604, end: 3605, name: 'S' },
      params: [
        { type: 'Identifier', start: 3606, end: 3607, name: 'a' },
        { type: 'Identifier', start: 3608, end: 3609, name: 'b' },
        { type: 'Identifier', start: 3610, end: 3611, name: 'e' }
      ],
      body: {
        type: 'BlockStatement',
        start: 3612,
        end: 3704,
        body: [
          {
            type: 'IfStatement',
            start: 3613,
            end: 3633,
            test: {
              type: 'BinaryExpression',
              start: 3616,
              end: 3623,
              operator: '==',
              left: {
                type: 'Literal',
                start: 3616,
                end: 3620,
                raw: 'null',
                value: null
              },
              right: { type: 'Identifier', start: 3622, end: 3623, name: 'a' }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 3624,
              end: 3633,
              argument: { type: 'Identifier', start: 3631, end: 3632, name: 'a' }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 3633,
            end: 3646,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 3637,
                end: 3641,
                id: {
                  type: 'Identifier',
                  start: 3637,
                  end: 3638,
                  name: 'd'
                },
                init: {
                  type: 'ArrayExpression',
                  start: 3639,
                  end: 3641,
                  elements: []
                }
              },
              {
                type: 'VariableDeclarator',
                start: 3642,
                end: 3645,
                id: {
                  type: 'Identifier',
                  start: 3642,
                  end: 3643,
                  name: 'c'
                },
                init: {
                  type: 'Literal',
                  start: 3644,
                  end: 3645,
                  raw: '0',
                  value: 0
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 3646,
            end: 3695,
            expression: {
              type: 'CallExpression',
              start: 3646,
              end: 3694,
              optional: false,
              callee: { type: 'Identifier', start: 3646, end: 3647, name: 'R' },
              arguments: [
                {
                  type: 'Identifier',
                  start: 3648,
                  end: 3649,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 3650,
                  end: 3651,
                  name: 'd'
                },
                {
                  type: 'Literal',
                  start: 3652,
                  end: 3654,
                  value: '',
                  raw: '""'
                },
                {
                  type: 'Literal',
                  start: 3655,
                  end: 3657,
                  value: '',
                  raw: '""'
                },
                {
                  type: 'FunctionExpression',
                  start: 3658,
                  end: 3693,
                  async: false,
                  generator: false,
                  id: null,
                  params: [
                    {
                      type: 'Identifier',
                      start: 3667,
                      end: 3668,
                      name: 'a'
                    }
                  ],
                  body: {
                    type: 'BlockStatement',
                    start: 3669,
                    end: 3693,
                    body: [
                      {
                        type: 'ReturnStatement',
                        start: 3670,
                        end: 3692,
                        argument: {
                          type: 'CallExpression',
                          start: 3677,
                          end: 3692,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 3677,
                            end: 3683,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3677,
                              end: 3678,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3679,
                              end: 3683,
                              name: 'call'
                            }
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 3684,
                              end: 3685,
                              name: 'e'
                            },
                            {
                              type: 'Identifier',
                              start: 3686,
                              end: 3687,
                              name: 'a'
                            },
                            {
                              type: 'UpdateExpression',
                              start: 3688,
                              end: 3691,
                              prefix: false,
                              operator: '++',
                              argument: {
                                type: 'Identifier',
                                start: 3688,
                                end: 3689,
                                name: 'c'
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  expression: false
                }
              ]
            }
          },
          {
            type: 'ReturnStatement',
            start: 3695,
            end: 3703,
            argument: { type: 'Identifier', start: 3702, end: 3703, name: 'd' }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 3704,
      end: 4008,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 3713, end: 3714, name: 'T' },
      params: [ { type: 'Identifier', start: 3715, end: 3716, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 3717,
        end: 4008,
        body: [
          {
            type: 'IfStatement',
            start: 3718,
            end: 3949,
            test: {
              type: 'BinaryExpression',
              start: 3721,
              end: 3735,
              operator: '===',
              left: {
                type: 'UnaryExpression',
                start: 3721,
                end: 3723,
                operator: '-',
                argument: {
                  type: 'Literal',
                  start: 3722,
                  end: 3723,
                  raw: '1',
                  value: 1
                },
                prefix: true
              },
              right: {
                type: 'MemberExpression',
                start: 3726,
                end: 3735,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 3726,
                  end: 3727,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 3728,
                  end: 3735,
                  name: '_status'
                }
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 3736,
              end: 3949,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 3737,
                  end: 3753,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 3741,
                      end: 3752,
                      id: {
                        type: 'Identifier',
                        start: 3741,
                        end: 3742,
                        name: 'b'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 3743,
                        end: 3752,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 3743,
                          end: 3744,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 3745,
                          end: 3752,
                          name: '_result'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 3753,
                  end: 3759,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3753,
                    end: 3758,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 3753,
                      end: 3754,
                      name: 'b'
                    },
                    right: {
                      type: 'CallExpression',
                      start: 3755,
                      end: 3758,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 3755,
                        end: 3756,
                        name: 'b'
                      },
                      arguments: []
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 3759,
                  end: 3907,
                  expression: {
                    type: 'CallExpression',
                    start: 3759,
                    end: 3906,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 3759,
                      end: 3765,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3759,
                        end: 3760,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3761,
                        end: 3765,
                        name: 'then'
                      }
                    },
                    arguments: [
                      {
                        type: 'FunctionExpression',
                        start: 3766,
                        end: 3835,
                        async: false,
                        generator: false,
                        id: null,
                        params: [
                          {
                            type: 'Identifier',
                            start: 3775,
                            end: 3776,
                            name: 'b'
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          start: 3777,
                          end: 3835,
                          body: [
                            {
                              type: 'IfStatement',
                              start: 3778,
                              end: 3834,
                              test: {
                                type: 'LogicalExpression',
                                start: 3781,
                                end: 3810,
                                operator: '||',
                                left: {
                                  type: 'BinaryExpression',
                                  start: 3781,
                                  end: 3794,
                                  operator: '===',
                                  left: {
                                    type: 'Literal',
                                    start: 3781,
                                    end: 3782,
                                    raw: '0',
                                    value: 0
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 3785,
                                    end: 3794,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3785,
                                      end: 3786,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3787,
                                      end: 3794,
                                      name: '_status'
                                    }
                                  }
                                },
                                right: {
                                  type: 'BinaryExpression',
                                  start: 3796,
                                  end: 3810,
                                  operator: '===',
                                  left: {
                                    type: 'UnaryExpression',
                                    start: 3796,
                                    end: 3798,
                                    operator: '-',
                                    argument: {
                                      type: 'Literal',
                                      start: 3797,
                                      end: 3798,
                                      raw: '1',
                                      value: 1
                                    },
                                    prefix: true
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 3801,
                                    end: 3810,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3801,
                                      end: 3802,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3803,
                                      end: 3810,
                                      name: '_status'
                                    }
                                  }
                                }
                              },
                              consequent: {
                                type: 'ExpressionStatement',
                                start: 3811,
                                end: 3834,
                                expression: {
                                  type: 'SequenceExpression',
                                  start: 3811,
                                  end: 3834,
                                  expressions: [
                                    {
                                      type: 'AssignmentExpression',
                                      start: 3811,
                                      end: 3822,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 3811,
                                        end: 3820,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 3811,
                                          end: 3812,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 3813,
                                          end: 3820,
                                          name: '_status'
                                        }
                                      },
                                      right: {
                                        type: 'Literal',
                                        start: 3821,
                                        end: 3822,
                                        raw: '1',
                                        value: 1
                                      }
                                    },
                                    {
                                      type: 'AssignmentExpression',
                                      start: 3823,
                                      end: 3834,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 3823,
                                        end: 3832,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 3823,
                                          end: 3824,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 3825,
                                          end: 3832,
                                          name: '_result'
                                        }
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 3833,
                                        end: 3834,
                                        name: 'b'
                                      }
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            }
                          ]
                        },
                        expression: false
                      },
                      {
                        type: 'FunctionExpression',
                        start: 3836,
                        end: 3905,
                        async: false,
                        generator: false,
                        id: null,
                        params: [
                          {
                            type: 'Identifier',
                            start: 3845,
                            end: 3846,
                            name: 'b'
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          start: 3847,
                          end: 3905,
                          body: [
                            {
                              type: 'IfStatement',
                              start: 3848,
                              end: 3904,
                              test: {
                                type: 'LogicalExpression',
                                start: 3851,
                                end: 3880,
                                operator: '||',
                                left: {
                                  type: 'BinaryExpression',
                                  start: 3851,
                                  end: 3864,
                                  operator: '===',
                                  left: {
                                    type: 'Literal',
                                    start: 3851,
                                    end: 3852,
                                    raw: '0',
                                    value: 0
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 3855,
                                    end: 3864,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3855,
                                      end: 3856,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3857,
                                      end: 3864,
                                      name: '_status'
                                    }
                                  }
                                },
                                right: {
                                  type: 'BinaryExpression',
                                  start: 3866,
                                  end: 3880,
                                  operator: '===',
                                  left: {
                                    type: 'UnaryExpression',
                                    start: 3866,
                                    end: 3868,
                                    operator: '-',
                                    argument: {
                                      type: 'Literal',
                                      start: 3867,
                                      end: 3868,
                                      raw: '1',
                                      value: 1
                                    },
                                    prefix: true
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 3871,
                                    end: 3880,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3871,
                                      end: 3872,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3873,
                                      end: 3880,
                                      name: '_status'
                                    }
                                  }
                                }
                              },
                              consequent: {
                                type: 'ExpressionStatement',
                                start: 3881,
                                end: 3904,
                                expression: {
                                  type: 'SequenceExpression',
                                  start: 3881,
                                  end: 3904,
                                  expressions: [
                                    {
                                      type: 'AssignmentExpression',
                                      start: 3881,
                                      end: 3892,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 3881,
                                        end: 3890,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 3881,
                                          end: 3882,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 3883,
                                          end: 3890,
                                          name: '_status'
                                        }
                                      },
                                      right: {
                                        type: 'Literal',
                                        start: 3891,
                                        end: 3892,
                                        raw: '2',
                                        value: 2
                                      }
                                    },
                                    {
                                      type: 'AssignmentExpression',
                                      start: 3893,
                                      end: 3904,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 3893,
                                        end: 3902,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 3893,
                                          end: 3894,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 3895,
                                          end: 3902,
                                          name: '_result'
                                        }
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 3903,
                                        end: 3904,
                                        name: 'b'
                                      }
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            }
                          ]
                        },
                        expression: false
                      }
                    ]
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 3907,
                  end: 3948,
                  expression: {
                    type: 'LogicalExpression',
                    start: 3907,
                    end: 3948,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 3907,
                      end: 3921,
                      operator: '===',
                      left: {
                        type: 'UnaryExpression',
                        start: 3907,
                        end: 3909,
                        operator: '-',
                        argument: {
                          type: 'Literal',
                          start: 3908,
                          end: 3909,
                          raw: '1',
                          value: 1
                        },
                        prefix: true
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 3912,
                        end: 3921,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 3912,
                          end: 3913,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 3914,
                          end: 3921,
                          name: '_status'
                        }
                      }
                    },
                    right: {
                      type: 'SequenceExpression',
                      start: 3924,
                      end: 3947,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 3924,
                          end: 3935,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 3924,
                            end: 3933,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3924,
                              end: 3925,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3926,
                              end: 3933,
                              name: '_status'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 3934,
                            end: 3935,
                            raw: '0',
                            value: 0
                          }
                        },
                        {
                          type: 'AssignmentExpression',
                          start: 3936,
                          end: 3947,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 3936,
                            end: 3945,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3936,
                              end: 3937,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3938,
                              end: 3945,
                              name: '_result'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 3946,
                            end: 3947,
                            name: 'b'
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 3949,
            end: 3991,
            test: {
              type: 'BinaryExpression',
              start: 3952,
              end: 3965,
              operator: '===',
              left: {
                type: 'Literal',
                start: 3952,
                end: 3953,
                raw: '1',
                value: 1
              },
              right: {
                type: 'MemberExpression',
                start: 3956,
                end: 3965,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 3956,
                  end: 3957,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 3958,
                  end: 3965,
                  name: '_status'
                }
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 3966,
              end: 3991,
              argument: {
                type: 'MemberExpression',
                start: 3973,
                end: 3990,
                computed: false,
                optional: false,
                object: {
                  type: 'MemberExpression',
                  start: 3973,
                  end: 3982,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 3973,
                    end: 3974,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 3975,
                    end: 3982,
                    name: '_result'
                  }
                },
                property: {
                  type: 'Identifier',
                  start: 3983,
                  end: 3990,
                  name: 'default'
                }
              }
            },
            alternate: null
          },
          {
            type: 'ThrowStatement',
            start: 3991,
            end: 4007,
            argument: {
              type: 'MemberExpression',
              start: 3997,
              end: 4006,
              computed: false,
              optional: false,
              object: { type: 'Identifier', start: 3997, end: 3998, name: 'a' },
              property: {
                type: 'Identifier',
                start: 3999,
                end: 4006,
                name: '_result'
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 4009,
      end: 4125,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4013,
          end: 4029,
          id: { type: 'Identifier', start: 4013, end: 4014, name: 'U' },
          init: {
            type: 'ObjectExpression',
            start: 4015,
            end: 4029,
            properties: [
              {
                type: 'Property',
                start: 4016,
                end: 4028,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 4016,
                  end: 4023,
                  name: 'current'
                },
                value: {
                  type: 'Literal',
                  start: 4024,
                  end: 4028,
                  raw: 'null',
                  value: null
                },
                kind: 'init'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 4030,
          end: 4049,
          id: { type: 'Identifier', start: 4030, end: 4031, name: 'V' },
          init: {
            type: 'ObjectExpression',
            start: 4032,
            end: 4049,
            properties: [
              {
                type: 'Property',
                start: 4033,
                end: 4048,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 4033,
                  end: 4043,
                  name: 'transition'
                },
                value: {
                  type: 'Literal',
                  start: 4044,
                  end: 4048,
                  raw: 'null',
                  value: null
                },
                kind: 'init'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 4050,
          end: 4124,
          id: { type: 'Identifier', start: 4050, end: 4051, name: 'W' },
          init: {
            type: 'ObjectExpression',
            start: 4052,
            end: 4124,
            properties: [
              {
                type: 'Property',
                start: 4053,
                end: 4077,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 4053,
                  end: 4075,
                  name: 'ReactCurrentDispatcher'
                },
                value: {
                  type: 'Identifier',
                  start: 4076,
                  end: 4077,
                  name: 'U'
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 4078,
                end: 4103,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 4078,
                  end: 4101,
                  name: 'ReactCurrentBatchConfig'
                },
                value: {
                  type: 'Identifier',
                  start: 4102,
                  end: 4103,
                  name: 'V'
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 4104,
                end: 4123,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 4104,
                  end: 4121,
                  name: 'ReactCurrentOwner'
                },
                value: {
                  type: 'Identifier',
                  start: 4122,
                  end: 4123,
                  name: 'K'
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 4125,
      end: 4211,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 4134, end: 4135, name: 'X' },
      params: [],
      body: {
        type: 'BlockStatement',
        start: 4137,
        end: 4211,
        body: [
          {
            type: 'ThrowStatement',
            start: 4138,
            end: 4210,
            argument: {
              type: 'CallExpression',
              start: 4144,
              end: 4209,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 4144,
                end: 4149,
                name: 'Error'
              },
              arguments: [
                {
                  type: 'Literal',
                  start: 4150,
                  end: 4208,
                  value: 'act(...) is not supported in production builds of React.',
                  raw: '"act(...) is not supported in production builds of React."'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 4212,
      end: 4570,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4216,
          end: 4569,
          id: {
            type: 'Identifier',
            start: 4216,
            end: 4224,
            name: 'Children'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4227,
            end: 4569,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4227,
              end: 4256,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4227,
                end: 4247,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4248,
                end: 4256,
                name: 'Children'
              }
            },
            right: {
              type: 'ObjectExpression',
              start: 4257,
              end: 4569,
              properties: [
                {
                  type: 'Property',
                  start: 4258,
                  end: 4263,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 4258,
                    end: 4261,
                    name: 'map'
                  },
                  value: {
                    type: 'Identifier',
                    start: 4262,
                    end: 4263,
                    name: 'S'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 4264,
                  end: 4331,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 4264,
                    end: 4271,
                    name: 'forEach'
                  },
                  value: {
                    type: 'FunctionExpression',
                    start: 4272,
                    end: 4331,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 4281,
                        end: 4282,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 4283,
                        end: 4284,
                        name: 'b'
                      },
                      {
                        type: 'Identifier',
                        start: 4285,
                        end: 4286,
                        name: 'e'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 4287,
                      end: 4331,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 4288,
                          end: 4330,
                          expression: {
                            type: 'CallExpression',
                            start: 4288,
                            end: 4330,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 4288,
                              end: 4289,
                              name: 'S'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 4290,
                                end: 4291,
                                name: 'a'
                              },
                              {
                                type: 'FunctionExpression',
                                start: 4292,
                                end: 4327,
                                async: false,
                                generator: false,
                                id: null,
                                params: [],
                                body: {
                                  type: 'BlockStatement',
                                  start: 4302,
                                  end: 4327,
                                  body: [
                                    {
                                      type: 'ExpressionStatement',
                                      start: 4303,
                                      end: 4326,
                                      expression: {
                                        type: 'CallExpression',
                                        start: 4303,
                                        end: 4326,
                                        optional: false,
                                        callee: {
                                          type: 'MemberExpression',
                                          start: 4303,
                                          end: 4310,
                                          computed: false,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 4303,
                                            end: 4304,
                                            name: 'b'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 4305,
                                            end: 4310,
                                            name: 'apply'
                                          }
                                        },
                                        arguments: [
                                          {
                                            type: 'ThisExpression',
                                            start: 4311,
                                            end: 4315
                                          },
                                          {
                                            type: 'Identifier',
                                            start: 4316,
                                            end: 4325,
                                            name: 'arguments'
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                expression: false
                              },
                              {
                                type: 'Identifier',
                                start: 4328,
                                end: 4329,
                                name: 'e'
                              }
                            ]
                          }
                        }
                      ]
                    },
                    expression: false
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 4332,
                  end: 4388,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 4332,
                    end: 4337,
                    name: 'count'
                  },
                  value: {
                    type: 'FunctionExpression',
                    start: 4338,
                    end: 4388,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 4347,
                        end: 4348,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 4349,
                      end: 4388,
                      body: [
                        {
                          type: 'VariableDeclaration',
                          start: 4350,
                          end: 4358,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 4354,
                              end: 4357,
                              id: {
                                type: 'Identifier',
                                start: 4354,
                                end: 4355,
                                name: 'b'
                              },
                              init: {
                                type: 'Literal',
                                start: 4356,
                                end: 4357,
                                raw: '0',
                                value: 0
                              }
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 4358,
                          end: 4379,
                          expression: {
                            type: 'CallExpression',
                            start: 4358,
                            end: 4378,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 4358,
                              end: 4359,
                              name: 'S'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 4360,
                                end: 4361,
                                name: 'a'
                              },
                              {
                                type: 'FunctionExpression',
                                start: 4362,
                                end: 4377,
                                async: false,
                                generator: false,
                                id: null,
                                params: [],
                                body: {
                                  type: 'BlockStatement',
                                  start: 4372,
                                  end: 4377,
                                  body: [
                                    {
                                      type: 'ExpressionStatement',
                                      start: 4373,
                                      end: 4376,
                                      expression: {
                                        type: 'UpdateExpression',
                                        start: 4373,
                                        end: 4376,
                                        prefix: false,
                                        operator: '++',
                                        argument: {
                                          type: 'Identifier',
                                          start: 4373,
                                          end: 4374,
                                          name: 'b'
                                        }
                                      }
                                    }
                                  ]
                                },
                                expression: false
                              }
                            ]
                          }
                        },
                        {
                          type: 'ReturnStatement',
                          start: 4379,
                          end: 4387,
                          argument: {
                            type: 'Identifier',
                            start: 4386,
                            end: 4387,
                            name: 'b'
                          }
                        }
                      ]
                    },
                    expression: false
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 4389,
                  end: 4447,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 4389,
                    end: 4396,
                    name: 'toArray'
                  },
                  value: {
                    type: 'FunctionExpression',
                    start: 4397,
                    end: 4447,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 4406,
                        end: 4407,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 4408,
                      end: 4447,
                      body: [
                        {
                          type: 'ReturnStatement',
                          start: 4409,
                          end: 4446,
                          argument: {
                            type: 'LogicalExpression',
                            start: 4416,
                            end: 4446,
                            operator: '||',
                            left: {
                              type: 'CallExpression',
                              start: 4416,
                              end: 4442,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 4416,
                                end: 4417,
                                name: 'S'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 4418,
                                  end: 4419,
                                  name: 'a'
                                },
                                {
                                  type: 'FunctionExpression',
                                  start: 4420,
                                  end: 4441,
                                  async: false,
                                  generator: false,
                                  id: null,
                                  params: [
                                    {
                                      type: 'Identifier',
                                      start: 4429,
                                      end: 4430,
                                      name: 'a'
                                    }
                                  ],
                                  body: {
                                    type: 'BlockStatement',
                                    start: 4431,
                                    end: 4441,
                                    body: [
                                      {
                                        type: 'ReturnStatement',
                                        start: 4432,
                                        end: 4440,
                                        argument: {
                                          type: 'Identifier',
                                          start: 4439,
                                          end: 4440,
                                          name: 'a'
                                        }
                                      }
                                    ]
                                  },
                                  expression: false
                                }
                              ]
                            },
                            right: {
                              type: 'ArrayExpression',
                              start: 4444,
                              end: 4446,
                              elements: []
                            }
                          }
                        }
                      ]
                    },
                    expression: false
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 4448,
                  end: 4568,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 4448,
                    end: 4452,
                    name: 'only'
                  },
                  value: {
                    type: 'FunctionExpression',
                    start: 4453,
                    end: 4568,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 4462,
                        end: 4463,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 4464,
                      end: 4568,
                      body: [
                        {
                          type: 'IfStatement',
                          start: 4465,
                          end: 4559,
                          test: {
                            type: 'UnaryExpression',
                            start: 4468,
                            end: 4473,
                            operator: '!',
                            argument: {
                              type: 'CallExpression',
                              start: 4469,
                              end: 4473,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 4469,
                                end: 4470,
                                name: 'O'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 4471,
                                  end: 4472,
                                  name: 'a'
                                }
                              ]
                            },
                            prefix: true
                          },
                          consequent: {
                            type: 'ThrowStatement',
                            start: 4474,
                            end: 4559,
                            argument: {
                              type: 'CallExpression',
                              start: 4480,
                              end: 4558,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 4480,
                                end: 4485,
                                name: 'Error'
                              },
                              arguments: [
                                {
                                  type: 'Literal',
                                  start: 4486,
                                  end: 4557,
                                  value: 'React.Children.only expected to receive a single React element child.',
                                  raw: '"React.Children.only expected to receive a single React element child."'
                                }
                              ]
                            }
                          },
                          alternate: null
                        },
                        {
                          type: 'ReturnStatement',
                          start: 4559,
                          end: 4567,
                          argument: {
                            type: 'Identifier',
                            start: 4566,
                            end: 4567,
                            name: 'a'
                          }
                        }
                      ]
                    },
                    expression: false
                  },
                  kind: 'init'
                }
              ]
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4570,
      end: 4619,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4574,
          end: 4618,
          id: {
            type: 'Identifier',
            start: 4574,
            end: 4583,
            name: 'Component'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4586,
            end: 4618,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4586,
              end: 4616,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4586,
                end: 4606,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4607,
                end: 4616,
                name: 'Component'
              }
            },
            right: { type: 'Identifier', start: 4617, end: 4618, name: 'E' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4619,
      end: 4666,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4623,
          end: 4665,
          id: {
            type: 'Identifier',
            start: 4623,
            end: 4631,
            name: 'Fragment'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4634,
            end: 4665,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4634,
              end: 4663,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4634,
                end: 4654,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4655,
                end: 4663,
                name: 'Fragment'
              }
            },
            right: { type: 'Identifier', start: 4664, end: 4665, name: 'p' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4666,
      end: 4713,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4670,
          end: 4712,
          id: {
            type: 'Identifier',
            start: 4670,
            end: 4678,
            name: 'Profiler'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4681,
            end: 4712,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4681,
              end: 4710,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4681,
                end: 4701,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4702,
                end: 4710,
                name: 'Profiler'
              }
            },
            right: { type: 'Identifier', start: 4711, end: 4712, name: 'r' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4713,
      end: 4770,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4717,
          end: 4769,
          id: {
            type: 'Identifier',
            start: 4717,
            end: 4730,
            name: 'PureComponent'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4733,
            end: 4769,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4733,
              end: 4767,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4733,
                end: 4753,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4754,
                end: 4767,
                name: 'PureComponent'
              }
            },
            right: { type: 'Identifier', start: 4768, end: 4769, name: 'G' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4770,
      end: 4821,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4774,
          end: 4820,
          id: {
            type: 'Identifier',
            start: 4774,
            end: 4784,
            name: 'StrictMode'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4787,
            end: 4820,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4787,
              end: 4818,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4787,
                end: 4807,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4808,
                end: 4818,
                name: 'StrictMode'
              }
            },
            right: { type: 'Identifier', start: 4819, end: 4820, name: 'q' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4821,
      end: 4868,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4825,
          end: 4867,
          id: {
            type: 'Identifier',
            start: 4825,
            end: 4833,
            name: 'Suspense'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4836,
            end: 4867,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4836,
              end: 4865,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4836,
                end: 4856,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4857,
                end: 4865,
                name: 'Suspense'
              }
            },
            right: { type: 'Identifier', start: 4866, end: 4867, name: 'w' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 4869,
      end: 5000,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4873,
          end: 4999,
          id: {
            type: 'Identifier',
            start: 4873,
            end: 4923,
            name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
          },
          init: {
            type: 'AssignmentExpression',
            start: 4926,
            end: 4999,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 4926,
              end: 4997,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 4926,
                end: 4946,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 4947,
                end: 4997,
                name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
              }
            },
            right: { type: 'Identifier', start: 4998, end: 4999, name: 'W' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 5000,
      end: 5037,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 5004,
          end: 5036,
          id: { type: 'Identifier', start: 5004, end: 5007, name: 'act' },
          init: {
            type: 'AssignmentExpression',
            start: 5010,
            end: 5036,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 5010,
              end: 5034,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 5010,
                end: 5030,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 5031,
                end: 5034,
                name: 'act'
              }
            },
            right: { type: 'Identifier', start: 5035, end: 5036, name: 'X' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 5038,
      end: 5689,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 5042,
          end: 5688,
          id: {
            type: 'Identifier',
            start: 5042,
            end: 5054,
            name: 'cloneElement'
          },
          init: {
            type: 'AssignmentExpression',
            start: 5057,
            end: 5688,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 5057,
              end: 5090,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 5057,
                end: 5077,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 5078,
                end: 5090,
                name: 'cloneElement'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 5091,
              end: 5688,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 5100,
                  end: 5101,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 5102,
                  end: 5103,
                  name: 'b'
                },
                {
                  type: 'Identifier',
                  start: 5104,
                  end: 5105,
                  name: 'e'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 5106,
                end: 5688,
                body: [
                  {
                    type: 'IfStatement',
                    start: 5107,
                    end: 5231,
                    test: {
                      type: 'LogicalExpression',
                      start: 5110,
                      end: 5130,
                      operator: '||',
                      left: {
                        type: 'BinaryExpression',
                        start: 5110,
                        end: 5118,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 5110,
                          end: 5114,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'Identifier',
                          start: 5117,
                          end: 5118,
                          name: 'a'
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 5120,
                        end: 5130,
                        operator: '===',
                        left: {
                          type: 'UnaryExpression',
                          start: 5120,
                          end: 5126,
                          operator: 'void',
                          argument: {
                            type: 'Literal',
                            start: 5125,
                            end: 5126,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        },
                        right: {
                          type: 'Identifier',
                          start: 5129,
                          end: 5130,
                          name: 'a'
                        }
                      }
                    },
                    consequent: {
                      type: 'ThrowStatement',
                      start: 5131,
                      end: 5231,
                      argument: {
                        type: 'CallExpression',
                        start: 5137,
                        end: 5230,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 5137,
                          end: 5142,
                          name: 'Error'
                        },
                        arguments: [
                          {
                            type: 'BinaryExpression',
                            start: 5143,
                            end: 5229,
                            operator: '+',
                            left: {
                              type: 'BinaryExpression',
                              start: 5143,
                              end: 5225,
                              operator: '+',
                              left: {
                                type: 'Literal',
                                start: 5143,
                                end: 5223,
                                value: 'React.cloneElement(...): The argument must be a React element, but you passed ',
                                raw: '"React.cloneElement(...): The argument must be a React element, but you passed "'
                              },
                              right: {
                                type: 'Identifier',
                                start: 5224,
                                end: 5225,
                                name: 'a'
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 5226,
                              end: 5229,
                              value: '.',
                              raw: '"."'
                            }
                          }
                        ]
                      }
                    },
                    alternate: null
                  },
                  {
                    type: 'VariableDeclaration',
                    start: 5231,
                    end: 5278,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 5235,
                        end: 5250,
                        id: {
                          type: 'Identifier',
                          start: 5235,
                          end: 5236,
                          name: 'd'
                        },
                        init: {
                          type: 'CallExpression',
                          start: 5237,
                          end: 5250,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 5237,
                            end: 5238,
                            name: 'C'
                          },
                          arguments: [
                            {
                              type: 'ObjectExpression',
                              start: 5239,
                              end: 5241,
                              properties: []
                            },
                            {
                              type: 'MemberExpression',
                              start: 5242,
                              end: 5249,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 5242,
                                end: 5243,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 5244,
                                end: 5249,
                                name: 'props'
                              }
                            }
                          ]
                        }
                      },
                      {
                        type: 'VariableDeclarator',
                        start: 5251,
                        end: 5258,
                        id: {
                          type: 'Identifier',
                          start: 5251,
                          end: 5252,
                          name: 'c'
                        },
                        init: {
                          type: 'MemberExpression',
                          start: 5253,
                          end: 5258,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5253,
                            end: 5254,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5255,
                            end: 5258,
                            name: 'key'
                          }
                        }
                      },
                      {
                        type: 'VariableDeclarator',
                        start: 5259,
                        end: 5266,
                        id: {
                          type: 'Identifier',
                          start: 5259,
                          end: 5260,
                          name: 'k'
                        },
                        init: {
                          type: 'MemberExpression',
                          start: 5261,
                          end: 5266,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5261,
                            end: 5262,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5263,
                            end: 5266,
                            name: 'ref'
                          }
                        }
                      },
                      {
                        type: 'VariableDeclarator',
                        start: 5267,
                        end: 5277,
                        id: {
                          type: 'Identifier',
                          start: 5267,
                          end: 5268,
                          name: 'h'
                        },
                        init: {
                          type: 'MemberExpression',
                          start: 5269,
                          end: 5277,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5269,
                            end: 5270,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5271,
                            end: 5277,
                            name: '_owner'
                          }
                        }
                      }
                    ]
                  },
                  {
                    type: 'IfStatement',
                    start: 5278,
                    end: 5503,
                    test: {
                      type: 'BinaryExpression',
                      start: 5281,
                      end: 5288,
                      operator: '!=',
                      left: {
                        type: 'Literal',
                        start: 5281,
                        end: 5285,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'Identifier',
                        start: 5287,
                        end: 5288,
                        name: 'b'
                      }
                    },
                    consequent: {
                      type: 'BlockStatement',
                      start: 5289,
                      end: 5503,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 5290,
                          end: 5328,
                          expression: {
                            type: 'LogicalExpression',
                            start: 5290,
                            end: 5327,
                            operator: '&&',
                            left: {
                              type: 'BinaryExpression',
                              start: 5290,
                              end: 5304,
                              operator: '!==',
                              left: {
                                type: 'UnaryExpression',
                                start: 5290,
                                end: 5296,
                                operator: 'void',
                                argument: {
                                  type: 'Literal',
                                  start: 5295,
                                  end: 5296,
                                  raw: '0',
                                  value: 0
                                },
                                prefix: true
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 5299,
                                end: 5304,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 5299,
                                  end: 5300,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 5301,
                                  end: 5304,
                                  name: 'ref'
                                }
                              }
                            },
                            right: {
                              type: 'SequenceExpression',
                              start: 5307,
                              end: 5326,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 5307,
                                  end: 5314,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 5307,
                                    end: 5308,
                                    name: 'k'
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 5309,
                                    end: 5314,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5309,
                                      end: 5310,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5311,
                                      end: 5314,
                                      name: 'ref'
                                    }
                                  }
                                },
                                {
                                  type: 'AssignmentExpression',
                                  start: 5315,
                                  end: 5326,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 5315,
                                    end: 5316,
                                    name: 'h'
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 5317,
                                    end: 5326,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5317,
                                      end: 5318,
                                      name: 'K'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5319,
                                      end: 5326,
                                      name: 'current'
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 5328,
                          end: 5357,
                          expression: {
                            type: 'LogicalExpression',
                            start: 5328,
                            end: 5356,
                            operator: '&&',
                            left: {
                              type: 'BinaryExpression',
                              start: 5328,
                              end: 5342,
                              operator: '!==',
                              left: {
                                type: 'UnaryExpression',
                                start: 5328,
                                end: 5334,
                                operator: 'void',
                                argument: {
                                  type: 'Literal',
                                  start: 5333,
                                  end: 5334,
                                  raw: '0',
                                  value: 0
                                },
                                prefix: true
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 5337,
                                end: 5342,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 5337,
                                  end: 5338,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 5339,
                                  end: 5342,
                                  name: 'key'
                                }
                              }
                            },
                            right: {
                              type: 'AssignmentExpression',
                              start: 5345,
                              end: 5355,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 5345,
                                end: 5346,
                                name: 'c'
                              },
                              right: {
                                type: 'BinaryExpression',
                                start: 5347,
                                end: 5355,
                                operator: '+',
                                left: {
                                  type: 'Literal',
                                  start: 5347,
                                  end: 5349,
                                  value: '',
                                  raw: '""'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 5350,
                                  end: 5355,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 5350,
                                    end: 5351,
                                    name: 'b'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 5352,
                                    end: 5355,
                                    name: 'key'
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          type: 'IfStatement',
                          start: 5357,
                          end: 5414,
                          test: {
                            type: 'LogicalExpression',
                            start: 5360,
                            end: 5387,
                            operator: '&&',
                            left: {
                              type: 'MemberExpression',
                              start: 5360,
                              end: 5366,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 5360,
                                end: 5361,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 5362,
                                end: 5366,
                                name: 'type'
                              }
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 5368,
                              end: 5387,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'MemberExpression',
                                start: 5368,
                                end: 5374,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 5368,
                                  end: 5369,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 5370,
                                  end: 5374,
                                  name: 'type'
                                }
                              },
                              property: {
                                type: 'Identifier',
                                start: 5375,
                                end: 5387,
                                name: 'defaultProps'
                              }
                            }
                          },
                          consequent: {
                            type: 'VariableDeclaration',
                            start: 5388,
                            end: 5414,
                            kind: 'var',
                            declarations: [
                              {
                                type: 'VariableDeclarator',
                                start: 5392,
                                end: 5413,
                                id: {
                                  type: 'Identifier',
                                  start: 5392,
                                  end: 5393,
                                  name: 'g'
                                },
                                init: {
                                  type: 'MemberExpression',
                                  start: 5394,
                                  end: 5413,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'MemberExpression',
                                    start: 5394,
                                    end: 5400,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5394,
                                      end: 5395,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5396,
                                      end: 5400,
                                      name: 'type'
                                    }
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 5401,
                                    end: 5413,
                                    name: 'defaultProps'
                                  }
                                }
                              }
                            ]
                          },
                          alternate: null
                        },
                        {
                          type: 'ForInStatement',
                          start: 5414,
                          end: 5502,
                          left: {
                            type: 'Identifier',
                            start: 5418,
                            end: 5419,
                            name: 'f'
                          },
                          right: {
                            type: 'Identifier',
                            start: 5423,
                            end: 5424,
                            name: 'b'
                          },
                          body: {
                            type: 'ExpressionStatement',
                            start: 5425,
                            end: 5502,
                            expression: {
                              type: 'LogicalExpression',
                              start: 5425,
                              end: 5502,
                              operator: '&&',
                              left: {
                                type: 'LogicalExpression',
                                start: 5425,
                                end: 5458,
                                operator: '&&',
                                left: {
                                  type: 'CallExpression',
                                  start: 5425,
                                  end: 5436,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 5425,
                                    end: 5431,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5425,
                                      end: 5426,
                                      name: 'J'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5427,
                                      end: 5431,
                                      name: 'call'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 5432,
                                      end: 5433,
                                      name: 'b'
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 5434,
                                      end: 5435,
                                      name: 'f'
                                    }
                                  ]
                                },
                                right: {
                                  type: 'UnaryExpression',
                                  start: 5438,
                                  end: 5458,
                                  operator: '!',
                                  argument: {
                                    type: 'CallExpression',
                                    start: 5439,
                                    end: 5458,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 5439,
                                      end: 5455,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 5439,
                                        end: 5440,
                                        name: 'L'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 5441,
                                        end: 5455,
                                        name: 'hasOwnProperty'
                                      }
                                    },
                                    arguments: [
                                      {
                                        type: 'Identifier',
                                        start: 5456,
                                        end: 5457,
                                        name: 'f'
                                      }
                                    ]
                                  },
                                  prefix: true
                                }
                              },
                              right: {
                                type: 'AssignmentExpression',
                                start: 5461,
                                end: 5501,
                                operator: '=',
                                left: {
                                  type: 'MemberExpression',
                                  start: 5461,
                                  end: 5465,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 5461,
                                    end: 5462,
                                    name: 'd'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 5463,
                                    end: 5464,
                                    name: 'f'
                                  }
                                },
                                right: {
                                  type: 'ConditionalExpression',
                                  start: 5466,
                                  end: 5501,
                                  test: {
                                    type: 'LogicalExpression',
                                    start: 5466,
                                    end: 5491,
                                    operator: '&&',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 5466,
                                      end: 5479,
                                      operator: '===',
                                      left: {
                                        type: 'UnaryExpression',
                                        start: 5466,
                                        end: 5472,
                                        operator: 'void',
                                        argument: {
                                          type: 'Literal',
                                          start: 5471,
                                          end: 5472,
                                          raw: '0',
                                          value: 0
                                        },
                                        prefix: true
                                      },
                                      right: {
                                        type: 'MemberExpression',
                                        start: 5475,
                                        end: 5479,
                                        computed: true,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 5475,
                                          end: 5476,
                                          name: 'b'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 5477,
                                          end: 5478,
                                          name: 'f'
                                        }
                                      }
                                    },
                                    right: {
                                      type: 'BinaryExpression',
                                      start: 5481,
                                      end: 5491,
                                      operator: '!==',
                                      left: {
                                        type: 'UnaryExpression',
                                        start: 5481,
                                        end: 5487,
                                        operator: 'void',
                                        argument: {
                                          type: 'Literal',
                                          start: 5486,
                                          end: 5487,
                                          raw: '0',
                                          value: 0
                                        },
                                        prefix: true
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 5490,
                                        end: 5491,
                                        name: 'g'
                                      }
                                    }
                                  },
                                  consequent: {
                                    type: 'MemberExpression',
                                    start: 5492,
                                    end: 5496,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5492,
                                      end: 5493,
                                      name: 'g'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5494,
                                      end: 5495,
                                      name: 'f'
                                    }
                                  },
                                  alternate: {
                                    type: 'MemberExpression',
                                    start: 5497,
                                    end: 5501,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 5497,
                                      end: 5498,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 5499,
                                      end: 5500,
                                      name: 'f'
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    alternate: null
                  },
                  {
                    type: 'VariableDeclaration',
                    start: 5503,
                    end: 5528,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 5507,
                        end: 5527,
                        id: {
                          type: 'Identifier',
                          start: 5507,
                          end: 5508,
                          name: 'f'
                        },
                        init: {
                          type: 'BinaryExpression',
                          start: 5509,
                          end: 5527,
                          operator: '-',
                          left: {
                            type: 'MemberExpression',
                            start: 5509,
                            end: 5525,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5509,
                              end: 5518,
                              name: 'arguments'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5519,
                              end: 5525,
                              name: 'length'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 5526,
                            end: 5527,
                            raw: '2',
                            value: 2
                          }
                        }
                      }
                    ]
                  },
                  {
                    type: 'IfStatement',
                    start: 5528,
                    end: 5628,
                    test: {
                      type: 'BinaryExpression',
                      start: 5531,
                      end: 5536,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 5531,
                        end: 5532,
                        raw: '1',
                        value: 1
                      },
                      right: {
                        type: 'Identifier',
                        start: 5535,
                        end: 5536,
                        name: 'f'
                      }
                    },
                    consequent: {
                      type: 'ExpressionStatement',
                      start: 5537,
                      end: 5550,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 5537,
                        end: 5549,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 5537,
                          end: 5547,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5537,
                            end: 5538,
                            name: 'd'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5539,
                            end: 5547,
                            name: 'children'
                          }
                        },
                        right: {
                          type: 'Identifier',
                          start: 5548,
                          end: 5549,
                          name: 'e'
                        }
                      }
                    },
                    alternate: {
                      type: 'IfStatement',
                      start: 5555,
                      end: 5628,
                      test: {
                        type: 'BinaryExpression',
                        start: 5558,
                        end: 5561,
                        operator: '<',
                        left: {
                          type: 'Literal',
                          start: 5558,
                          end: 5559,
                          raw: '1',
                          value: 1
                        },
                        right: {
                          type: 'Identifier',
                          start: 5560,
                          end: 5561,
                          name: 'f'
                        }
                      },
                      consequent: {
                        type: 'BlockStatement',
                        start: 5562,
                        end: 5628,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 5563,
                            end: 5574,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 5563,
                              end: 5573,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 5563,
                                end: 5564,
                                name: 'g'
                              },
                              right: {
                                type: 'CallExpression',
                                start: 5565,
                                end: 5573,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 5565,
                                  end: 5570,
                                  name: 'Array'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 5571,
                                    end: 5572,
                                    name: 'f'
                                  }
                                ]
                              }
                            }
                          },
                          {
                            type: 'ForStatement',
                            start: 5575,
                            end: 5615,
                            init: {
                              type: 'VariableDeclaration',
                              start: 5579,
                              end: 5586,
                              kind: 'var',
                              declarations: [
                                {
                                  type: 'VariableDeclarator',
                                  start: 5583,
                                  end: 5586,
                                  id: {
                                    type: 'Identifier',
                                    start: 5583,
                                    end: 5584,
                                    name: 'm'
                                  },
                                  init: {
                                    type: 'Literal',
                                    start: 5585,
                                    end: 5586,
                                    raw: '0',
                                    value: 0
                                  }
                                }
                              ]
                            },
                            test: {
                              type: 'BinaryExpression',
                              start: 5587,
                              end: 5590,
                              operator: '<',
                              left: {
                                type: 'Identifier',
                                start: 5587,
                                end: 5588,
                                name: 'm'
                              },
                              right: {
                                type: 'Identifier',
                                start: 5589,
                                end: 5590,
                                name: 'f'
                              }
                            },
                            update: {
                              type: 'UpdateExpression',
                              start: 5591,
                              end: 5594,
                              prefix: false,
                              operator: '++',
                              argument: {
                                type: 'Identifier',
                                start: 5591,
                                end: 5592,
                                name: 'm'
                              }
                            },
                            body: {
                              type: 'ExpressionStatement',
                              start: 5595,
                              end: 5615,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 5595,
                                end: 5614,
                                operator: '=',
                                left: {
                                  type: 'MemberExpression',
                                  start: 5595,
                                  end: 5599,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 5595,
                                    end: 5596,
                                    name: 'g'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 5597,
                                    end: 5598,
                                    name: 'm'
                                  }
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 5600,
                                  end: 5614,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 5600,
                                    end: 5609,
                                    name: 'arguments'
                                  },
                                  property: {
                                    type: 'BinaryExpression',
                                    start: 5610,
                                    end: 5613,
                                    operator: '+',
                                    left: {
                                      type: 'Identifier',
                                      start: 5610,
                                      end: 5611,
                                      name: 'm'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 5612,
                                      end: 5613,
                                      raw: '2',
                                      value: 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            type: 'ExpressionStatement',
                            start: 5615,
                            end: 5627,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 5615,
                              end: 5627,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 5615,
                                end: 5625,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 5615,
                                  end: 5616,
                                  name: 'd'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 5617,
                                  end: 5625,
                                  name: 'children'
                                }
                              },
                              right: {
                                type: 'Identifier',
                                start: 5626,
                                end: 5627,
                                name: 'g'
                              }
                            }
                          }
                        ]
                      },
                      alternate: null
                    }
                  },
                  {
                    type: 'ReturnStatement',
                    start: 5628,
                    end: 5687,
                    argument: {
                      type: 'ObjectExpression',
                      start: 5634,
                      end: 5687,
                      properties: [
                        {
                          type: 'Property',
                          start: 5635,
                          end: 5645,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5635,
                            end: 5643,
                            name: '$$typeof'
                          },
                          value: {
                            type: 'Identifier',
                            start: 5644,
                            end: 5645,
                            name: 'l'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 5646,
                          end: 5657,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5646,
                            end: 5650,
                            name: 'type'
                          },
                          value: {
                            type: 'MemberExpression',
                            start: 5651,
                            end: 5657,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5651,
                              end: 5652,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5653,
                              end: 5657,
                              name: 'type'
                            }
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 5658,
                          end: 5663,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5658,
                            end: 5661,
                            name: 'key'
                          },
                          value: {
                            type: 'Identifier',
                            start: 5662,
                            end: 5663,
                            name: 'c'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 5664,
                          end: 5669,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5664,
                            end: 5667,
                            name: 'ref'
                          },
                          value: {
                            type: 'Identifier',
                            start: 5668,
                            end: 5669,
                            name: 'k'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 5670,
                          end: 5677,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5670,
                            end: 5675,
                            name: 'props'
                          },
                          value: {
                            type: 'Identifier',
                            start: 5676,
                            end: 5677,
                            name: 'd'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 5678,
                          end: 5686,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 5678,
                            end: 5684,
                            name: '_owner'
                          },
                          value: {
                            type: 'Identifier',
                            start: 5685,
                            end: 5686,
                            name: 'h'
                          },
                          kind: 'init'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 5689,
      end: 5939,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 5693,
          end: 5938,
          id: {
            type: 'Identifier',
            start: 5693,
            end: 5706,
            name: 'createContext'
          },
          init: {
            type: 'AssignmentExpression',
            start: 5709,
            end: 5938,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 5709,
              end: 5743,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 5709,
                end: 5729,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 5730,
                end: 5743,
                name: 'createContext'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 5744,
              end: 5938,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 5753,
                  end: 5754,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 5755,
                end: 5938,
                body: [
                  {
                    type: 'ExpressionStatement',
                    start: 5756,
                    end: 5883,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 5756,
                      end: 5882,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 5756,
                        end: 5757,
                        name: 'a'
                      },
                      right: {
                        type: 'ObjectExpression',
                        start: 5758,
                        end: 5882,
                        properties: [
                          {
                            type: 'Property',
                            start: 5759,
                            end: 5769,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5759,
                              end: 5767,
                              name: '$$typeof'
                            },
                            value: {
                              type: 'Identifier',
                              start: 5768,
                              end: 5769,
                              name: 'u'
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5770,
                            end: 5785,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5770,
                              end: 5783,
                              name: '_currentValue'
                            },
                            value: {
                              type: 'Identifier',
                              start: 5784,
                              end: 5785,
                              name: 'a'
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5786,
                            end: 5802,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5786,
                              end: 5800,
                              name: '_currentValue2'
                            },
                            value: {
                              type: 'Identifier',
                              start: 5801,
                              end: 5802,
                              name: 'a'
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5803,
                            end: 5817,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5803,
                              end: 5815,
                              name: '_threadCount'
                            },
                            value: {
                              type: 'Literal',
                              start: 5816,
                              end: 5817,
                              raw: '0',
                              value: 0
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5818,
                            end: 5831,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5818,
                              end: 5826,
                              name: 'Provider'
                            },
                            value: {
                              type: 'Literal',
                              start: 5827,
                              end: 5831,
                              raw: 'null',
                              value: null
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5832,
                            end: 5845,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5832,
                              end: 5840,
                              name: 'Consumer'
                            },
                            value: {
                              type: 'Literal',
                              start: 5841,
                              end: 5845,
                              raw: 'null',
                              value: null
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5846,
                            end: 5864,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5846,
                              end: 5859,
                              name: '_defaultValue'
                            },
                            value: {
                              type: 'Literal',
                              start: 5860,
                              end: 5864,
                              raw: 'null',
                              value: null
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5865,
                            end: 5881,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5865,
                              end: 5876,
                              name: '_globalName'
                            },
                            value: {
                              type: 'Literal',
                              start: 5877,
                              end: 5881,
                              raw: 'null',
                              value: null
                            },
                            kind: 'init'
                          }
                        ]
                      }
                    }
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 5883,
                    end: 5918,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 5883,
                      end: 5917,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 5883,
                        end: 5893,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 5883,
                          end: 5884,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 5885,
                          end: 5893,
                          name: 'Provider'
                        }
                      },
                      right: {
                        type: 'ObjectExpression',
                        start: 5894,
                        end: 5917,
                        properties: [
                          {
                            type: 'Property',
                            start: 5895,
                            end: 5905,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5895,
                              end: 5903,
                              name: '$$typeof'
                            },
                            value: {
                              type: 'Identifier',
                              start: 5904,
                              end: 5905,
                              name: 't'
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 5906,
                            end: 5916,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 5906,
                              end: 5914,
                              name: '_context'
                            },
                            value: {
                              type: 'Identifier',
                              start: 5915,
                              end: 5916,
                              name: 'a'
                            },
                            kind: 'init'
                          }
                        ]
                      }
                    }
                  },
                  {
                    type: 'ReturnStatement',
                    start: 5918,
                    end: 5937,
                    argument: {
                      type: 'AssignmentExpression',
                      start: 5925,
                      end: 5937,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 5925,
                        end: 5935,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 5925,
                          end: 5926,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 5927,
                          end: 5935,
                          name: 'Consumer'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 5936,
                        end: 5937,
                        name: 'a'
                      }
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 5939,
      end: 5996,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 5943,
          end: 5995,
          id: {
            type: 'Identifier',
            start: 5943,
            end: 5956,
            name: 'createElement'
          },
          init: {
            type: 'AssignmentExpression',
            start: 5959,
            end: 5995,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 5959,
              end: 5993,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 5959,
                end: 5979,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 5980,
                end: 5993,
                name: 'createElement'
              }
            },
            right: { type: 'Identifier', start: 5994, end: 5995, name: 'M' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 5996,
      end: 6103,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6000,
          end: 6102,
          id: {
            type: 'Identifier',
            start: 6000,
            end: 6013,
            name: 'createFactory'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6016,
            end: 6102,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6016,
              end: 6050,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6016,
                end: 6036,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6037,
                end: 6050,
                name: 'createFactory'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6051,
              end: 6102,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6060,
                  end: 6061,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6062,
                end: 6102,
                body: [
                  {
                    type: 'VariableDeclaration',
                    start: 6063,
                    end: 6084,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 6067,
                        end: 6083,
                        id: {
                          type: 'Identifier',
                          start: 6067,
                          end: 6068,
                          name: 'b'
                        },
                        init: {
                          type: 'CallExpression',
                          start: 6069,
                          end: 6083,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 6069,
                            end: 6075,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 6069,
                              end: 6070,
                              name: 'M'
                            },
                            property: {
                              type: 'Identifier',
                              start: 6071,
                              end: 6075,
                              name: 'bind'
                            }
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 6076,
                              end: 6080,
                              raw: 'null',
                              value: null
                            },
                            {
                              type: 'Identifier',
                              start: 6081,
                              end: 6082,
                              name: 'a'
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 6084,
                    end: 6093,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 6084,
                      end: 6092,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 6084,
                        end: 6090,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 6084,
                          end: 6085,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 6086,
                          end: 6090,
                          name: 'type'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 6091,
                        end: 6092,
                        name: 'a'
                      }
                    }
                  },
                  {
                    type: 'ReturnStatement',
                    start: 6093,
                    end: 6101,
                    argument: {
                      type: 'Identifier',
                      start: 6100,
                      end: 6101,
                      name: 'b'
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6103,
      end: 6183,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6107,
          end: 6182,
          id: {
            type: 'Identifier',
            start: 6107,
            end: 6116,
            name: 'createRef'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6119,
            end: 6182,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6119,
              end: 6149,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6119,
                end: 6139,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6140,
                end: 6149,
                name: 'createRef'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6150,
              end: 6182,
              async: false,
              generator: false,
              id: null,
              params: [],
              body: {
                type: 'BlockStatement',
                start: 6160,
                end: 6182,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6161,
                    end: 6181,
                    argument: {
                      type: 'ObjectExpression',
                      start: 6167,
                      end: 6181,
                      properties: [
                        {
                          type: 'Property',
                          start: 6168,
                          end: 6180,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6168,
                            end: 6175,
                            name: 'current'
                          },
                          value: {
                            type: 'Literal',
                            start: 6176,
                            end: 6180,
                            raw: 'null',
                            value: null
                          },
                          kind: 'init'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6184,
      end: 6274,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6188,
          end: 6273,
          id: {
            type: 'Identifier',
            start: 6188,
            end: 6198,
            name: 'forwardRef'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6201,
            end: 6273,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6201,
              end: 6232,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6201,
                end: 6221,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6222,
                end: 6232,
                name: 'forwardRef'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6233,
              end: 6273,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6242,
                  end: 6243,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6244,
                end: 6273,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6245,
                    end: 6272,
                    argument: {
                      type: 'ObjectExpression',
                      start: 6251,
                      end: 6272,
                      properties: [
                        {
                          type: 'Property',
                          start: 6252,
                          end: 6262,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6252,
                            end: 6260,
                            name: '$$typeof'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6261,
                            end: 6262,
                            name: 'v'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 6263,
                          end: 6271,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6263,
                            end: 6269,
                            name: 'render'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6270,
                            end: 6271,
                            name: 'a'
                          },
                          kind: 'init'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6274,
      end: 6333,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6278,
          end: 6332,
          id: {
            type: 'Identifier',
            start: 6278,
            end: 6292,
            name: 'isValidElement'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6295,
            end: 6332,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6295,
              end: 6330,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6295,
                end: 6315,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6316,
                end: 6330,
                name: 'isValidElement'
              }
            },
            right: { type: 'Identifier', start: 6331, end: 6332, name: 'O' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6333,
      end: 6442,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6337,
          end: 6441,
          id: { type: 'Identifier', start: 6337, end: 6341, name: 'lazy' },
          init: {
            type: 'AssignmentExpression',
            start: 6344,
            end: 6441,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6344,
              end: 6369,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6344,
                end: 6364,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6365,
                end: 6369,
                name: 'lazy'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6370,
              end: 6441,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6379,
                  end: 6380,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6381,
                end: 6441,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6382,
                    end: 6440,
                    argument: {
                      type: 'ObjectExpression',
                      start: 6388,
                      end: 6440,
                      properties: [
                        {
                          type: 'Property',
                          start: 6389,
                          end: 6399,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6389,
                            end: 6397,
                            name: '$$typeof'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6398,
                            end: 6399,
                            name: 'y'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 6400,
                          end: 6431,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6400,
                            end: 6408,
                            name: '_payload'
                          },
                          value: {
                            type: 'ObjectExpression',
                            start: 6409,
                            end: 6431,
                            properties: [
                              {
                                type: 'Property',
                                start: 6410,
                                end: 6420,
                                method: false,
                                shorthand: false,
                                computed: false,
                                key: {
                                  type: 'Identifier',
                                  start: 6410,
                                  end: 6417,
                                  name: '_status'
                                },
                                value: {
                                  type: 'UnaryExpression',
                                  start: 6418,
                                  end: 6420,
                                  operator: '-',
                                  argument: {
                                    type: 'Literal',
                                    start: 6419,
                                    end: 6420,
                                    raw: '1',
                                    value: 1
                                  },
                                  prefix: true
                                },
                                kind: 'init'
                              },
                              {
                                type: 'Property',
                                start: 6421,
                                end: 6430,
                                method: false,
                                shorthand: false,
                                computed: false,
                                key: {
                                  type: 'Identifier',
                                  start: 6421,
                                  end: 6428,
                                  name: '_result'
                                },
                                value: {
                                  type: 'Identifier',
                                  start: 6429,
                                  end: 6430,
                                  name: 'a'
                                },
                                kind: 'init'
                              }
                            ]
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 6432,
                          end: 6439,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6432,
                            end: 6437,
                            name: '_init'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6438,
                            end: 6439,
                            name: 'T'
                          },
                          kind: 'init'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6442,
      end: 6546,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6446,
          end: 6545,
          id: { type: 'Identifier', start: 6446, end: 6450, name: 'memo' },
          init: {
            type: 'AssignmentExpression',
            start: 6453,
            end: 6545,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6453,
              end: 6478,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6453,
                end: 6473,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6474,
                end: 6478,
                name: 'memo'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6479,
              end: 6545,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6488,
                  end: 6489,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 6490,
                  end: 6491,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6492,
                end: 6545,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6493,
                    end: 6544,
                    argument: {
                      type: 'ObjectExpression',
                      start: 6499,
                      end: 6544,
                      properties: [
                        {
                          type: 'Property',
                          start: 6500,
                          end: 6510,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6500,
                            end: 6508,
                            name: '$$typeof'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6509,
                            end: 6510,
                            name: 'x'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 6511,
                          end: 6517,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6511,
                            end: 6515,
                            name: 'type'
                          },
                          value: {
                            type: 'Identifier',
                            start: 6516,
                            end: 6517,
                            name: 'a'
                          },
                          kind: 'init'
                        },
                        {
                          type: 'Property',
                          start: 6518,
                          end: 6543,
                          method: false,
                          shorthand: false,
                          computed: false,
                          key: {
                            type: 'Identifier',
                            start: 6518,
                            end: 6525,
                            name: 'compare'
                          },
                          value: {
                            type: 'ConditionalExpression',
                            start: 6526,
                            end: 6543,
                            test: {
                              type: 'BinaryExpression',
                              start: 6526,
                              end: 6536,
                              operator: '===',
                              left: {
                                type: 'UnaryExpression',
                                start: 6526,
                                end: 6532,
                                operator: 'void',
                                argument: {
                                  type: 'Literal',
                                  start: 6531,
                                  end: 6532,
                                  raw: '0',
                                  value: 0
                                },
                                prefix: true
                              },
                              right: {
                                type: 'Identifier',
                                start: 6535,
                                end: 6536,
                                name: 'b'
                              }
                            },
                            consequent: {
                              type: 'Literal',
                              start: 6537,
                              end: 6541,
                              raw: 'null',
                              value: null
                            },
                            alternate: {
                              type: 'Identifier',
                              start: 6542,
                              end: 6543,
                              name: 'b'
                            }
                          },
                          kind: 'init'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6546,
      end: 6685,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6550,
          end: 6684,
          id: {
            type: 'Identifier',
            start: 6550,
            end: 6565,
            name: 'startTransition'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6568,
            end: 6684,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6568,
              end: 6604,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6568,
                end: 6588,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6589,
                end: 6604,
                name: 'startTransition'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6605,
              end: 6684,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6614,
                  end: 6615,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6616,
                end: 6684,
                body: [
                  {
                    type: 'VariableDeclaration',
                    start: 6617,
                    end: 6636,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 6621,
                        end: 6635,
                        id: {
                          type: 'Identifier',
                          start: 6621,
                          end: 6622,
                          name: 'b'
                        },
                        init: {
                          type: 'MemberExpression',
                          start: 6623,
                          end: 6635,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 6623,
                            end: 6624,
                            name: 'V'
                          },
                          property: {
                            type: 'Identifier',
                            start: 6625,
                            end: 6635,
                            name: 'transition'
                          }
                        }
                      }
                    ]
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 6636,
                    end: 6652,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 6636,
                      end: 6651,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 6636,
                        end: 6648,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 6636,
                          end: 6637,
                          name: 'V'
                        },
                        property: {
                          type: 'Identifier',
                          start: 6638,
                          end: 6648,
                          name: 'transition'
                        }
                      },
                      right: {
                        type: 'ObjectExpression',
                        start: 6649,
                        end: 6651,
                        properties: []
                      }
                    }
                  },
                  {
                    type: 'TryStatement',
                    start: 6652,
                    end: 6683,
                    block: {
                      type: 'BlockStatement',
                      start: 6655,
                      end: 6660,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 6656,
                          end: 6659,
                          expression: {
                            type: 'CallExpression',
                            start: 6656,
                            end: 6659,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 6656,
                              end: 6657,
                              name: 'a'
                            },
                            arguments: []
                          }
                        }
                      ]
                    },
                    handler: null,
                    finalizer: {
                      type: 'BlockStatement',
                      start: 6667,
                      end: 6683,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 6668,
                          end: 6682,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 6668,
                            end: 6682,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 6668,
                              end: 6680,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 6668,
                                end: 6669,
                                name: 'V'
                              },
                              property: {
                                type: 'Identifier',
                                start: 6670,
                                end: 6680,
                                name: 'transition'
                              }
                            },
                            right: {
                              type: 'Identifier',
                              start: 6681,
                              end: 6682,
                              name: 'b'
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6685,
      end: 6740,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6689,
          end: 6739,
          id: {
            type: 'Identifier',
            start: 6689,
            end: 6701,
            name: 'unstable_act'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6704,
            end: 6739,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6704,
              end: 6737,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6704,
                end: 6724,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6725,
                end: 6737,
                name: 'unstable_act'
              }
            },
            right: { type: 'Identifier', start: 6738, end: 6739, name: 'X' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6740,
      end: 6840,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6744,
          end: 6839,
          id: {
            type: 'Identifier',
            start: 6744,
            end: 6755,
            name: 'useCallback'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6758,
            end: 6839,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6758,
              end: 6790,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6758,
                end: 6778,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6779,
                end: 6790,
                name: 'useCallback'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6791,
              end: 6839,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6800,
                  end: 6801,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 6802,
                  end: 6803,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6804,
                end: 6839,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6805,
                    end: 6838,
                    argument: {
                      type: 'CallExpression',
                      start: 6812,
                      end: 6838,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 6812,
                        end: 6833,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 6812,
                          end: 6821,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 6812,
                            end: 6813,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 6814,
                            end: 6821,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 6822,
                          end: 6833,
                          name: 'useCallback'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 6834,
                          end: 6835,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 6836,
                          end: 6837,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6840,
      end: 6933,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6844,
          end: 6932,
          id: {
            type: 'Identifier',
            start: 6844,
            end: 6854,
            name: 'useContext'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6857,
            end: 6932,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6857,
              end: 6888,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6857,
                end: 6877,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6878,
                end: 6888,
                name: 'useContext'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6889,
              end: 6932,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 6898,
                  end: 6899,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 6900,
                end: 6932,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 6901,
                    end: 6931,
                    argument: {
                      type: 'CallExpression',
                      start: 6908,
                      end: 6931,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 6908,
                        end: 6928,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 6908,
                          end: 6917,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 6908,
                            end: 6909,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 6910,
                            end: 6917,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 6918,
                          end: 6928,
                          name: 'useContext'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 6929,
                          end: 6930,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 6934,
      end: 7002,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6938,
          end: 7001,
          id: {
            type: 'Identifier',
            start: 6938,
            end: 6951,
            name: 'useDebugValue'
          },
          init: {
            type: 'AssignmentExpression',
            start: 6954,
            end: 7001,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 6954,
              end: 6988,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6954,
                end: 6974,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 6975,
                end: 6988,
                name: 'useDebugValue'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 6989,
              end: 7001,
              async: false,
              generator: false,
              id: null,
              params: [],
              body: {
                type: 'BlockStatement',
                start: 6999,
                end: 7001,
                body: []
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7002,
      end: 7113,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7006,
          end: 7112,
          id: {
            type: 'Identifier',
            start: 7006,
            end: 7022,
            name: 'useDeferredValue'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7025,
            end: 7112,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7025,
              end: 7062,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7025,
                end: 7045,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7046,
                end: 7062,
                name: 'useDeferredValue'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7063,
              end: 7112,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7072,
                  end: 7073,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7074,
                end: 7112,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7075,
                    end: 7111,
                    argument: {
                      type: 'CallExpression',
                      start: 7082,
                      end: 7111,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7082,
                        end: 7108,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7082,
                          end: 7091,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7082,
                            end: 7083,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7084,
                            end: 7091,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7092,
                          end: 7108,
                          name: 'useDeferredValue'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7109,
                          end: 7110,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7113,
      end: 7207,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7117,
          end: 7206,
          id: {
            type: 'Identifier',
            start: 7117,
            end: 7126,
            name: 'useEffect'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7129,
            end: 7206,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7129,
              end: 7159,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7129,
                end: 7149,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7150,
                end: 7159,
                name: 'useEffect'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7160,
              end: 7206,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7169,
                  end: 7170,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7171,
                  end: 7172,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7173,
                end: 7206,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7174,
                    end: 7205,
                    argument: {
                      type: 'CallExpression',
                      start: 7181,
                      end: 7205,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7181,
                        end: 7200,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7181,
                          end: 7190,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7181,
                            end: 7182,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7183,
                            end: 7190,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7191,
                          end: 7200,
                          name: 'useEffect'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7201,
                          end: 7202,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7203,
                          end: 7204,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7207,
      end: 7283,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7211,
          end: 7282,
          id: { type: 'Identifier', start: 7211, end: 7216, name: 'useId' },
          init: {
            type: 'AssignmentExpression',
            start: 7219,
            end: 7282,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7219,
              end: 7245,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7219,
                end: 7239,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7240,
                end: 7245,
                name: 'useId'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7246,
              end: 7282,
              async: false,
              generator: false,
              id: null,
              params: [],
              body: {
                type: 'BlockStatement',
                start: 7256,
                end: 7282,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7257,
                    end: 7281,
                    argument: {
                      type: 'CallExpression',
                      start: 7264,
                      end: 7281,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7264,
                        end: 7279,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7264,
                          end: 7273,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7264,
                            end: 7265,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7266,
                            end: 7273,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7274,
                          end: 7279,
                          name: 'useId'
                        }
                      },
                      arguments: []
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7283,
      end: 7411,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7287,
          end: 7410,
          id: {
            type: 'Identifier',
            start: 7287,
            end: 7306,
            name: 'useImperativeHandle'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7309,
            end: 7410,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7309,
              end: 7349,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7309,
                end: 7329,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7330,
                end: 7349,
                name: 'useImperativeHandle'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7350,
              end: 7410,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7359,
                  end: 7360,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7361,
                  end: 7362,
                  name: 'b'
                },
                {
                  type: 'Identifier',
                  start: 7363,
                  end: 7364,
                  name: 'e'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7365,
                end: 7410,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7366,
                    end: 7409,
                    argument: {
                      type: 'CallExpression',
                      start: 7373,
                      end: 7409,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7373,
                        end: 7402,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7373,
                          end: 7382,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7373,
                            end: 7374,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7375,
                            end: 7382,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7383,
                          end: 7402,
                          name: 'useImperativeHandle'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7403,
                          end: 7404,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7405,
                          end: 7406,
                          name: 'b'
                        },
                        {
                          type: 'Identifier',
                          start: 7407,
                          end: 7408,
                          name: 'e'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7411,
      end: 7532,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7415,
          end: 7531,
          id: {
            type: 'Identifier',
            start: 7415,
            end: 7433,
            name: 'useInsertionEffect'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7436,
            end: 7531,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7436,
              end: 7475,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7436,
                end: 7456,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7457,
                end: 7475,
                name: 'useInsertionEffect'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7476,
              end: 7531,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7485,
                  end: 7486,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7487,
                  end: 7488,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7489,
                end: 7531,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7490,
                    end: 7530,
                    argument: {
                      type: 'CallExpression',
                      start: 7497,
                      end: 7530,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7497,
                        end: 7525,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7497,
                          end: 7506,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7497,
                            end: 7498,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7499,
                            end: 7506,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7507,
                          end: 7525,
                          name: 'useInsertionEffect'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7526,
                          end: 7527,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7528,
                          end: 7529,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7532,
      end: 7644,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7536,
          end: 7643,
          id: {
            type: 'Identifier',
            start: 7536,
            end: 7551,
            name: 'useLayoutEffect'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7554,
            end: 7643,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7554,
              end: 7590,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7554,
                end: 7574,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7575,
                end: 7590,
                name: 'useLayoutEffect'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7591,
              end: 7643,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7600,
                  end: 7601,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7602,
                  end: 7603,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7604,
                end: 7643,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7605,
                    end: 7642,
                    argument: {
                      type: 'CallExpression',
                      start: 7612,
                      end: 7642,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7612,
                        end: 7637,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7612,
                          end: 7621,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7612,
                            end: 7613,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7614,
                            end: 7621,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7622,
                          end: 7637,
                          name: 'useLayoutEffect'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7638,
                          end: 7639,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7640,
                          end: 7641,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7645,
      end: 7733,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7649,
          end: 7732,
          id: {
            type: 'Identifier',
            start: 7649,
            end: 7656,
            name: 'useMemo'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7659,
            end: 7732,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7659,
              end: 7687,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7659,
                end: 7679,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7680,
                end: 7687,
                name: 'useMemo'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7688,
              end: 7732,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7697,
                  end: 7698,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7699,
                  end: 7700,
                  name: 'b'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7701,
                end: 7732,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7702,
                    end: 7731,
                    argument: {
                      type: 'CallExpression',
                      start: 7709,
                      end: 7731,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7709,
                        end: 7726,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7709,
                          end: 7718,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7709,
                            end: 7710,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7711,
                            end: 7718,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7719,
                          end: 7726,
                          name: 'useMemo'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7727,
                          end: 7728,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7729,
                          end: 7730,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7733,
      end: 7834,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7737,
          end: 7833,
          id: {
            type: 'Identifier',
            start: 7737,
            end: 7747,
            name: 'useReducer'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7750,
            end: 7833,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7750,
              end: 7781,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7750,
                end: 7770,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7771,
                end: 7781,
                name: 'useReducer'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7782,
              end: 7833,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7791,
                  end: 7792,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 7793,
                  end: 7794,
                  name: 'b'
                },
                {
                  type: 'Identifier',
                  start: 7795,
                  end: 7796,
                  name: 'e'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7797,
                end: 7833,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7798,
                    end: 7832,
                    argument: {
                      type: 'CallExpression',
                      start: 7805,
                      end: 7832,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7805,
                        end: 7825,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7805,
                          end: 7814,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7805,
                            end: 7806,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7807,
                            end: 7814,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7815,
                          end: 7825,
                          name: 'useReducer'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7826,
                          end: 7827,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 7828,
                          end: 7829,
                          name: 'b'
                        },
                        {
                          type: 'Identifier',
                          start: 7830,
                          end: 7831,
                          name: 'e'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7834,
      end: 7915,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7838,
          end: 7914,
          id: {
            type: 'Identifier',
            start: 7838,
            end: 7844,
            name: 'useRef'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7847,
            end: 7914,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7847,
              end: 7874,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7847,
                end: 7867,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7868,
                end: 7874,
                name: 'useRef'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7875,
              end: 7914,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7884,
                  end: 7885,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7886,
                end: 7914,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7887,
                    end: 7913,
                    argument: {
                      type: 'CallExpression',
                      start: 7894,
                      end: 7913,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7894,
                        end: 7910,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7894,
                          end: 7903,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7894,
                            end: 7895,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7896,
                            end: 7903,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7904,
                          end: 7910,
                          name: 'useRef'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7911,
                          end: 7912,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 7915,
      end: 8002,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7919,
          end: 8001,
          id: {
            type: 'Identifier',
            start: 7919,
            end: 7927,
            name: 'useState'
          },
          init: {
            type: 'AssignmentExpression',
            start: 7930,
            end: 8001,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 7930,
              end: 7959,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 7930,
                end: 7950,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 7951,
                end: 7959,
                name: 'useState'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 7960,
              end: 8001,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 7969,
                  end: 7970,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 7971,
                end: 8001,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 7972,
                    end: 8000,
                    argument: {
                      type: 'CallExpression',
                      start: 7979,
                      end: 8000,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 7979,
                        end: 7997,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 7979,
                          end: 7988,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7979,
                            end: 7980,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7981,
                            end: 7988,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 7989,
                          end: 7997,
                          name: 'useState'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 7998,
                          end: 7999,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 8002,
      end: 8133,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 8006,
          end: 8132,
          id: {
            type: 'Identifier',
            start: 8006,
            end: 8026,
            name: 'useSyncExternalStore'
          },
          init: {
            type: 'AssignmentExpression',
            start: 8029,
            end: 8132,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 8029,
              end: 8070,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 8029,
                end: 8049,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 8050,
                end: 8070,
                name: 'useSyncExternalStore'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 8071,
              end: 8132,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 8080,
                  end: 8081,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 8082,
                  end: 8083,
                  name: 'b'
                },
                {
                  type: 'Identifier',
                  start: 8084,
                  end: 8085,
                  name: 'e'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 8086,
                end: 8132,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 8087,
                    end: 8131,
                    argument: {
                      type: 'CallExpression',
                      start: 8094,
                      end: 8131,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 8094,
                        end: 8124,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 8094,
                          end: 8103,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8094,
                            end: 8095,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8096,
                            end: 8103,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 8104,
                          end: 8124,
                          name: 'useSyncExternalStore'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 8125,
                          end: 8126,
                          name: 'a'
                        },
                        {
                          type: 'Identifier',
                          start: 8127,
                          end: 8128,
                          name: 'b'
                        },
                        {
                          type: 'Identifier',
                          start: 8129,
                          end: 8130,
                          name: 'e'
                        }
                      ]
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 8133,
      end: 8233,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 8137,
          end: 8232,
          id: {
            type: 'Identifier',
            start: 8137,
            end: 8150,
            name: 'useTransition'
          },
          init: {
            type: 'AssignmentExpression',
            start: 8153,
            end: 8232,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 8153,
              end: 8187,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 8153,
                end: 8173,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 8174,
                end: 8187,
                name: 'useTransition'
              }
            },
            right: {
              type: 'FunctionExpression',
              start: 8188,
              end: 8232,
              async: false,
              generator: false,
              id: null,
              params: [],
              body: {
                type: 'BlockStatement',
                start: 8198,
                end: 8232,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 8199,
                    end: 8231,
                    argument: {
                      type: 'CallExpression',
                      start: 8206,
                      end: 8231,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 8206,
                        end: 8229,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 8206,
                          end: 8215,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8206,
                            end: 8207,
                            name: 'U'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8208,
                            end: 8215,
                            name: 'current'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 8216,
                          end: 8229,
                          name: 'useTransition'
                        }
                      },
                      arguments: []
                    }
                  }
                ]
              },
              expression: false
            }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 8233,
      end: 8285,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 8237,
          end: 8284,
          id: {
            type: 'Identifier',
            start: 8237,
            end: 8244,
            name: 'version'
          },
          init: {
            type: 'AssignmentExpression',
            start: 8247,
            end: 8284,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 8247,
              end: 8275,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 8247,
                end: 8267,
                name: 'react_production_min'
              },
              property: {
                type: 'Identifier',
                start: 8268,
                end: 8275,
                name: 'version'
              }
            },
            right: {
              type: 'Literal',
              start: 8276,
              end: 8284,
              value: '18.3.1',
              raw: '"18.3.1"'
            }
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 8287,
      end: 8866,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 8296,
          end: 8335,
          local: {
            type: 'Identifier',
            start: 8296,
            end: 8316,
            name: 'react_production_min'
          },
          exported: {
            type: 'Identifier',
            start: 8320,
            end: 8335,
            name: '__moduleExports'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8337,
          end: 8345,
          local: {
            type: 'Identifier',
            start: 8337,
            end: 8345,
            name: 'Children'
          },
          exported: {
            type: 'Identifier',
            start: 8337,
            end: 8345,
            name: 'Children'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8347,
          end: 8356,
          local: {
            type: 'Identifier',
            start: 8347,
            end: 8356,
            name: 'Component'
          },
          exported: {
            type: 'Identifier',
            start: 8347,
            end: 8356,
            name: 'Component'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8358,
          end: 8366,
          local: {
            type: 'Identifier',
            start: 8358,
            end: 8366,
            name: 'Fragment'
          },
          exported: {
            type: 'Identifier',
            start: 8358,
            end: 8366,
            name: 'Fragment'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8368,
          end: 8376,
          local: {
            type: 'Identifier',
            start: 8368,
            end: 8376,
            name: 'Profiler'
          },
          exported: {
            type: 'Identifier',
            start: 8368,
            end: 8376,
            name: 'Profiler'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8378,
          end: 8391,
          local: {
            type: 'Identifier',
            start: 8378,
            end: 8391,
            name: 'PureComponent'
          },
          exported: {
            type: 'Identifier',
            start: 8378,
            end: 8391,
            name: 'PureComponent'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8393,
          end: 8403,
          local: {
            type: 'Identifier',
            start: 8393,
            end: 8403,
            name: 'StrictMode'
          },
          exported: {
            type: 'Identifier',
            start: 8393,
            end: 8403,
            name: 'StrictMode'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8405,
          end: 8413,
          local: {
            type: 'Identifier',
            start: 8405,
            end: 8413,
            name: 'Suspense'
          },
          exported: {
            type: 'Identifier',
            start: 8405,
            end: 8413,
            name: 'Suspense'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8415,
          end: 8465,
          local: {
            type: 'Identifier',
            start: 8415,
            end: 8465,
            name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
          },
          exported: {
            type: 'Identifier',
            start: 8415,
            end: 8465,
            name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8467,
          end: 8470,
          local: { type: 'Identifier', start: 8467, end: 8470, name: 'act' },
          exported: { type: 'Identifier', start: 8467, end: 8470, name: 'act' }
        },
        {
          type: 'ExportSpecifier',
          start: 8472,
          end: 8484,
          local: {
            type: 'Identifier',
            start: 8472,
            end: 8484,
            name: 'cloneElement'
          },
          exported: {
            type: 'Identifier',
            start: 8472,
            end: 8484,
            name: 'cloneElement'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8486,
          end: 8499,
          local: {
            type: 'Identifier',
            start: 8486,
            end: 8499,
            name: 'createContext'
          },
          exported: {
            type: 'Identifier',
            start: 8486,
            end: 8499,
            name: 'createContext'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8501,
          end: 8514,
          local: {
            type: 'Identifier',
            start: 8501,
            end: 8514,
            name: 'createElement'
          },
          exported: {
            type: 'Identifier',
            start: 8501,
            end: 8514,
            name: 'createElement'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8516,
          end: 8529,
          local: {
            type: 'Identifier',
            start: 8516,
            end: 8529,
            name: 'createFactory'
          },
          exported: {
            type: 'Identifier',
            start: 8516,
            end: 8529,
            name: 'createFactory'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8531,
          end: 8540,
          local: {
            type: 'Identifier',
            start: 8531,
            end: 8540,
            name: 'createRef'
          },
          exported: {
            type: 'Identifier',
            start: 8531,
            end: 8540,
            name: 'createRef'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8542,
          end: 8552,
          local: {
            type: 'Identifier',
            start: 8542,
            end: 8552,
            name: 'forwardRef'
          },
          exported: {
            type: 'Identifier',
            start: 8542,
            end: 8552,
            name: 'forwardRef'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8554,
          end: 8568,
          local: {
            type: 'Identifier',
            start: 8554,
            end: 8568,
            name: 'isValidElement'
          },
          exported: {
            type: 'Identifier',
            start: 8554,
            end: 8568,
            name: 'isValidElement'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8570,
          end: 8574,
          local: { type: 'Identifier', start: 8570, end: 8574, name: 'lazy' },
          exported: { type: 'Identifier', start: 8570, end: 8574, name: 'lazy' }
        },
        {
          type: 'ExportSpecifier',
          start: 8576,
          end: 8580,
          local: { type: 'Identifier', start: 8576, end: 8580, name: 'memo' },
          exported: { type: 'Identifier', start: 8576, end: 8580, name: 'memo' }
        },
        {
          type: 'ExportSpecifier',
          start: 8582,
          end: 8597,
          local: {
            type: 'Identifier',
            start: 8582,
            end: 8597,
            name: 'startTransition'
          },
          exported: {
            type: 'Identifier',
            start: 8582,
            end: 8597,
            name: 'startTransition'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8599,
          end: 8611,
          local: {
            type: 'Identifier',
            start: 8599,
            end: 8611,
            name: 'unstable_act'
          },
          exported: {
            type: 'Identifier',
            start: 8599,
            end: 8611,
            name: 'unstable_act'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8613,
          end: 8624,
          local: {
            type: 'Identifier',
            start: 8613,
            end: 8624,
            name: 'useCallback'
          },
          exported: {
            type: 'Identifier',
            start: 8613,
            end: 8624,
            name: 'useCallback'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8626,
          end: 8636,
          local: {
            type: 'Identifier',
            start: 8626,
            end: 8636,
            name: 'useContext'
          },
          exported: {
            type: 'Identifier',
            start: 8626,
            end: 8636,
            name: 'useContext'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8638,
          end: 8651,
          local: {
            type: 'Identifier',
            start: 8638,
            end: 8651,
            name: 'useDebugValue'
          },
          exported: {
            type: 'Identifier',
            start: 8638,
            end: 8651,
            name: 'useDebugValue'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8653,
          end: 8669,
          local: {
            type: 'Identifier',
            start: 8653,
            end: 8669,
            name: 'useDeferredValue'
          },
          exported: {
            type: 'Identifier',
            start: 8653,
            end: 8669,
            name: 'useDeferredValue'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8671,
          end: 8680,
          local: {
            type: 'Identifier',
            start: 8671,
            end: 8680,
            name: 'useEffect'
          },
          exported: {
            type: 'Identifier',
            start: 8671,
            end: 8680,
            name: 'useEffect'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8682,
          end: 8687,
          local: { type: 'Identifier', start: 8682, end: 8687, name: 'useId' },
          exported: { type: 'Identifier', start: 8682, end: 8687, name: 'useId' }
        },
        {
          type: 'ExportSpecifier',
          start: 8689,
          end: 8708,
          local: {
            type: 'Identifier',
            start: 8689,
            end: 8708,
            name: 'useImperativeHandle'
          },
          exported: {
            type: 'Identifier',
            start: 8689,
            end: 8708,
            name: 'useImperativeHandle'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8710,
          end: 8728,
          local: {
            type: 'Identifier',
            start: 8710,
            end: 8728,
            name: 'useInsertionEffect'
          },
          exported: {
            type: 'Identifier',
            start: 8710,
            end: 8728,
            name: 'useInsertionEffect'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8730,
          end: 8745,
          local: {
            type: 'Identifier',
            start: 8730,
            end: 8745,
            name: 'useLayoutEffect'
          },
          exported: {
            type: 'Identifier',
            start: 8730,
            end: 8745,
            name: 'useLayoutEffect'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8747,
          end: 8754,
          local: {
            type: 'Identifier',
            start: 8747,
            end: 8754,
            name: 'useMemo'
          },
          exported: {
            type: 'Identifier',
            start: 8747,
            end: 8754,
            name: 'useMemo'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8756,
          end: 8766,
          local: {
            type: 'Identifier',
            start: 8756,
            end: 8766,
            name: 'useReducer'
          },
          exported: {
            type: 'Identifier',
            start: 8756,
            end: 8766,
            name: 'useReducer'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8768,
          end: 8774,
          local: {
            type: 'Identifier',
            start: 8768,
            end: 8774,
            name: 'useRef'
          },
          exported: {
            type: 'Identifier',
            start: 8768,
            end: 8774,
            name: 'useRef'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8776,
          end: 8784,
          local: {
            type: 'Identifier',
            start: 8776,
            end: 8784,
            name: 'useState'
          },
          exported: {
            type: 'Identifier',
            start: 8776,
            end: 8784,
            name: 'useState'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8786,
          end: 8806,
          local: {
            type: 'Identifier',
            start: 8786,
            end: 8806,
            name: 'useSyncExternalStore'
          },
          exported: {
            type: 'Identifier',
            start: 8786,
            end: 8806,
            name: 'useSyncExternalStore'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8808,
          end: 8821,
          local: {
            type: 'Identifier',
            start: 8808,
            end: 8821,
            name: 'useTransition'
          },
          exported: {
            type: 'Identifier',
            start: 8808,
            end: 8821,
            name: 'useTransition'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8823,
          end: 8830,
          local: {
            type: 'Identifier',
            start: 8823,
            end: 8830,
            name: 'version'
          },
          exported: {
            type: 'Identifier',
            start: 8823,
            end: 8830,
            name: 'version'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 8832,
          end: 8863,
          local: {
            type: 'Identifier',
            start: 8832,
            end: 8852,
            name: 'react_production_min'
          },
          exported: {
            type: 'Identifier',
            start: 8856,
            end: 8863,
            name: 'default'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 48,
  body: [
    {
      type: 'ExportDefaultDeclaration',
      start: 0,
      end: 48,
      declaration: {
        type: 'Literal',
        start: 15,
        end: 48,
        value: '__VITE_PUBLIC_ASSET__d6945b69__',
        raw: '"__VITE_PUBLIC_ASSET__d6945b69__"'
      }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 641,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 55,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 7,
          end: 27,
          local: {
            type: 'Identifier',
            start: 12,
            end: 27,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 33,
        end: 54,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 56,
      end: 181,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 65,
          end: 88,
          imported: { type: 'Identifier', start: 65, end: 73, name: '__module' },
          local: {
            type: 'Identifier',
            start: 77,
            end: 88,
            name: 'reactModule'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 96,
        end: 180,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-module',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-module"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 182,
      end: 214,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 186,
          end: 213,
          id: { type: 'Identifier', start: 186, end: 191, name: 'react' },
          init: {
            type: 'MemberExpression',
            start: 194,
            end: 213,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 194,
              end: 205,
              name: 'reactModule'
            },
            property: {
              type: 'Identifier',
              start: 206,
              end: 213,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ImportDeclaration',
      start: 215,
      end: 341,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 222,
          end: 232,
          local: {
            type: 'Identifier',
            start: 222,
            end: 232,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 238,
        end: 340,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 343,
      end: 356,
      expression: {
        type: 'Literal',
        start: 343,
        end: 355,
        value: 'use strict',
        raw: '"use strict"'
      }
    },
    {
      type: 'IfStatement',
      start: 357,
      end: 473,
      test: {
        type: 'Literal',
        start: 361,
        end: 365,
        value: true,
        raw: 'true'
      },
      consequent: {
        type: 'BlockStatement',
        start: 367,
        end: 406,
        body: [
          {
            type: 'ExpressionStatement',
            start: 371,
            end: 404,
            expression: {
              type: 'AssignmentExpression',
              start: 371,
              end: 403,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 371,
                end: 390,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 371,
                  end: 382,
                  name: 'reactModule'
                },
                property: {
                  type: 'Identifier',
                  start: 383,
                  end: 390,
                  name: 'exports'
                }
              },
              right: {
                type: 'Identifier',
                start: 393,
                end: 403,
                name: 'require$$0'
              }
            }
          }
        ]
      },
      alternate: {
        type: 'BlockStatement',
        start: 412,
        end: 473,
        body: [
          {
            type: 'ExpressionStatement',
            start: 416,
            end: 471,
            expression: {
              type: 'AssignmentExpression',
              start: 416,
              end: 470,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 416,
                end: 430,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 416,
                  end: 422,
                  name: 'module'
                },
                property: {
                  type: 'Identifier',
                  start: 423,
                  end: 430,
                  name: 'exports'
                }
              },
              right: {
                type: 'CallExpression',
                start: 433,
                end: 470,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 433,
                  end: 440,
                  name: 'require'
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 441,
                    end: 469,
                    value: './cjs/react.development.js',
                    raw: '"./cjs/react.development.js"'
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 475,
      end: 514,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 479,
          end: 513,
          id: {
            type: 'Identifier',
            start: 479,
            end: 491,
            name: 'reactExports'
          },
          init: {
            type: 'MemberExpression',
            start: 494,
            end: 513,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 494,
              end: 505,
              name: 'reactModule'
            },
            property: {
              type: 'Identifier',
              start: 506,
              end: 513,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 515,
      end: 597,
      declaration: {
        type: 'CallExpression',
        start: 543,
        end: 596,
        optional: false,
        _rollupAnnotations: [ { end: 543, start: 530, type: 'pure' } ],
        callee: {
          type: 'MemberExpression',
          start: 543,
          end: 582,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 543,
            end: 558,
            name: 'commonjsHelpers'
          },
          property: {
            type: 'Identifier',
            start: 559,
            end: 582,
            name: 'getDefaultExportFromCjs'
          }
        },
        arguments: [
          {
            type: 'Identifier',
            start: 583,
            end: 595,
            name: 'reactExports'
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 598,
      end: 641,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 607,
          end: 638,
          local: {
            type: 'Identifier',
            start: 607,
            end: 619,
            name: 'reactExports'
          },
          exported: {
            type: 'Identifier',
            start: 623,
            end: 638,
            name: '__moduleExports'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 1427,
  body: [
    {
      type: 'ImportDeclaration',
      start: 249,
      end: 304,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 256,
          end: 276,
          local: {
            type: 'Identifier',
            start: 261,
            end: 276,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 282,
        end: 303,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 305,
      end: 482,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 314,
          end: 357,
          imported: {
            type: 'Identifier',
            start: 314,
            end: 323,
            name: '__exports'
          },
          local: {
            type: 'Identifier',
            start: 327,
            end: 357,
            name: 'reactJsxRuntime_production_min'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 365,
        end: 481,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js?commonjs-exports',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js?commonjs-exports"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 483,
      end: 590,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 490,
          end: 500,
          local: {
            type: 'Identifier',
            start: 490,
            end: 500,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 506,
        end: 589,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 592,
      end: 605,
      expression: {
        type: 'Literal',
        start: 592,
        end: 604,
        value: 'use strict',
        raw: "'use strict'"
      }
    },
    {
      type: 'VariableDeclaration',
      start: 605,
      end: 830,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 609,
          end: 621,
          id: { type: 'Identifier', start: 609, end: 610, name: 'f' },
          init: {
            type: 'Identifier',
            start: 611,
            end: 621,
            name: 'require$$0'
          }
        },
        {
          type: 'VariableDeclarator',
          start: 622,
          end: 651,
          id: { type: 'Identifier', start: 622, end: 623, name: 'k' },
          init: {
            type: 'CallExpression',
            start: 624,
            end: 651,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 624,
              end: 634,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 624,
                end: 630,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 631, end: 634, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 635,
                end: 650,
                value: 'react.element',
                raw: '"react.element"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 652,
          end: 682,
          id: { type: 'Identifier', start: 652, end: 653, name: 'l' },
          init: {
            type: 'CallExpression',
            start: 654,
            end: 682,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 654,
              end: 664,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 654,
                end: 660,
                name: 'Symbol'
              },
              property: { type: 'Identifier', start: 661, end: 664, name: 'for' }
            },
            arguments: [
              {
                type: 'Literal',
                start: 665,
                end: 681,
                value: 'react.fragment',
                raw: '"react.fragment"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 683,
          end: 716,
          id: { type: 'Identifier', start: 683, end: 684, name: 'm' },
          init: {
            type: 'MemberExpression',
            start: 685,
            end: 716,
            computed: false,
            optional: false,
            object: {
              type: 'MemberExpression',
              start: 685,
              end: 701,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 685,
                end: 691,
                name: 'Object'
              },
              property: {
                type: 'Identifier',
                start: 692,
                end: 701,
                name: 'prototype'
              }
            },
            property: {
              type: 'Identifier',
              start: 702,
              end: 716,
              name: 'hasOwnProperty'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 717,
          end: 789,
          id: { type: 'Identifier', start: 717, end: 718, name: 'n' },
          init: {
            type: 'MemberExpression',
            start: 719,
            end: 789,
            computed: false,
            optional: false,
            object: {
              type: 'MemberExpression',
              start: 719,
              end: 771,
              computed: false,
              optional: false,
              object: { type: 'Identifier', start: 719, end: 720, name: 'f' },
              property: {
                type: 'Identifier',
                start: 721,
                end: 771,
                name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
              }
            },
            property: {
              type: 'Identifier',
              start: 772,
              end: 789,
              name: 'ReactCurrentOwner'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 790,
          end: 829,
          id: { type: 'Identifier', start: 790, end: 791, name: 'p' },
          init: {
            type: 'ObjectExpression',
            start: 792,
            end: 829,
            properties: [
              {
                type: 'Property',
                start: 793,
                end: 799,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 793,
                  end: 796,
                  name: 'key'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 797,
                  end: 799,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 798,
                    end: 799,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 800,
                end: 806,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 800,
                  end: 803,
                  name: 'ref'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 804,
                  end: 806,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 805,
                    end: 806,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 807,
                end: 816,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 807,
                  end: 813,
                  name: '__self'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 814,
                  end: 816,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 815,
                    end: 816,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 817,
                end: 828,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 817,
                  end: 825,
                  name: '__source'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 826,
                  end: 828,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 827,
                    end: 828,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 831,
      end: 1147,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 840, end: 841, name: 'q' },
      params: [
        { type: 'Identifier', start: 842, end: 843, name: 'c' },
        { type: 'Identifier', start: 844, end: 845, name: 'a' },
        { type: 'Identifier', start: 846, end: 847, name: 'g' }
      ],
      body: {
        type: 'BlockStatement',
        start: 848,
        end: 1147,
        body: [
          {
            type: 'VariableDeclaration',
            start: 849,
            end: 874,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 853,
                end: 854,
                id: { type: 'Identifier', start: 853, end: 854, name: 'b' },
                init: null
              },
              {
                type: 'VariableDeclarator',
                start: 855,
                end: 859,
                id: { type: 'Identifier', start: 855, end: 856, name: 'd' },
                init: {
                  type: 'ObjectExpression',
                  start: 857,
                  end: 859,
                  properties: []
                }
              },
              {
                type: 'VariableDeclarator',
                start: 860,
                end: 866,
                id: { type: 'Identifier', start: 860, end: 861, name: 'e' },
                init: {
                  type: 'Literal',
                  start: 862,
                  end: 866,
                  raw: 'null',
                  value: null
                }
              },
              {
                type: 'VariableDeclarator',
                start: 867,
                end: 873,
                id: { type: 'Identifier', start: 867, end: 868, name: 'h' },
                init: {
                  type: 'Literal',
                  start: 869,
                  end: 873,
                  raw: 'null',
                  value: null
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 874,
            end: 895,
            expression: {
              type: 'LogicalExpression',
              start: 874,
              end: 894,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 874,
                end: 884,
                operator: '!==',
                left: {
                  type: 'UnaryExpression',
                  start: 874,
                  end: 880,
                  operator: 'void',
                  argument: {
                    type: 'Literal',
                    start: 879,
                    end: 880,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                right: { type: 'Identifier', start: 883, end: 884, name: 'g' }
              },
              right: {
                type: 'AssignmentExpression',
                start: 887,
                end: 893,
                operator: '=',
                left: { type: 'Identifier', start: 887, end: 888, name: 'e' },
                right: {
                  type: 'BinaryExpression',
                  start: 889,
                  end: 893,
                  operator: '+',
                  left: {
                    type: 'Literal',
                    start: 889,
                    end: 891,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'Identifier',
                    start: 892,
                    end: 893,
                    name: 'g'
                  }
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 895,
            end: 924,
            expression: {
              type: 'LogicalExpression',
              start: 895,
              end: 923,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 895,
                end: 909,
                operator: '!==',
                left: {
                  type: 'UnaryExpression',
                  start: 895,
                  end: 901,
                  operator: 'void',
                  argument: {
                    type: 'Literal',
                    start: 900,
                    end: 901,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                right: {
                  type: 'MemberExpression',
                  start: 904,
                  end: 909,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 904,
                    end: 905,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 906,
                    end: 909,
                    name: 'key'
                  }
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 912,
                end: 922,
                operator: '=',
                left: { type: 'Identifier', start: 912, end: 913, name: 'e' },
                right: {
                  type: 'BinaryExpression',
                  start: 914,
                  end: 922,
                  operator: '+',
                  left: {
                    type: 'Literal',
                    start: 914,
                    end: 916,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 917,
                    end: 922,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 917,
                      end: 918,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 919,
                      end: 922,
                      name: 'key'
                    }
                  }
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 924,
            end: 950,
            expression: {
              type: 'LogicalExpression',
              start: 924,
              end: 949,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 924,
                end: 938,
                operator: '!==',
                left: {
                  type: 'UnaryExpression',
                  start: 924,
                  end: 930,
                  operator: 'void',
                  argument: {
                    type: 'Literal',
                    start: 929,
                    end: 930,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                right: {
                  type: 'MemberExpression',
                  start: 933,
                  end: 938,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 933,
                    end: 934,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 935,
                    end: 938,
                    name: 'ref'
                  }
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 941,
                end: 948,
                operator: '=',
                left: { type: 'Identifier', start: 941, end: 942, name: 'h' },
                right: {
                  type: 'MemberExpression',
                  start: 943,
                  end: 948,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 943,
                    end: 944,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 945,
                    end: 948,
                    name: 'ref'
                  }
                }
              }
            }
          },
          {
            type: 'ForInStatement',
            start: 950,
            end: 1008,
            left: { type: 'Identifier', start: 954, end: 955, name: 'b' },
            right: { type: 'Identifier', start: 959, end: 960, name: 'a' },
            body: {
              type: 'ExpressionStatement',
              start: 961,
              end: 1008,
              expression: {
                type: 'LogicalExpression',
                start: 961,
                end: 1007,
                operator: '&&',
                left: {
                  type: 'LogicalExpression',
                  start: 961,
                  end: 994,
                  operator: '&&',
                  left: {
                    type: 'CallExpression',
                    start: 961,
                    end: 972,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 961,
                      end: 967,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 961,
                        end: 962,
                        name: 'm'
                      },
                      property: {
                        type: 'Identifier',
                        start: 963,
                        end: 967,
                        name: 'call'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 968,
                        end: 969,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 970,
                        end: 971,
                        name: 'b'
                      }
                    ]
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 974,
                    end: 994,
                    operator: '!',
                    argument: {
                      type: 'CallExpression',
                      start: 975,
                      end: 994,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 975,
                        end: 991,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 975,
                          end: 976,
                          name: 'p'
                        },
                        property: {
                          type: 'Identifier',
                          start: 977,
                          end: 991,
                          name: 'hasOwnProperty'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 992,
                          end: 993,
                          name: 'b'
                        }
                      ]
                    },
                    prefix: true
                  }
                },
                right: {
                  type: 'AssignmentExpression',
                  start: 997,
                  end: 1006,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 997,
                    end: 1001,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 997,
                      end: 998,
                      name: 'd'
                    },
                    property: {
                      type: 'Identifier',
                      start: 999,
                      end: 1000,
                      name: 'b'
                    }
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 1002,
                    end: 1006,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 1002,
                      end: 1003,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 1004,
                      end: 1005,
                      name: 'b'
                    }
                  }
                }
              }
            }
          },
          {
            type: 'IfStatement',
            start: 1008,
            end: 1084,
            test: {
              type: 'LogicalExpression',
              start: 1011,
              end: 1028,
              operator: '&&',
              left: { type: 'Identifier', start: 1011, end: 1012, name: 'c' },
              right: {
                type: 'MemberExpression',
                start: 1014,
                end: 1028,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1014,
                  end: 1015,
                  name: 'c'
                },
                property: {
                  type: 'Identifier',
                  start: 1016,
                  end: 1028,
                  name: 'defaultProps'
                }
              }
            },
            consequent: {
              type: 'ForInStatement',
              start: 1029,
              end: 1084,
              left: { type: 'Identifier', start: 1033, end: 1034, name: 'b' },
              right: {
                type: 'SequenceExpression',
                start: 1038,
                end: 1056,
                expressions: [
                  {
                    type: 'AssignmentExpression',
                    start: 1038,
                    end: 1054,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 1038,
                      end: 1039,
                      name: 'a'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 1040,
                      end: 1054,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1040,
                        end: 1041,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1042,
                        end: 1054,
                        name: 'defaultProps'
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    start: 1055,
                    end: 1056,
                    name: 'a'
                  }
                ]
              },
              body: {
                type: 'ExpressionStatement',
                start: 1057,
                end: 1084,
                expression: {
                  type: 'LogicalExpression',
                  start: 1057,
                  end: 1083,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 1057,
                    end: 1070,
                    operator: '===',
                    left: {
                      type: 'UnaryExpression',
                      start: 1057,
                      end: 1063,
                      operator: 'void',
                      argument: {
                        type: 'Literal',
                        start: 1062,
                        end: 1063,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 1066,
                      end: 1070,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1066,
                        end: 1067,
                        name: 'd'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1068,
                        end: 1069,
                        name: 'b'
                      }
                    }
                  },
                  right: {
                    type: 'AssignmentExpression',
                    start: 1073,
                    end: 1082,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 1073,
                      end: 1077,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1073,
                        end: 1074,
                        name: 'd'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1075,
                        end: 1076,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 1078,
                      end: 1082,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1078,
                        end: 1079,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1080,
                        end: 1081,
                        name: 'b'
                      }
                    }
                  }
                }
              }
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 1084,
            end: 1146,
            argument: {
              type: 'ObjectExpression',
              start: 1090,
              end: 1146,
              properties: [
                {
                  type: 'Property',
                  start: 1091,
                  end: 1101,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1091,
                    end: 1099,
                    name: '$$typeof'
                  },
                  value: {
                    type: 'Identifier',
                    start: 1100,
                    end: 1101,
                    name: 'k'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 1102,
                  end: 1108,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1102,
                    end: 1106,
                    name: 'type'
                  },
                  value: {
                    type: 'Identifier',
                    start: 1107,
                    end: 1108,
                    name: 'c'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 1109,
                  end: 1114,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1109,
                    end: 1112,
                    name: 'key'
                  },
                  value: {
                    type: 'Identifier',
                    start: 1113,
                    end: 1114,
                    name: 'e'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 1115,
                  end: 1120,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1115,
                    end: 1118,
                    name: 'ref'
                  },
                  value: {
                    type: 'Identifier',
                    start: 1119,
                    end: 1120,
                    name: 'h'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 1121,
                  end: 1128,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1121,
                    end: 1126,
                    name: 'props'
                  },
                  value: {
                    type: 'Identifier',
                    start: 1127,
                    end: 1128,
                    name: 'd'
                  },
                  kind: 'init'
                },
                {
                  type: 'Property',
                  start: 1129,
                  end: 1145,
                  method: false,
                  shorthand: false,
                  computed: false,
                  key: {
                    type: 'Identifier',
                    start: 1129,
                    end: 1135,
                    name: '_owner'
                  },
                  value: {
                    type: 'MemberExpression',
                    start: 1136,
                    end: 1145,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 1136,
                      end: 1137,
                      name: 'n'
                    },
                    property: {
                      type: 'Identifier',
                      start: 1138,
                      end: 1145,
                      name: 'current'
                    }
                  },
                  kind: 'init'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 1147,
      end: 1204,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1151,
          end: 1203,
          id: {
            type: 'Identifier',
            start: 1151,
            end: 1159,
            name: 'Fragment'
          },
          init: {
            type: 'AssignmentExpression',
            start: 1162,
            end: 1203,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 1162,
              end: 1201,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 1162,
                end: 1192,
                name: 'reactJsxRuntime_production_min'
              },
              property: {
                type: 'Identifier',
                start: 1193,
                end: 1201,
                name: 'Fragment'
              }
            },
            right: { type: 'Identifier', start: 1202, end: 1203, name: 'l' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 1204,
      end: 1251,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1208,
          end: 1250,
          id: { type: 'Identifier', start: 1208, end: 1211, name: 'jsx' },
          init: {
            type: 'AssignmentExpression',
            start: 1214,
            end: 1250,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 1214,
              end: 1248,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 1214,
                end: 1244,
                name: 'reactJsxRuntime_production_min'
              },
              property: {
                type: 'Identifier',
                start: 1245,
                end: 1248,
                name: 'jsx'
              }
            },
            right: { type: 'Identifier', start: 1249, end: 1250, name: 'q' }
          }
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 1251,
      end: 1300,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1255,
          end: 1299,
          id: { type: 'Identifier', start: 1255, end: 1259, name: 'jsxs' },
          init: {
            type: 'AssignmentExpression',
            start: 1262,
            end: 1299,
            operator: '=',
            left: {
              type: 'MemberExpression',
              start: 1262,
              end: 1297,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 1262,
                end: 1292,
                name: 'reactJsxRuntime_production_min'
              },
              property: {
                type: 'Identifier',
                start: 1293,
                end: 1297,
                name: 'jsxs'
              }
            },
            right: { type: 'Identifier', start: 1298, end: 1299, name: 'q' }
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 1302,
      end: 1427,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 1311,
          end: 1360,
          local: {
            type: 'Identifier',
            start: 1311,
            end: 1341,
            name: 'reactJsxRuntime_production_min'
          },
          exported: {
            type: 'Identifier',
            start: 1345,
            end: 1360,
            name: '__moduleExports'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 1362,
          end: 1370,
          local: {
            type: 'Identifier',
            start: 1362,
            end: 1370,
            name: 'Fragment'
          },
          exported: {
            type: 'Identifier',
            start: 1362,
            end: 1370,
            name: 'Fragment'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 1372,
          end: 1375,
          local: { type: 'Identifier', start: 1372, end: 1375, name: 'jsx' },
          exported: { type: 'Identifier', start: 1372, end: 1375, name: 'jsx' }
        },
        {
          type: 'ExportSpecifier',
          start: 1377,
          end: 1381,
          local: { type: 'Identifier', start: 1377, end: 1381, name: 'jsxs' },
          exported: { type: 'Identifier', start: 1377, end: 1381, name: 'jsxs' }
        },
        {
          type: 'ExportSpecifier',
          start: 1383,
          end: 1424,
          local: {
            type: 'Identifier',
            start: 1383,
            end: 1413,
            name: 'reactJsxRuntime_production_min'
          },
          exported: {
            type: 'Identifier',
            start: 1417,
            end: 1424,
            name: 'default'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 1294,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 1,
      end: 200,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'VariableDeclaration',
        start: 8,
        end: 200,
        kind: 'var',
        declarations: [
          {
            type: 'VariableDeclarator',
            start: 12,
            end: 199,
            id: {
              type: 'Identifier',
              start: 12,
              end: 26,
              name: 'commonjsGlobal'
            },
            init: {
              type: 'ConditionalExpression',
              start: 29,
              end: 199,
              test: {
                type: 'BinaryExpression',
                start: 29,
                end: 62,
                operator: '!==',
                left: {
                  type: 'UnaryExpression',
                  start: 29,
                  end: 46,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 36,
                    end: 46,
                    name: 'globalThis'
                  },
                  prefix: true
                },
                right: {
                  type: 'Literal',
                  start: 51,
                  end: 62,
                  value: 'undefined',
                  raw: "'undefined'"
                }
              },
              consequent: {
                type: 'Identifier',
                start: 65,
                end: 75,
                name: 'globalThis'
              },
              alternate: {
                type: 'ConditionalExpression',
                start: 78,
                end: 199,
                test: {
                  type: 'BinaryExpression',
                  start: 78,
                  end: 107,
                  operator: '!==',
                  left: {
                    type: 'UnaryExpression',
                    start: 78,
                    end: 91,
                    operator: 'typeof',
                    argument: {
                      type: 'Identifier',
                      start: 85,
                      end: 91,
                      name: 'window'
                    },
                    prefix: true
                  },
                  right: {
                    type: 'Literal',
                    start: 96,
                    end: 107,
                    value: 'undefined',
                    raw: "'undefined'"
                  }
                },
                consequent: {
                  type: 'Identifier',
                  start: 110,
                  end: 116,
                  name: 'window'
                },
                alternate: {
                  type: 'ConditionalExpression',
                  start: 119,
                  end: 199,
                  test: {
                    type: 'BinaryExpression',
                    start: 119,
                    end: 148,
                    operator: '!==',
                    left: {
                      type: 'UnaryExpression',
                      start: 119,
                      end: 132,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 126,
                        end: 132,
                        name: 'global'
                      },
                      prefix: true
                    },
                    right: {
                      type: 'Literal',
                      start: 137,
                      end: 148,
                      value: 'undefined',
                      raw: "'undefined'"
                    }
                  },
                  consequent: {
                    type: 'Identifier',
                    start: 151,
                    end: 157,
                    name: 'global'
                  },
                  alternate: {
                    type: 'ConditionalExpression',
                    start: 160,
                    end: 199,
                    test: {
                      type: 'BinaryExpression',
                      start: 160,
                      end: 187,
                      operator: '!==',
                      left: {
                        type: 'UnaryExpression',
                        start: 160,
                        end: 171,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 167,
                          end: 171,
                          name: 'self'
                        },
                        prefix: true
                      },
                      right: {
                        type: 'Literal',
                        start: 176,
                        end: 187,
                        value: 'undefined',
                        raw: "'undefined'"
                      }
                    },
                    consequent: {
                      type: 'Identifier',
                      start: 190,
                      end: 194,
                      name: 'self'
                    },
                    alternate: {
                      type: 'ObjectExpression',
                      start: 197,
                      end: 199,
                      properties: []
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 202,
      end: 349,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'FunctionDeclaration',
        start: 209,
        end: 349,
        async: false,
        generator: false,
        id: {
          type: 'Identifier',
          start: 218,
          end: 241,
          name: 'getDefaultExportFromCjs'
        },
        params: [ { type: 'Identifier', start: 243, end: 244, name: 'x' } ],
        body: {
          type: 'BlockStatement',
          start: 246,
          end: 349,
          body: [
            {
              type: 'ReturnStatement',
              start: 249,
              end: 347,
              argument: {
                type: 'ConditionalExpression',
                start: 256,
                end: 346,
                test: {
                  type: 'LogicalExpression',
                  start: 256,
                  end: 327,
                  operator: '&&',
                  left: {
                    type: 'LogicalExpression',
                    start: 256,
                    end: 273,
                    operator: '&&',
                    left: {
                      type: 'Identifier',
                      start: 256,
                      end: 257,
                      name: 'x'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 261,
                      end: 273,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 261,
                        end: 262,
                        name: 'x'
                      },
                      property: {
                        type: 'Identifier',
                        start: 263,
                        end: 273,
                        name: '__esModule'
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    start: 277,
                    end: 327,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 277,
                      end: 313,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 277,
                        end: 308,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 277,
                          end: 293,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 277,
                            end: 283,
                            name: 'Object'
                          },
                          property: {
                            type: 'Identifier',
                            start: 284,
                            end: 293,
                            name: 'prototype'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 294,
                          end: 308,
                          name: 'hasOwnProperty'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 309,
                        end: 313,
                        name: 'call'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 314,
                        end: 315,
                        name: 'x'
                      },
                      {
                        type: 'Literal',
                        start: 317,
                        end: 326,
                        value: 'default',
                        raw: "'default'"
                      }
                    ]
                  }
                },
                consequent: {
                  type: 'MemberExpression',
                  start: 330,
                  end: 342,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 330,
                    end: 331,
                    name: 'x'
                  },
                  property: {
                    type: 'Literal',
                    start: 332,
                    end: 341,
                    value: 'default',
                    raw: "'default'"
                  }
                },
                alternate: { type: 'Identifier', start: 345, end: 346, name: 'x' }
              }
            }
          ]
        },
        expression: false
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 351,
      end: 497,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'FunctionDeclaration',
        start: 358,
        end: 497,
        async: false,
        generator: false,
        id: {
          type: 'Identifier',
          start: 367,
          end: 405,
          name: 'getDefaultExportFromNamespaceIfPresent'
        },
        params: [ { type: 'Identifier', start: 407, end: 408, name: 'n' } ],
        body: {
          type: 'BlockStatement',
          start: 410,
          end: 497,
          body: [
            {
              type: 'ReturnStatement',
              start: 413,
              end: 495,
              argument: {
                type: 'ConditionalExpression',
                start: 420,
                end: 494,
                test: {
                  type: 'LogicalExpression',
                  start: 420,
                  end: 475,
                  operator: '&&',
                  left: {
                    type: 'Identifier',
                    start: 420,
                    end: 421,
                    name: 'n'
                  },
                  right: {
                    type: 'CallExpression',
                    start: 425,
                    end: 475,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 425,
                      end: 461,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 425,
                        end: 456,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 425,
                          end: 441,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 425,
                            end: 431,
                            name: 'Object'
                          },
                          property: {
                            type: 'Identifier',
                            start: 432,
                            end: 441,
                            name: 'prototype'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 442,
                          end: 456,
                          name: 'hasOwnProperty'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 457,
                        end: 461,
                        name: 'call'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 462,
                        end: 463,
                        name: 'n'
                      },
                      {
                        type: 'Literal',
                        start: 465,
                        end: 474,
                        value: 'default',
                        raw: "'default'"
                      }
                    ]
                  }
                },
                consequent: {
                  type: 'MemberExpression',
                  start: 478,
                  end: 490,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 478,
                    end: 479,
                    name: 'n'
                  },
                  property: {
                    type: 'Literal',
                    start: 480,
                    end: 489,
                    value: 'default',
                    raw: "'default'"
                  }
                },
                alternate: { type: 'Identifier', start: 493, end: 494, name: 'n' }
              }
            }
          ]
        },
        expression: false
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 499,
      end: 677,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'FunctionDeclaration',
        start: 506,
        end: 677,
        async: false,
        generator: false,
        id: {
          type: 'Identifier',
          start: 515,
          end: 554,
          name: 'getDefaultExportFromNamespaceIfNotNamed'
        },
        params: [ { type: 'Identifier', start: 556, end: 557, name: 'n' } ],
        body: {
          type: 'BlockStatement',
          start: 559,
          end: 677,
          body: [
            {
              type: 'ReturnStatement',
              start: 562,
              end: 675,
              argument: {
                type: 'ConditionalExpression',
                start: 569,
                end: 674,
                test: {
                  type: 'LogicalExpression',
                  start: 569,
                  end: 655,
                  operator: '&&',
                  left: {
                    type: 'LogicalExpression',
                    start: 569,
                    end: 624,
                    operator: '&&',
                    left: {
                      type: 'Identifier',
                      start: 569,
                      end: 570,
                      name: 'n'
                    },
                    right: {
                      type: 'CallExpression',
                      start: 574,
                      end: 624,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 574,
                        end: 610,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 574,
                          end: 605,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'MemberExpression',
                            start: 574,
                            end: 590,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 574,
                              end: 580,
                              name: 'Object'
                            },
                            property: {
                              type: 'Identifier',
                              start: 581,
                              end: 590,
                              name: 'prototype'
                            }
                          },
                          property: {
                            type: 'Identifier',
                            start: 591,
                            end: 605,
                            name: 'hasOwnProperty'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 606,
                          end: 610,
                          name: 'call'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 611,
                          end: 612,
                          name: 'n'
                        },
                        {
                          type: 'Literal',
                          start: 614,
                          end: 623,
                          value: 'default',
                          raw: "'default'"
                        }
                      ]
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 628,
                    end: 655,
                    operator: '===',
                    left: {
                      type: 'MemberExpression',
                      start: 628,
                      end: 649,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'CallExpression',
                        start: 628,
                        end: 642,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 628,
                          end: 639,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 628,
                            end: 634,
                            name: 'Object'
                          },
                          property: {
                            type: 'Identifier',
                            start: 635,
                            end: 639,
                            name: 'keys'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 640,
                            end: 641,
                            name: 'n'
                          }
                        ]
                      },
                      property: {
                        type: 'Identifier',
                        start: 643,
                        end: 649,
                        name: 'length'
                      }
                    },
                    right: {
                      type: 'Literal',
                      start: 654,
                      end: 655,
                      raw: '1',
                      value: 1
                    }
                  }
                },
                consequent: {
                  type: 'MemberExpression',
                  start: 658,
                  end: 670,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 658,
                    end: 659,
                    name: 'n'
                  },
                  property: {
                    type: 'Literal',
                    start: 660,
                    end: 669,
                    value: 'default',
                    raw: "'default'"
                  }
                },
                alternate: { type: 'Identifier', start: 673, end: 674, name: 'n' }
              }
            }
          ]
        },
        expression: false
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 679,
      end: 1293,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'FunctionDeclaration',
        start: 686,
        end: 1293,
        async: false,
        generator: false,
        id: {
          type: 'Identifier',
          start: 695,
          end: 716,
          name: 'getAugmentedNamespace'
        },
        params: [ { type: 'Identifier', start: 717, end: 718, name: 'n' } ],
        body: {
          type: 'BlockStatement',
          start: 720,
          end: 1293,
          body: [
            {
              type: 'IfStatement',
              start: 724,
              end: 751,
              test: {
                type: 'MemberExpression',
                start: 728,
                end: 740,
                computed: false,
                optional: false,
                object: { type: 'Identifier', start: 728, end: 729, name: 'n' },
                property: {
                  type: 'Identifier',
                  start: 730,
                  end: 740,
                  name: '__esModule'
                }
              },
              consequent: {
                type: 'ReturnStatement',
                start: 742,
                end: 751,
                argument: { type: 'Identifier', start: 749, end: 750, name: 'n' }
              },
              alternate: null
            },
            {
              type: 'VariableDeclaration',
              start: 754,
              end: 772,
              kind: 'var',
              declarations: [
                {
                  type: 'VariableDeclarator',
                  start: 758,
                  end: 771,
                  id: {
                    type: 'Identifier',
                    start: 758,
                    end: 759,
                    name: 'f'
                  },
                  init: {
                    type: 'MemberExpression',
                    start: 762,
                    end: 771,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 762,
                      end: 763,
                      name: 'n'
                    },
                    property: {
                      type: 'Identifier',
                      start: 764,
                      end: 771,
                      name: 'default'
                    }
                  }
                }
              ]
            },
            {
              type: 'IfStatement',
              start: 774,
              end: 1015,
              test: {
                type: 'BinaryExpression',
                start: 778,
                end: 800,
                operator: '==',
                left: {
                  type: 'UnaryExpression',
                  start: 778,
                  end: 786,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 785,
                    end: 786,
                    name: 'f'
                  },
                  prefix: true
                },
                right: {
                  type: 'Literal',
                  start: 790,
                  end: 800,
                  value: 'function',
                  raw: '"function"'
                }
              },
              consequent: {
                type: 'BlockStatement',
                start: 802,
                end: 1002,
                body: [
                  {
                    type: 'VariableDeclaration',
                    start: 806,
                    end: 969,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 810,
                        end: 968,
                        id: {
                          type: 'Identifier',
                          start: 810,
                          end: 811,
                          name: 'a'
                        },
                        init: {
                          type: 'FunctionExpression',
                          start: 814,
                          end: 968,
                          async: false,
                          generator: false,
                          id: {
                            type: 'Identifier',
                            start: 823,
                            end: 824,
                            name: 'a'
                          },
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 828,
                            end: 968,
                            body: [
                              {
                                type: 'IfStatement',
                                start: 833,
                                end: 928,
                                test: {
                                  type: 'BinaryExpression',
                                  start: 837,
                                  end: 854,
                                  operator: 'instanceof',
                                  left: {
                                    type: 'ThisExpression',
                                    start: 837,
                                    end: 841
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 853,
                                    end: 854,
                                    name: 'a'
                                  }
                                },
                                consequent: {
                                  type: 'BlockStatement',
                                  start: 856,
                                  end: 928,
                                  body: [
                                    {
                                      type: 'ReturnStatement',
                                      start: 866,
                                      end: 923,
                                      argument: {
                                        type: 'CallExpression',
                                        start: 873,
                                        end: 922,
                                        optional: false,
                                        callee: {
                                          type: 'MemberExpression',
                                          start: 873,
                                          end: 890,
                                          computed: false,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 873,
                                            end: 880,
                                            name: 'Reflect'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 881,
                                            end: 890,
                                            name: 'construct'
                                          }
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 891,
                                            end: 892,
                                            name: 'f'
                                          },
                                          {
                                            type: 'Identifier',
                                            start: 894,
                                            end: 903,
                                            name: 'arguments'
                                          },
                                          {
                                            type: 'MemberExpression',
                                            start: 905,
                                            end: 921,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'ThisExpression',
                                              start: 905,
                                              end: 909
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 910,
                                              end: 921,
                                              name: 'constructor'
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                alternate: null
                              },
                              {
                                type: 'ReturnStatement',
                                start: 932,
                                end: 964,
                                argument: {
                                  type: 'CallExpression',
                                  start: 939,
                                  end: 963,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 939,
                                    end: 946,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 939,
                                      end: 940,
                                      name: 'f'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 941,
                                      end: 946,
                                      name: 'apply'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'ThisExpression',
                                      start: 947,
                                      end: 951
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 953,
                                      end: 962,
                                      name: 'arguments'
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          expression: false
                        }
                      }
                    ]
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 972,
                    end: 998,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 972,
                      end: 997,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 972,
                        end: 983,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 972,
                          end: 973,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 974,
                          end: 983,
                          name: 'prototype'
                        }
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 986,
                        end: 997,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 986,
                          end: 987,
                          name: 'f'
                        },
                        property: {
                          type: 'Identifier',
                          start: 988,
                          end: 997,
                          name: 'prototype'
                        }
                      }
                    }
                  }
                ]
              },
              alternate: {
                type: 'ExpressionStatement',
                start: 1008,
                end: 1015,
                expression: {
                  type: 'AssignmentExpression',
                  start: 1008,
                  end: 1014,
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    start: 1008,
                    end: 1009,
                    name: 'a'
                  },
                  right: {
                    type: 'ObjectExpression',
                    start: 1012,
                    end: 1014,
                    properties: []
                  }
                }
              }
            },
            {
              type: 'ExpressionStatement',
              start: 1018,
              end: 1072,
              expression: {
                type: 'CallExpression',
                start: 1018,
                end: 1071,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 1018,
                  end: 1039,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 1018,
                    end: 1024,
                    name: 'Object'
                  },
                  property: {
                    type: 'Identifier',
                    start: 1025,
                    end: 1039,
                    name: 'defineProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 1040,
                    end: 1041,
                    name: 'a'
                  },
                  {
                    type: 'Literal',
                    start: 1043,
                    end: 1055,
                    value: '__esModule',
                    raw: "'__esModule'"
                  },
                  {
                    type: 'ObjectExpression',
                    start: 1057,
                    end: 1070,
                    properties: [
                      {
                        type: 'Property',
                        start: 1058,
                        end: 1069,
                        method: false,
                        shorthand: false,
                        computed: false,
                        key: {
                          type: 'Identifier',
                          start: 1058,
                          end: 1063,
                          name: 'value'
                        },
                        value: {
                          type: 'Literal',
                          start: 1065,
                          end: 1069,
                          value: true,
                          raw: 'true'
                        },
                        kind: 'init'
                      }
                    ]
                  }
                ]
              }
            },
            {
              type: 'ExpressionStatement',
              start: 1074,
              end: 1280,
              expression: {
                type: 'CallExpression',
                start: 1074,
                end: 1279,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 1074,
                  end: 1096,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'CallExpression',
                    start: 1074,
                    end: 1088,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 1074,
                      end: 1085,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1074,
                        end: 1080,
                        name: 'Object'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1081,
                        end: 1085,
                        name: 'keys'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 1086,
                        end: 1087,
                        name: 'n'
                      }
                    ]
                  },
                  property: {
                    type: 'Identifier',
                    start: 1089,
                    end: 1096,
                    name: 'forEach'
                  }
                },
                arguments: [
                  {
                    type: 'FunctionExpression',
                    start: 1097,
                    end: 1278,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 1107,
                        end: 1108,
                        name: 'k'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 1110,
                      end: 1278,
                      body: [
                        {
                          type: 'VariableDeclaration',
                          start: 1114,
                          end: 1160,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 1118,
                              end: 1159,
                              id: {
                                type: 'Identifier',
                                start: 1118,
                                end: 1119,
                                name: 'd'
                              },
                              init: {
                                type: 'CallExpression',
                                start: 1122,
                                end: 1159,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 1122,
                                  end: 1153,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 1122,
                                    end: 1128,
                                    name: 'Object'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 1129,
                                    end: 1153,
                                    name: 'getOwnPropertyDescriptor'
                                  }
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 1154,
                                    end: 1155,
                                    name: 'n'
                                  },
                                  {
                                    type: 'Identifier',
                                    start: 1157,
                                    end: 1158,
                                    name: 'k'
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 1163,
                          end: 1275,
                          expression: {
                            type: 'CallExpression',
                            start: 1163,
                            end: 1274,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 1163,
                              end: 1184,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 1163,
                                end: 1169,
                                name: 'Object'
                              },
                              property: {
                                type: 'Identifier',
                                start: 1170,
                                end: 1184,
                                name: 'defineProperty'
                              }
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 1185,
                                end: 1186,
                                name: 'a'
                              },
                              {
                                type: 'Identifier',
                                start: 1188,
                                end: 1189,
                                name: 'k'
                              },
                              {
                                type: 'ConditionalExpression',
                                start: 1191,
                                end: 1273,
                                test: {
                                  type: 'MemberExpression',
                                  start: 1191,
                                  end: 1196,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 1191,
                                    end: 1192,
                                    name: 'd'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 1193,
                                    end: 1196,
                                    name: 'get'
                                  }
                                },
                                consequent: {
                                  type: 'Identifier',
                                  start: 1199,
                                  end: 1200,
                                  name: 'd'
                                },
                                alternate: {
                                  type: 'ObjectExpression',
                                  start: 1203,
                                  end: 1273,
                                  properties: [
                                    {
                                      type: 'Property',
                                      start: 1208,
                                      end: 1224,
                                      method: false,
                                      shorthand: false,
                                      computed: false,
                                      key: {
                                        type: 'Identifier',
                                        start: 1208,
                                        end: 1218,
                                        name: 'enumerable'
                                      },
                                      value: {
                                        type: 'Literal',
                                        start: 1220,
                                        end: 1224,
                                        value: true,
                                        raw: 'true'
                                      },
                                      kind: 'init'
                                    },
                                    {
                                      type: 'Property',
                                      start: 1229,
                                      end: 1269,
                                      method: false,
                                      shorthand: false,
                                      computed: false,
                                      key: {
                                        type: 'Identifier',
                                        start: 1229,
                                        end: 1232,
                                        name: 'get'
                                      },
                                      value: {
                                        type: 'FunctionExpression',
                                        start: 1234,
                                        end: 1269,
                                        async: false,
                                        generator: false,
                                        id: null,
                                        params: [],
                                        body: {
                                          type: 'BlockStatement',
                                          start: 1246,
                                          end: 1269,
                                          body: [
                                            {
                                              type: 'ReturnStatement',
                                              start: 1252,
                                              end: 1264,
                                              argument: {
                                                type: 'MemberExpression',
                                                start: 1259,
                                                end: 1263,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 1259,
                                                  end: 1260,
                                                  name: 'n'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 1261,
                                                  end: 1262,
                                                  name: 'k'
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        expression: false
                                      },
                                      kind: 'init'
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                ]
              }
            },
            {
              type: 'ReturnStatement',
              start: 1282,
              end: 1291,
              argument: { type: 'Identifier', start: 1289, end: 1290, name: 'a' }
            }
          ]
        },
        expression: false
      }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 53,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 26,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 25,
          id: { type: 'Identifier', start: 4, end: 9, name: 'react' },
          init: {
            type: 'ObjectExpression',
            start: 12,
            end: 25,
            properties: [
              {
                type: 'Property',
                start: 13,
                end: 24,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 13,
                  end: 20,
                  name: 'exports'
                },
                value: {
                  type: 'ObjectExpression',
                  start: 22,
                  end: 24,
                  properties: []
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 27,
      end: 53,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 35,
          end: 52,
          local: { type: 'Identifier', start: 35, end: 40, name: 'react' },
          exported: { type: 'Identifier', start: 44, end: 52, name: '__module' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 125,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 125,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 124,
        value: '/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/react/cjs/react.production.min.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 711,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 55,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 7,
          end: 27,
          local: {
            type: 'Identifier',
            start: 12,
            end: 27,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 33,
        end: 54,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 56,
      end: 192,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 65,
          end: 93,
          imported: { type: 'Identifier', start: 65, end: 73, name: '__module' },
          local: {
            type: 'Identifier',
            start: 77,
            end: 93,
            name: 'jsxRuntimeModule'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 101,
        end: 191,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/jsx-runtime.js?commonjs-module',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/jsx-runtime.js?commonjs-module"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 193,
      end: 235,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 197,
          end: 234,
          id: {
            type: 'Identifier',
            start: 197,
            end: 207,
            name: 'jsxRuntime'
          },
          init: {
            type: 'MemberExpression',
            start: 210,
            end: 234,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 210,
              end: 226,
              name: 'jsxRuntimeModule'
            },
            property: {
              type: 'Identifier',
              start: 227,
              end: 234,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ImportDeclaration',
      start: 236,
      end: 374,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 243,
          end: 253,
          local: {
            type: 'Identifier',
            start: 243,
            end: 253,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 259,
        end: 373,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 376,
      end: 389,
      expression: {
        type: 'Literal',
        start: 376,
        end: 388,
        value: 'use strict',
        raw: '"use strict"'
      }
    },
    {
      type: 'IfStatement',
      start: 390,
      end: 523,
      test: {
        type: 'Literal',
        start: 394,
        end: 398,
        value: true,
        raw: 'true'
      },
      consequent: {
        type: 'BlockStatement',
        start: 400,
        end: 444,
        body: [
          {
            type: 'ExpressionStatement',
            start: 404,
            end: 442,
            expression: {
              type: 'AssignmentExpression',
              start: 404,
              end: 441,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 404,
                end: 428,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 404,
                  end: 420,
                  name: 'jsxRuntimeModule'
                },
                property: {
                  type: 'Identifier',
                  start: 421,
                  end: 428,
                  name: 'exports'
                }
              },
              right: {
                type: 'Identifier',
                start: 431,
                end: 441,
                name: 'require$$0'
              }
            }
          }
        ]
      },
      alternate: {
        type: 'BlockStatement',
        start: 450,
        end: 523,
        body: [
          {
            type: 'ExpressionStatement',
            start: 454,
            end: 521,
            expression: {
              type: 'AssignmentExpression',
              start: 454,
              end: 520,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 454,
                end: 468,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 454,
                  end: 460,
                  name: 'module'
                },
                property: {
                  type: 'Identifier',
                  start: 461,
                  end: 468,
                  name: 'exports'
                }
              },
              right: {
                type: 'CallExpression',
                start: 471,
                end: 520,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 471,
                  end: 478,
                  name: 'require'
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 479,
                    end: 519,
                    value: './cjs/react-jsx-runtime.development.js',
                    raw: '"./cjs/react-jsx-runtime.development.js"'
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 525,
      end: 574,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 529,
          end: 573,
          id: {
            type: 'Identifier',
            start: 529,
            end: 546,
            name: 'jsxRuntimeExports'
          },
          init: {
            type: 'MemberExpression',
            start: 549,
            end: 573,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 549,
              end: 565,
              name: 'jsxRuntimeModule'
            },
            property: {
              type: 'Identifier',
              start: 566,
              end: 573,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 575,
      end: 662,
      declaration: {
        type: 'CallExpression',
        start: 603,
        end: 661,
        optional: false,
        _rollupAnnotations: [ { end: 603, start: 590, type: 'pure' } ],
        callee: {
          type: 'MemberExpression',
          start: 603,
          end: 642,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 603,
            end: 618,
            name: 'commonjsHelpers'
          },
          property: {
            type: 'Identifier',
            start: 619,
            end: 642,
            name: 'getDefaultExportFromCjs'
          }
        },
        arguments: [
          {
            type: 'Identifier',
            start: 643,
            end: 660,
            name: 'jsxRuntimeExports'
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 663,
      end: 711,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 672,
          end: 708,
          local: {
            type: 'Identifier',
            start: 672,
            end: 689,
            name: 'jsxRuntimeExports'
          },
          exported: {
            type: 'Identifier',
            start: 693,
            end: 708,
            name: '__moduleExports'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 73,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 30,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 29,
          id: {
            type: 'Identifier',
            start: 4,
            end: 24,
            name: 'react_production_min'
          },
          init: {
            type: 'ObjectExpression',
            start: 27,
            end: 29,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 31,
      end: 73,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 39,
          end: 72,
          local: {
            type: 'Identifier',
            start: 39,
            end: 59,
            name: 'react_production_min'
          },
          exported: { type: 'Identifier', start: 63, end: 72, name: '__exports' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 41,
  body: [
    {
      type: 'ExportDefaultDeclaration',
      start: 0,
      end: 41,
      declaration: {
        type: 'Literal',
        start: 15,
        end: 41,
        value: '__VITE_ASSET__BvmkqU_J__',
        raw: '"__VITE_ASSET__BvmkqU_J__"'
      }
    }
  ],
  sourceType: 'module'
}
{ type: 'Program', start: 0, end: 0, body: [], sourceType: 'module' }
{
  type: 'Program',
  start: 0,
  end: 63,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 31,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 30,
          id: { type: 'Identifier', start: 4, end: 14, name: 'jsxRuntime' },
          init: {
            type: 'ObjectExpression',
            start: 17,
            end: 30,
            properties: [
              {
                type: 'Property',
                start: 18,
                end: 29,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 18,
                  end: 25,
                  name: 'exports'
                },
                value: {
                  type: 'ObjectExpression',
                  start: 27,
                  end: 29,
                  properties: []
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 32,
      end: 63,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 40,
          end: 62,
          local: {
            type: 'Identifier',
            start: 40,
            end: 50,
            name: 'jsxRuntime'
          },
          exported: { type: 'Identifier', start: 54, end: 62, name: '__module' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 137,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 137,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 136,
        value: '/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/react/cjs/react-jsx-runtime.production.min.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 93,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 40,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 39,
          id: {
            type: 'Identifier',
            start: 4,
            end: 34,
            name: 'reactJsxRuntime_production_min'
          },
          init: {
            type: 'ObjectExpression',
            start: 37,
            end: 39,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 41,
      end: 93,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 49,
          end: 92,
          local: {
            type: 'Identifier',
            start: 49,
            end: 79,
            name: 'reactJsxRuntime_production_min'
          },
          exported: { type: 'Identifier', start: 83, end: 92, name: '__exports' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 106,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 106,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 105,
        value: '/home/muiga/Dev/Work/translation/node_modules/react/index.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/react/index.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 49,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 48,
      specifiers: [],
      source: null,
      attributes: [],
      declaration: {
        type: 'VariableDeclaration',
        start: 7,
        end: 48,
        kind: 'const',
        declarations: [
          {
            type: 'VariableDeclarator',
            start: 13,
            end: 47,
            id: { type: 'Identifier', start: 13, end: 18, name: 'trans' },
            init: {
              type: 'ArrowFunctionExpression',
              start: 21,
              end: 47,
              async: false,
              expression: false,
              generator: false,
              params: [
                { type: 'Identifier', start: 22, end: 25, name: 'key' }
              ],
              body: {
                type: 'BlockStatement',
                start: 30,
                end: 47,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 34,
                    end: 45,
                    argument: {
                      type: 'Identifier',
                      start: 41,
                      end: 44,
                      name: 'key'
                    }
                  }
                ]
              },
              id: null
            }
          }
        ]
      }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 78,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 55,
      kind: 'const',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6,
          end: 54,
          id: { type: 'Identifier', start: 6, end: 11, name: 'Trans' },
          init: {
            type: 'ArrowFunctionExpression',
            start: 14,
            end: 54,
            async: false,
            expression: false,
            generator: false,
            params: [
              {
                type: 'ObjectPattern',
                start: 15,
                end: 27,
                properties: [
                  {
                    type: 'Property',
                    start: 17,
                    end: 25,
                    method: false,
                    shorthand: true,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 17,
                      end: 25,
                      name: 'children'
                    },
                    value: {
                      type: 'Identifier',
                      start: 17,
                      end: 25,
                      name: 'children'
                    },
                    kind: 'init'
                  }
                ]
              }
            ],
            body: {
              type: 'BlockStatement',
              start: 32,
              end: 54,
              body: [
                {
                  type: 'ReturnStatement',
                  start: 36,
                  end: 52,
                  argument: {
                    type: 'Identifier',
                    start: 43,
                    end: 51,
                    name: 'children'
                  }
                }
              ]
            },
            id: null
          }
        }
      ]
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 56,
      end: 77,
      declaration: { type: 'Identifier', start: 71, end: 76, name: 'Trans' }
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 4675,
  body: [
    {
      type: 'ImportDeclaration',
      start: 241,
      end: 296,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 248,
          end: 268,
          local: {
            type: 'Identifier',
            start: 253,
            end: 268,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 274,
        end: 295,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 297,
      end: 464,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 306,
          end: 343,
          imported: {
            type: 'Identifier',
            start: 306,
            end: 315,
            name: '__exports'
          },
          local: {
            type: 'Identifier',
            start: 319,
            end: 343,
            name: 'scheduler_production_min'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 351,
        end: 463,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js?commonjs-exports',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js?commonjs-exports"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 466,
      end: 4523,
      expression: {
        type: 'CallExpression',
        start: 467,
        end: 4521,
        optional: false,
        callee: {
          type: 'FunctionExpression',
          start: 467,
          end: 4494,
          async: false,
          generator: false,
          id: null,
          params: [
            {
              type: 'Identifier',
              start: 477,
              end: 484,
              name: 'exports'
            }
          ],
          body: {
            type: 'BlockStatement',
            start: 486,
            end: 4494,
            body: [
              {
                type: 'ExpressionStatement',
                start: 489,
                end: 502,
                directive: 'use strict',
                expression: {
                  type: 'Literal',
                  start: 489,
                  end: 501,
                  value: 'use strict',
                  raw: "'use strict'"
                }
              },
              {
                type: 'FunctionDeclaration',
                start: 502,
                end: 621,
                async: false,
                generator: false,
                id: { type: 'Identifier', start: 511, end: 512, name: 'f' },
                params: [
                  {
                    type: 'Identifier',
                    start: 513,
                    end: 514,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 515,
                    end: 516,
                    name: 'b'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 517,
                  end: 621,
                  body: [
                    {
                      type: 'VariableDeclaration',
                      start: 518,
                      end: 533,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 522,
                          end: 532,
                          id: {
                            type: 'Identifier',
                            start: 522,
                            end: 523,
                            name: 'c'
                          },
                          init: {
                            type: 'MemberExpression',
                            start: 524,
                            end: 532,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 524,
                              end: 525,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 526,
                              end: 532,
                              name: 'length'
                            }
                          }
                        }
                      ]
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 533,
                      end: 543,
                      expression: {
                        type: 'CallExpression',
                        start: 533,
                        end: 542,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 533,
                          end: 539,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 533,
                            end: 534,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 535,
                            end: 539,
                            name: 'push'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 540,
                            end: 541,
                            name: 'b'
                          }
                        ]
                      }
                    },
                    {
                      type: 'LabeledStatement',
                      start: 543,
                      end: 620,
                      label: {
                        type: 'Identifier',
                        start: 543,
                        end: 544,
                        name: 'a'
                      },
                      body: {
                        type: 'ForStatement',
                        start: 545,
                        end: 620,
                        init: null,
                        test: {
                          type: 'BinaryExpression',
                          start: 550,
                          end: 553,
                          operator: '<',
                          left: {
                            type: 'Literal',
                            start: 550,
                            end: 551,
                            raw: '0',
                            value: 0
                          },
                          right: {
                            type: 'Identifier',
                            start: 552,
                            end: 553,
                            name: 'c'
                          }
                        },
                        update: null,
                        body: {
                          type: 'BlockStatement',
                          start: 555,
                          end: 620,
                          body: [
                            {
                              type: 'VariableDeclaration',
                              start: 556,
                              end: 577,
                              kind: 'var',
                              declarations: [
                                {
                                  type: 'VariableDeclarator',
                                  start: 560,
                                  end: 569,
                                  id: {
                                    type: 'Identifier',
                                    start: 560,
                                    end: 561,
                                    name: 'd'
                                  },
                                  init: {
                                    type: 'BinaryExpression',
                                    start: 562,
                                    end: 569,
                                    operator: '>>>',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 562,
                                      end: 565,
                                      operator: '-',
                                      left: {
                                        type: 'Identifier',
                                        start: 562,
                                        end: 563,
                                        name: 'c'
                                      },
                                      right: {
                                        type: 'Literal',
                                        start: 564,
                                        end: 565,
                                        raw: '1',
                                        value: 1
                                      }
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 568,
                                      end: 569,
                                      raw: '1',
                                      value: 1
                                    }
                                  }
                                },
                                {
                                  type: 'VariableDeclarator',
                                  start: 570,
                                  end: 576,
                                  id: {
                                    type: 'Identifier',
                                    start: 570,
                                    end: 571,
                                    name: 'e'
                                  },
                                  init: {
                                    type: 'MemberExpression',
                                    start: 572,
                                    end: 576,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 572,
                                      end: 573,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 574,
                                      end: 575,
                                      name: 'd'
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              type: 'IfStatement',
                              start: 577,
                              end: 619,
                              test: {
                                type: 'BinaryExpression',
                                start: 580,
                                end: 588,
                                operator: '<',
                                left: {
                                  type: 'Literal',
                                  start: 580,
                                  end: 581,
                                  raw: '0',
                                  value: 0
                                },
                                right: {
                                  type: 'CallExpression',
                                  start: 582,
                                  end: 588,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 582,
                                    end: 583,
                                    name: 'g'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 584,
                                      end: 585,
                                      name: 'e'
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 586,
                                      end: 587,
                                      name: 'b'
                                    }
                                  ]
                                }
                              },
                              consequent: {
                                type: 'ExpressionStatement',
                                start: 589,
                                end: 607,
                                expression: {
                                  type: 'SequenceExpression',
                                  start: 589,
                                  end: 606,
                                  expressions: [
                                    {
                                      type: 'AssignmentExpression',
                                      start: 589,
                                      end: 595,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 589,
                                        end: 593,
                                        computed: true,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 589,
                                          end: 590,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 591,
                                          end: 592,
                                          name: 'd'
                                        }
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 594,
                                        end: 595,
                                        name: 'b'
                                      }
                                    },
                                    {
                                      type: 'AssignmentExpression',
                                      start: 596,
                                      end: 602,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 596,
                                        end: 600,
                                        computed: true,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 596,
                                          end: 597,
                                          name: 'a'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 598,
                                          end: 599,
                                          name: 'c'
                                        }
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 601,
                                        end: 602,
                                        name: 'e'
                                      }
                                    },
                                    {
                                      type: 'AssignmentExpression',
                                      start: 603,
                                      end: 606,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 603,
                                        end: 604,
                                        name: 'c'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 605,
                                        end: 606,
                                        name: 'd'
                                      }
                                    }
                                  ]
                                }
                              },
                              alternate: {
                                type: 'BreakStatement',
                                start: 612,
                                end: 619,
                                label: {
                                  type: 'Identifier',
                                  start: 618,
                                  end: 619,
                                  name: 'a'
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 621,
                end: 665,
                async: false,
                generator: false,
                id: { type: 'Identifier', start: 630, end: 631, name: 'h' },
                params: [
                  {
                    type: 'Identifier',
                    start: 632,
                    end: 633,
                    name: 'a'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 634,
                  end: 665,
                  body: [
                    {
                      type: 'ReturnStatement',
                      start: 635,
                      end: 664,
                      argument: {
                        type: 'ConditionalExpression',
                        start: 642,
                        end: 664,
                        test: {
                          type: 'BinaryExpression',
                          start: 642,
                          end: 654,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 642,
                            end: 643,
                            raw: '0',
                            value: 0
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 646,
                            end: 654,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 646,
                              end: 647,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 648,
                              end: 654,
                              name: 'length'
                            }
                          }
                        },
                        consequent: {
                          type: 'Literal',
                          start: 655,
                          end: 659,
                          raw: 'null',
                          value: null
                        },
                        alternate: {
                          type: 'MemberExpression',
                          start: 660,
                          end: 664,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 660,
                            end: 661,
                            name: 'a'
                          },
                          property: {
                            type: 'Literal',
                            start: 662,
                            end: 663,
                            raw: '0',
                            value: 0
                          }
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 665,
                end: 949,
                async: false,
                generator: false,
                id: { type: 'Identifier', start: 674, end: 675, name: 'k' },
                params: [
                  {
                    type: 'Identifier',
                    start: 676,
                    end: 677,
                    name: 'a'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 678,
                  end: 949,
                  body: [
                    {
                      type: 'IfStatement',
                      start: 679,
                      end: 707,
                      test: {
                        type: 'BinaryExpression',
                        start: 682,
                        end: 694,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 682,
                          end: 683,
                          raw: '0',
                          value: 0
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 686,
                          end: 694,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 686,
                            end: 687,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 688,
                            end: 694,
                            name: 'length'
                          }
                        }
                      },
                      consequent: {
                        type: 'ReturnStatement',
                        start: 695,
                        end: 707,
                        argument: {
                          type: 'Literal',
                          start: 702,
                          end: 706,
                          raw: 'null',
                          value: null
                        }
                      },
                      alternate: null
                    },
                    {
                      type: 'VariableDeclaration',
                      start: 707,
                      end: 728,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 711,
                          end: 717,
                          id: {
                            type: 'Identifier',
                            start: 711,
                            end: 712,
                            name: 'b'
                          },
                          init: {
                            type: 'MemberExpression',
                            start: 713,
                            end: 717,
                            computed: true,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 713,
                              end: 714,
                              name: 'a'
                            },
                            property: {
                              type: 'Literal',
                              start: 715,
                              end: 716,
                              raw: '0',
                              value: 0
                            }
                          }
                        },
                        {
                          type: 'VariableDeclarator',
                          start: 718,
                          end: 727,
                          id: {
                            type: 'Identifier',
                            start: 718,
                            end: 719,
                            name: 'c'
                          },
                          init: {
                            type: 'CallExpression',
                            start: 720,
                            end: 727,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 720,
                              end: 725,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 720,
                                end: 721,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 722,
                                end: 725,
                                name: 'pop'
                              }
                            },
                            arguments: []
                          }
                        }
                      ]
                    },
                    {
                      type: 'IfStatement',
                      start: 728,
                      end: 940,
                      test: {
                        type: 'BinaryExpression',
                        start: 731,
                        end: 736,
                        operator: '!==',
                        left: {
                          type: 'Identifier',
                          start: 731,
                          end: 732,
                          name: 'c'
                        },
                        right: {
                          type: 'Identifier',
                          start: 735,
                          end: 736,
                          name: 'b'
                        }
                      },
                      consequent: {
                        type: 'BlockStatement',
                        start: 737,
                        end: 940,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 738,
                            end: 745,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 738,
                              end: 744,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 738,
                                end: 742,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 738,
                                  end: 739,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Literal',
                                  start: 740,
                                  end: 741,
                                  raw: '0',
                                  value: 0
                                }
                              },
                              right: {
                                type: 'Identifier',
                                start: 743,
                                end: 744,
                                name: 'c'
                              }
                            }
                          },
                          {
                            type: 'LabeledStatement',
                            start: 745,
                            end: 939,
                            label: {
                              type: 'Identifier',
                              start: 745,
                              end: 746,
                              name: 'a'
                            },
                            body: {
                              type: 'ForStatement',
                              start: 747,
                              end: 939,
                              init: {
                                type: 'VariableDeclaration',
                                start: 751,
                                end: 777,
                                kind: 'var',
                                declarations: [
                                  {
                                    type: 'VariableDeclarator',
                                    start: 755,
                                    end: 758,
                                    id: {
                                      type: 'Identifier',
                                      start: 755,
                                      end: 756,
                                      name: 'd'
                                    },
                                    init: {
                                      type: 'Literal',
                                      start: 757,
                                      end: 758,
                                      raw: '0',
                                      value: 0
                                    }
                                  },
                                  {
                                    type: 'VariableDeclarator',
                                    start: 759,
                                    end: 769,
                                    id: {
                                      type: 'Identifier',
                                      start: 759,
                                      end: 760,
                                      name: 'e'
                                    },
                                    init: {
                                      type: 'MemberExpression',
                                      start: 761,
                                      end: 769,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 761,
                                        end: 762,
                                        name: 'a'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 763,
                                        end: 769,
                                        name: 'length'
                                      }
                                    }
                                  },
                                  {
                                    type: 'VariableDeclarator',
                                    start: 770,
                                    end: 777,
                                    id: {
                                      type: 'Identifier',
                                      start: 770,
                                      end: 771,
                                      name: 'w'
                                    },
                                    init: {
                                      type: 'BinaryExpression',
                                      start: 772,
                                      end: 777,
                                      operator: '>>>',
                                      left: {
                                        type: 'Identifier',
                                        start: 772,
                                        end: 773,
                                        name: 'e'
                                      },
                                      right: {
                                        type: 'Literal',
                                        start: 776,
                                        end: 777,
                                        raw: '1',
                                        value: 1
                                      }
                                    }
                                  }
                                ]
                              },
                              test: {
                                type: 'BinaryExpression',
                                start: 778,
                                end: 781,
                                operator: '<',
                                left: {
                                  type: 'Identifier',
                                  start: 778,
                                  end: 779,
                                  name: 'd'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 780,
                                  end: 781,
                                  name: 'w'
                                }
                              },
                              update: null,
                              body: {
                                type: 'BlockStatement',
                                start: 783,
                                end: 939,
                                body: [
                                  {
                                    type: 'VariableDeclaration',
                                    start: 784,
                                    end: 820,
                                    kind: 'var',
                                    declarations: [
                                      {
                                        type: 'VariableDeclarator',
                                        start: 788,
                                        end: 799,
                                        id: {
                                          type: 'Identifier',
                                          start: 788,
                                          end: 789,
                                          name: 'm'
                                        },
                                        init: {
                                          type: 'BinaryExpression',
                                          start: 790,
                                          end: 799,
                                          operator: '-',
                                          left: {
                                            type: 'BinaryExpression',
                                            start: 790,
                                            end: 797,
                                            operator: '*',
                                            left: {
                                              type: 'Literal',
                                              start: 790,
                                              end: 791,
                                              raw: '2',
                                              value: 2
                                            },
                                            right: {
                                              type: 'BinaryExpression',
                                              start: 793,
                                              end: 796,
                                              operator: '+',
                                              left: {
                                                type: 'Identifier',
                                                start: 793,
                                                end: 794,
                                                name: 'd'
                                              },
                                              right: {
                                                type: 'Literal',
                                                start: 795,
                                                end: 796,
                                                raw: '1',
                                                value: 1
                                              }
                                            }
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 798,
                                            end: 799,
                                            raw: '1',
                                            value: 1
                                          }
                                        }
                                      },
                                      {
                                        type: 'VariableDeclarator',
                                        start: 800,
                                        end: 806,
                                        id: {
                                          type: 'Identifier',
                                          start: 800,
                                          end: 801,
                                          name: 'C'
                                        },
                                        init: {
                                          type: 'MemberExpression',
                                          start: 802,
                                          end: 806,
                                          computed: true,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 802,
                                            end: 803,
                                            name: 'a'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 804,
                                            end: 805,
                                            name: 'm'
                                          }
                                        }
                                      },
                                      {
                                        type: 'VariableDeclarator',
                                        start: 807,
                                        end: 812,
                                        id: {
                                          type: 'Identifier',
                                          start: 807,
                                          end: 808,
                                          name: 'n'
                                        },
                                        init: {
                                          type: 'BinaryExpression',
                                          start: 809,
                                          end: 812,
                                          operator: '+',
                                          left: {
                                            type: 'Identifier',
                                            start: 809,
                                            end: 810,
                                            name: 'm'
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 811,
                                            end: 812,
                                            raw: '1',
                                            value: 1
                                          }
                                        }
                                      },
                                      {
                                        type: 'VariableDeclarator',
                                        start: 813,
                                        end: 819,
                                        id: {
                                          type: 'Identifier',
                                          start: 813,
                                          end: 814,
                                          name: 'x'
                                        },
                                        init: {
                                          type: 'MemberExpression',
                                          start: 815,
                                          end: 819,
                                          computed: true,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 815,
                                            end: 816,
                                            name: 'a'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 817,
                                            end: 818,
                                            name: 'n'
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    type: 'IfStatement',
                                    start: 820,
                                    end: 938,
                                    test: {
                                      type: 'BinaryExpression',
                                      start: 823,
                                      end: 831,
                                      operator: '>',
                                      left: {
                                        type: 'Literal',
                                        start: 823,
                                        end: 824,
                                        raw: '0',
                                        value: 0
                                      },
                                      right: {
                                        type: 'CallExpression',
                                        start: 825,
                                        end: 831,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 825,
                                          end: 826,
                                          name: 'g'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 827,
                                            end: 828,
                                            name: 'C'
                                          },
                                          {
                                            type: 'Identifier',
                                            start: 829,
                                            end: 830,
                                            name: 'c'
                                          }
                                        ]
                                      }
                                    },
                                    consequent: {
                                      type: 'ExpressionStatement',
                                      start: 832,
                                      end: 886,
                                      expression: {
                                        type: 'ConditionalExpression',
                                        start: 832,
                                        end: 885,
                                        test: {
                                          type: 'LogicalExpression',
                                          start: 832,
                                          end: 845,
                                          operator: '&&',
                                          left: {
                                            type: 'BinaryExpression',
                                            start: 832,
                                            end: 835,
                                            operator: '<',
                                            left: {
                                              type: 'Identifier',
                                              start: 832,
                                              end: 833,
                                              name: 'n'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 834,
                                              end: 835,
                                              name: 'e'
                                            }
                                          },
                                          right: {
                                            type: 'BinaryExpression',
                                            start: 837,
                                            end: 845,
                                            operator: '>',
                                            left: {
                                              type: 'Literal',
                                              start: 837,
                                              end: 838,
                                              raw: '0',
                                              value: 0
                                            },
                                            right: {
                                              type: 'CallExpression',
                                              start: 839,
                                              end: 845,
                                              optional: false,
                                              callee: {
                                                type: 'Identifier',
                                                start: 839,
                                                end: 840,
                                                name: 'g'
                                              },
                                              arguments: [
                                                {
                                                  type: 'Identifier',
                                                  start: 841,
                                                  end: 842,
                                                  name: 'x'
                                                },
                                                {
                                                  type: 'Identifier',
                                                  start: 843,
                                                  end: 844,
                                                  name: 'C'
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        consequent: {
                                          type: 'SequenceExpression',
                                          start: 847,
                                          end: 864,
                                          expressions: [
                                            {
                                              type: 'AssignmentExpression',
                                              start: 847,
                                              end: 853,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 847,
                                                end: 851,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 847,
                                                  end: 848,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 849,
                                                  end: 850,
                                                  name: 'd'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 852,
                                                end: 853,
                                                name: 'x'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 854,
                                              end: 860,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 854,
                                                end: 858,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 854,
                                                  end: 855,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 856,
                                                  end: 857,
                                                  name: 'n'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 859,
                                                end: 860,
                                                name: 'c'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 861,
                                              end: 864,
                                              operator: '=',
                                              left: {
                                                type: 'Identifier',
                                                start: 861,
                                                end: 862,
                                                name: 'd'
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 863,
                                                end: 864,
                                                name: 'n'
                                              }
                                            }
                                          ]
                                        },
                                        alternate: {
                                          type: 'SequenceExpression',
                                          start: 867,
                                          end: 884,
                                          expressions: [
                                            {
                                              type: 'AssignmentExpression',
                                              start: 867,
                                              end: 873,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 867,
                                                end: 871,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 867,
                                                  end: 868,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 869,
                                                  end: 870,
                                                  name: 'd'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 872,
                                                end: 873,
                                                name: 'C'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 874,
                                              end: 880,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 874,
                                                end: 878,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 874,
                                                  end: 875,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 876,
                                                  end: 877,
                                                  name: 'm'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 879,
                                                end: 880,
                                                name: 'c'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 881,
                                              end: 884,
                                              operator: '=',
                                              left: {
                                                type: 'Identifier',
                                                start: 881,
                                                end: 882,
                                                name: 'd'
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 883,
                                                end: 884,
                                                name: 'm'
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    alternate: {
                                      type: 'IfStatement',
                                      start: 891,
                                      end: 938,
                                      test: {
                                        type: 'LogicalExpression',
                                        start: 894,
                                        end: 907,
                                        operator: '&&',
                                        left: {
                                          type: 'BinaryExpression',
                                          start: 894,
                                          end: 897,
                                          operator: '<',
                                          left: {
                                            type: 'Identifier',
                                            start: 894,
                                            end: 895,
                                            name: 'n'
                                          },
                                          right: {
                                            type: 'Identifier',
                                            start: 896,
                                            end: 897,
                                            name: 'e'
                                          }
                                        },
                                        right: {
                                          type: 'BinaryExpression',
                                          start: 899,
                                          end: 907,
                                          operator: '>',
                                          left: {
                                            type: 'Literal',
                                            start: 899,
                                            end: 900,
                                            raw: '0',
                                            value: 0
                                          },
                                          right: {
                                            type: 'CallExpression',
                                            start: 901,
                                            end: 907,
                                            optional: false,
                                            callee: {
                                              type: 'Identifier',
                                              start: 901,
                                              end: 902,
                                              name: 'g'
                                            },
                                            arguments: [
                                              {
                                                type: 'Identifier',
                                                start: 903,
                                                end: 904,
                                                name: 'x'
                                              },
                                              {
                                                type: 'Identifier',
                                                start: 905,
                                                end: 906,
                                                name: 'c'
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      consequent: {
                                        type: 'ExpressionStatement',
                                        start: 908,
                                        end: 926,
                                        expression: {
                                          type: 'SequenceExpression',
                                          start: 908,
                                          end: 925,
                                          expressions: [
                                            {
                                              type: 'AssignmentExpression',
                                              start: 908,
                                              end: 914,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 908,
                                                end: 912,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 908,
                                                  end: 909,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 910,
                                                  end: 911,
                                                  name: 'd'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 913,
                                                end: 914,
                                                name: 'x'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 915,
                                              end: 921,
                                              operator: '=',
                                              left: {
                                                type: 'MemberExpression',
                                                start: 915,
                                                end: 919,
                                                computed: true,
                                                optional: false,
                                                object: {
                                                  type: 'Identifier',
                                                  start: 915,
                                                  end: 916,
                                                  name: 'a'
                                                },
                                                property: {
                                                  type: 'Identifier',
                                                  start: 917,
                                                  end: 918,
                                                  name: 'n'
                                                }
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 920,
                                                end: 921,
                                                name: 'c'
                                              }
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 922,
                                              end: 925,
                                              operator: '=',
                                              left: {
                                                type: 'Identifier',
                                                start: 922,
                                                end: 923,
                                                name: 'd'
                                              },
                                              right: {
                                                type: 'Identifier',
                                                start: 924,
                                                end: 925,
                                                name: 'n'
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      alternate: {
                                        type: 'BreakStatement',
                                        start: 931,
                                        end: 938,
                                        label: {
                                          type: 'Identifier',
                                          start: 937,
                                          end: 938,
                                          name: 'a'
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      alternate: null
                    },
                    {
                      type: 'ReturnStatement',
                      start: 940,
                      end: 948,
                      argument: {
                        type: 'Identifier',
                        start: 947,
                        end: 948,
                        name: 'b'
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 951,
                end: 1022,
                async: false,
                generator: false,
                id: { type: 'Identifier', start: 960, end: 961, name: 'g' },
                params: [
                  {
                    type: 'Identifier',
                    start: 962,
                    end: 963,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 964,
                    end: 965,
                    name: 'b'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 966,
                  end: 1022,
                  body: [
                    {
                      type: 'VariableDeclaration',
                      start: 967,
                      end: 997,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 971,
                          end: 996,
                          id: {
                            type: 'Identifier',
                            start: 971,
                            end: 972,
                            name: 'c'
                          },
                          init: {
                            type: 'BinaryExpression',
                            start: 973,
                            end: 996,
                            operator: '-',
                            left: {
                              type: 'MemberExpression',
                              start: 973,
                              end: 984,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 973,
                                end: 974,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 975,
                                end: 984,
                                name: 'sortIndex'
                              }
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 985,
                              end: 996,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 985,
                                end: 986,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 987,
                                end: 996,
                                name: 'sortIndex'
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      type: 'ReturnStatement',
                      start: 997,
                      end: 1021,
                      argument: {
                        type: 'ConditionalExpression',
                        start: 1004,
                        end: 1021,
                        test: {
                          type: 'BinaryExpression',
                          start: 1004,
                          end: 1009,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 1004,
                            end: 1005,
                            raw: '0',
                            value: 0
                          },
                          right: {
                            type: 'Identifier',
                            start: 1008,
                            end: 1009,
                            name: 'c'
                          }
                        },
                        consequent: {
                          type: 'Identifier',
                          start: 1010,
                          end: 1011,
                          name: 'c'
                        },
                        alternate: {
                          type: 'BinaryExpression',
                          start: 1012,
                          end: 1021,
                          operator: '-',
                          left: {
                            type: 'MemberExpression',
                            start: 1012,
                            end: 1016,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 1012,
                              end: 1013,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 1014,
                              end: 1016,
                              name: 'id'
                            }
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 1017,
                            end: 1021,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 1017,
                              end: 1018,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 1019,
                              end: 1021,
                              name: 'id'
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'IfStatement',
                start: 1022,
                end: 1235,
                test: {
                  type: 'LogicalExpression',
                  start: 1025,
                  end: 1091,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 1025,
                    end: 1054,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 1025,
                      end: 1033,
                      value: 'object',
                      raw: '"object"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 1036,
                      end: 1054,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 1043,
                        end: 1054,
                        name: 'performance'
                      },
                      prefix: true
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 1056,
                    end: 1091,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 1056,
                      end: 1066,
                      value: 'function',
                      raw: '"function"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 1069,
                      end: 1091,
                      operator: 'typeof',
                      argument: {
                        type: 'MemberExpression',
                        start: 1076,
                        end: 1091,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 1076,
                          end: 1087,
                          name: 'performance'
                        },
                        property: {
                          type: 'Identifier',
                          start: 1088,
                          end: 1091,
                          name: 'now'
                        }
                      },
                      prefix: true
                    }
                  }
                },
                consequent: {
                  type: 'BlockStatement',
                  start: 1092,
                  end: 1159,
                  body: [
                    {
                      type: 'VariableDeclaration',
                      start: 1093,
                      end: 1111,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 1097,
                          end: 1110,
                          id: {
                            type: 'Identifier',
                            start: 1097,
                            end: 1098,
                            name: 'l'
                          },
                          init: {
                            type: 'Identifier',
                            start: 1099,
                            end: 1110,
                            name: 'performance'
                          }
                        }
                      ]
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 1111,
                      end: 1158,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 1111,
                        end: 1158,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 1111,
                          end: 1131,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1111,
                            end: 1118,
                            name: 'exports'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1119,
                            end: 1131,
                            name: 'unstable_now'
                          }
                        },
                        right: {
                          type: 'FunctionExpression',
                          start: 1132,
                          end: 1158,
                          async: false,
                          generator: false,
                          id: null,
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 1142,
                            end: 1158,
                            body: [
                              {
                                type: 'ReturnStatement',
                                start: 1143,
                                end: 1157,
                                argument: {
                                  type: 'CallExpression',
                                  start: 1150,
                                  end: 1157,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 1150,
                                    end: 1155,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 1150,
                                      end: 1151,
                                      name: 'l'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 1152,
                                      end: 1155,
                                      name: 'now'
                                    }
                                  },
                                  arguments: []
                                }
                              }
                            ]
                          },
                          expression: false
                        }
                      }
                    }
                  ]
                },
                alternate: {
                  type: 'BlockStatement',
                  start: 1163,
                  end: 1235,
                  body: [
                    {
                      type: 'VariableDeclaration',
                      start: 1164,
                      end: 1185,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 1168,
                          end: 1174,
                          id: {
                            type: 'Identifier',
                            start: 1168,
                            end: 1169,
                            name: 'p'
                          },
                          init: {
                            type: 'Identifier',
                            start: 1170,
                            end: 1174,
                            name: 'Date'
                          }
                        },
                        {
                          type: 'VariableDeclarator',
                          start: 1175,
                          end: 1184,
                          id: {
                            type: 'Identifier',
                            start: 1175,
                            end: 1176,
                            name: 'q'
                          },
                          init: {
                            type: 'CallExpression',
                            start: 1177,
                            end: 1184,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 1177,
                              end: 1182,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 1177,
                                end: 1178,
                                name: 'p'
                              },
                              property: {
                                type: 'Identifier',
                                start: 1179,
                                end: 1182,
                                name: 'now'
                              }
                            },
                            arguments: []
                          }
                        }
                      ]
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 1185,
                      end: 1234,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 1185,
                        end: 1234,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 1185,
                          end: 1205,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1185,
                            end: 1192,
                            name: 'exports'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1193,
                            end: 1205,
                            name: 'unstable_now'
                          }
                        },
                        right: {
                          type: 'FunctionExpression',
                          start: 1206,
                          end: 1234,
                          async: false,
                          generator: false,
                          id: null,
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 1216,
                            end: 1234,
                            body: [
                              {
                                type: 'ReturnStatement',
                                start: 1217,
                                end: 1233,
                                argument: {
                                  type: 'BinaryExpression',
                                  start: 1224,
                                  end: 1233,
                                  operator: '-',
                                  left: {
                                    type: 'CallExpression',
                                    start: 1224,
                                    end: 1231,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 1224,
                                      end: 1229,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 1224,
                                        end: 1225,
                                        name: 'p'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 1226,
                                        end: 1229,
                                        name: 'now'
                                      }
                                    },
                                    arguments: []
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 1232,
                                    end: 1233,
                                    name: 'q'
                                  }
                                }
                              }
                            ]
                          },
                          expression: false
                        }
                      }
                    }
                  ]
                }
              },
              {
                type: 'VariableDeclaration',
                start: 1235,
                end: 1435,
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    start: 1239,
                    end: 1243,
                    id: {
                      type: 'Identifier',
                      start: 1239,
                      end: 1240,
                      name: 'r'
                    },
                    init: {
                      type: 'ArrayExpression',
                      start: 1241,
                      end: 1243,
                      elements: []
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1244,
                    end: 1248,
                    id: {
                      type: 'Identifier',
                      start: 1244,
                      end: 1245,
                      name: 't'
                    },
                    init: {
                      type: 'ArrayExpression',
                      start: 1246,
                      end: 1248,
                      elements: []
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1249,
                    end: 1252,
                    id: {
                      type: 'Identifier',
                      start: 1249,
                      end: 1250,
                      name: 'u'
                    },
                    init: {
                      type: 'Literal',
                      start: 1251,
                      end: 1252,
                      raw: '1',
                      value: 1
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1253,
                    end: 1259,
                    id: {
                      type: 'Identifier',
                      start: 1253,
                      end: 1254,
                      name: 'v'
                    },
                    init: {
                      type: 'Literal',
                      start: 1255,
                      end: 1259,
                      raw: 'null',
                      value: null
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1260,
                    end: 1263,
                    id: {
                      type: 'Identifier',
                      start: 1260,
                      end: 1261,
                      name: 'y'
                    },
                    init: {
                      type: 'Literal',
                      start: 1262,
                      end: 1263,
                      raw: '3',
                      value: 3
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1264,
                    end: 1268,
                    id: {
                      type: 'Identifier',
                      start: 1264,
                      end: 1265,
                      name: 'z'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 1266,
                      end: 1268,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 1267,
                        end: 1268,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1269,
                    end: 1273,
                    id: {
                      type: 'Identifier',
                      start: 1269,
                      end: 1270,
                      name: 'A'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 1271,
                      end: 1273,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 1272,
                        end: 1273,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1274,
                    end: 1278,
                    id: {
                      type: 'Identifier',
                      start: 1274,
                      end: 1275,
                      name: 'B'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 1276,
                      end: 1278,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 1277,
                        end: 1278,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1279,
                    end: 1327,
                    id: {
                      type: 'Identifier',
                      start: 1279,
                      end: 1280,
                      name: 'D'
                    },
                    init: {
                      type: 'ConditionalExpression',
                      start: 1281,
                      end: 1327,
                      test: {
                        type: 'BinaryExpression',
                        start: 1281,
                        end: 1311,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 1281,
                          end: 1291,
                          value: 'function',
                          raw: '"function"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1294,
                          end: 1311,
                          operator: 'typeof',
                          argument: {
                            type: 'Identifier',
                            start: 1301,
                            end: 1311,
                            name: 'setTimeout'
                          },
                          prefix: true
                        }
                      },
                      consequent: {
                        type: 'Identifier',
                        start: 1312,
                        end: 1322,
                        name: 'setTimeout'
                      },
                      alternate: {
                        type: 'Literal',
                        start: 1323,
                        end: 1327,
                        raw: 'null',
                        value: null
                      }
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1328,
                    end: 1380,
                    id: {
                      type: 'Identifier',
                      start: 1328,
                      end: 1329,
                      name: 'E'
                    },
                    init: {
                      type: 'ConditionalExpression',
                      start: 1330,
                      end: 1380,
                      test: {
                        type: 'BinaryExpression',
                        start: 1330,
                        end: 1362,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 1330,
                          end: 1340,
                          value: 'function',
                          raw: '"function"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1343,
                          end: 1362,
                          operator: 'typeof',
                          argument: {
                            type: 'Identifier',
                            start: 1350,
                            end: 1362,
                            name: 'clearTimeout'
                          },
                          prefix: true
                        }
                      },
                      consequent: {
                        type: 'Identifier',
                        start: 1363,
                        end: 1375,
                        name: 'clearTimeout'
                      },
                      alternate: {
                        type: 'Literal',
                        start: 1376,
                        end: 1380,
                        raw: 'null',
                        value: null
                      }
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 1381,
                    end: 1434,
                    id: {
                      type: 'Identifier',
                      start: 1381,
                      end: 1382,
                      name: 'F'
                    },
                    init: {
                      type: 'ConditionalExpression',
                      start: 1383,
                      end: 1434,
                      test: {
                        type: 'BinaryExpression',
                        start: 1383,
                        end: 1416,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 1383,
                          end: 1394,
                          value: 'undefined',
                          raw: '"undefined"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1397,
                          end: 1416,
                          operator: 'typeof',
                          argument: {
                            type: 'Identifier',
                            start: 1404,
                            end: 1416,
                            name: 'setImmediate'
                          },
                          prefix: true
                        }
                      },
                      consequent: {
                        type: 'Identifier',
                        start: 1417,
                        end: 1429,
                        name: 'setImmediate'
                      },
                      alternate: {
                        type: 'Literal',
                        start: 1430,
                        end: 1434,
                        raw: 'null',
                        value: null
                      }
                    }
                  }
                ]
              },
              {
                type: 'ExpressionStatement',
                start: 1437,
                end: 1609,
                expression: {
                  type: 'LogicalExpression',
                  start: 1437,
                  end: 1608,
                  operator: '&&',
                  left: {
                    type: 'LogicalExpression',
                    start: 1437,
                    end: 1544,
                    operator: '&&',
                    left: {
                      type: 'LogicalExpression',
                      start: 1437,
                      end: 1498,
                      operator: '&&',
                      left: {
                        type: 'BinaryExpression',
                        start: 1437,
                        end: 1467,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 1437,
                          end: 1448,
                          value: 'undefined',
                          raw: '"undefined"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1451,
                          end: 1467,
                          operator: 'typeof',
                          argument: {
                            type: 'Identifier',
                            start: 1458,
                            end: 1467,
                            name: 'navigator'
                          },
                          prefix: true
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 1469,
                        end: 1498,
                        operator: '!==',
                        left: {
                          type: 'UnaryExpression',
                          start: 1469,
                          end: 1475,
                          operator: 'void',
                          argument: {
                            type: 'Literal',
                            start: 1474,
                            end: 1475,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 1478,
                          end: 1498,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1478,
                            end: 1487,
                            name: 'navigator'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1488,
                            end: 1498,
                            name: 'scheduling'
                          }
                        }
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 1500,
                      end: 1544,
                      operator: '!==',
                      left: {
                        type: 'UnaryExpression',
                        start: 1500,
                        end: 1506,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 1505,
                          end: 1506,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 1509,
                        end: 1544,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 1509,
                          end: 1529,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1509,
                            end: 1518,
                            name: 'navigator'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1519,
                            end: 1529,
                            name: 'scheduling'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 1530,
                          end: 1544,
                          name: 'isInputPending'
                        }
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    start: 1546,
                    end: 1608,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 1546,
                      end: 1586,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 1546,
                        end: 1581,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 1546,
                          end: 1566,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 1546,
                            end: 1555,
                            name: 'navigator'
                          },
                          property: {
                            type: 'Identifier',
                            start: 1556,
                            end: 1566,
                            name: 'scheduling'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 1567,
                          end: 1581,
                          name: 'isInputPending'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 1582,
                        end: 1586,
                        name: 'bind'
                      }
                    },
                    arguments: [
                      {
                        type: 'MemberExpression',
                        start: 1587,
                        end: 1607,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 1587,
                          end: 1596,
                          name: 'navigator'
                        },
                        property: {
                          type: 'Identifier',
                          start: 1597,
                          end: 1607,
                          name: 'scheduling'
                        }
                      }
                    ]
                  }
                }
              },
              {
                type: 'FunctionDeclaration',
                start: 1609,
                end: 1758,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 1618,
                  end: 1619,
                  name: 'G'
                },
                params: [
                  {
                    type: 'Identifier',
                    start: 1620,
                    end: 1621,
                    name: 'a'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 1622,
                  end: 1758,
                  body: [
                    {
                      type: 'ForStatement',
                      start: 1623,
                      end: 1757,
                      init: {
                        type: 'VariableDeclaration',
                        start: 1627,
                        end: 1637,
                        kind: 'var',
                        declarations: [
                          {
                            type: 'VariableDeclarator',
                            start: 1631,
                            end: 1637,
                            id: {
                              type: 'Identifier',
                              start: 1631,
                              end: 1632,
                              name: 'b'
                            },
                            init: {
                              type: 'CallExpression',
                              start: 1633,
                              end: 1637,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 1633,
                                end: 1634,
                                name: 'h'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 1635,
                                  end: 1636,
                                  name: 't'
                                }
                              ]
                            }
                          }
                        ]
                      },
                      test: {
                        type: 'BinaryExpression',
                        start: 1638,
                        end: 1646,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 1638,
                          end: 1642,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'Identifier',
                          start: 1645,
                          end: 1646,
                          name: 'b'
                        }
                      },
                      update: null,
                      body: {
                        type: 'BlockStatement',
                        start: 1648,
                        end: 1757,
                        body: [
                          {
                            type: 'IfStatement',
                            start: 1649,
                            end: 1750,
                            test: {
                              type: 'BinaryExpression',
                              start: 1652,
                              end: 1669,
                              operator: '===',
                              left: {
                                type: 'Literal',
                                start: 1652,
                                end: 1656,
                                raw: 'null',
                                value: null
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 1659,
                                end: 1669,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 1659,
                                  end: 1660,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 1661,
                                  end: 1669,
                                  name: 'callback'
                                }
                              }
                            },
                            consequent: {
                              type: 'ExpressionStatement',
                              start: 1670,
                              end: 1675,
                              expression: {
                                type: 'CallExpression',
                                start: 1670,
                                end: 1674,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 1670,
                                  end: 1671,
                                  name: 'k'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 1672,
                                    end: 1673,
                                    name: 't'
                                  }
                                ]
                              }
                            },
                            alternate: {
                              type: 'IfStatement',
                              start: 1680,
                              end: 1750,
                              test: {
                                type: 'BinaryExpression',
                                start: 1683,
                                end: 1697,
                                operator: '<=',
                                left: {
                                  type: 'MemberExpression',
                                  start: 1683,
                                  end: 1694,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 1683,
                                    end: 1684,
                                    name: 'b'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 1685,
                                    end: 1694,
                                    name: 'startTime'
                                  }
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 1696,
                                  end: 1697,
                                  name: 'a'
                                }
                              },
                              consequent: {
                                type: 'ExpressionStatement',
                                start: 1698,
                                end: 1739,
                                expression: {
                                  type: 'SequenceExpression',
                                  start: 1698,
                                  end: 1738,
                                  expressions: [
                                    {
                                      type: 'CallExpression',
                                      start: 1698,
                                      end: 1702,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 1698,
                                        end: 1699,
                                        name: 'k'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 1700,
                                          end: 1701,
                                          name: 't'
                                        }
                                      ]
                                    },
                                    {
                                      type: 'AssignmentExpression',
                                      start: 1703,
                                      end: 1731,
                                      operator: '=',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 1703,
                                        end: 1714,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 1703,
                                          end: 1704,
                                          name: 'b'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 1705,
                                          end: 1714,
                                          name: 'sortIndex'
                                        }
                                      },
                                      right: {
                                        type: 'MemberExpression',
                                        start: 1715,
                                        end: 1731,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 1715,
                                          end: 1716,
                                          name: 'b'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 1717,
                                          end: 1731,
                                          name: 'expirationTime'
                                        }
                                      }
                                    },
                                    {
                                      type: 'CallExpression',
                                      start: 1732,
                                      end: 1738,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 1732,
                                        end: 1733,
                                        name: 'f'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 1734,
                                          end: 1735,
                                          name: 'r'
                                        },
                                        {
                                          type: 'Identifier',
                                          start: 1736,
                                          end: 1737,
                                          name: 'b'
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              alternate: {
                                type: 'BreakStatement',
                                start: 1744,
                                end: 1750,
                                label: null
                              }
                            }
                          },
                          {
                            type: 'ExpressionStatement',
                            start: 1750,
                            end: 1756,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 1750,
                              end: 1756,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 1750,
                                end: 1751,
                                name: 'b'
                              },
                              right: {
                                type: 'CallExpression',
                                start: 1752,
                                end: 1756,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 1752,
                                  end: 1753,
                                  name: 'h'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 1754,
                                    end: 1755,
                                    name: 't'
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 1758,
                end: 1859,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 1767,
                  end: 1768,
                  name: 'H'
                },
                params: [
                  {
                    type: 'Identifier',
                    start: 1769,
                    end: 1770,
                    name: 'a'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 1771,
                  end: 1859,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 1772,
                      end: 1777,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 1772,
                        end: 1776,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 1772,
                          end: 1773,
                          name: 'B'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1774,
                          end: 1776,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 1775,
                            end: 1776,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 1777,
                      end: 1782,
                      expression: {
                        type: 'CallExpression',
                        start: 1777,
                        end: 1781,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 1777,
                          end: 1778,
                          name: 'G'
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 1779,
                            end: 1780,
                            name: 'a'
                          }
                        ]
                      }
                    },
                    {
                      type: 'IfStatement',
                      start: 1782,
                      end: 1858,
                      test: {
                        type: 'UnaryExpression',
                        start: 1785,
                        end: 1787,
                        operator: '!',
                        argument: {
                          type: 'Identifier',
                          start: 1786,
                          end: 1787,
                          name: 'A'
                        },
                        prefix: true
                      },
                      consequent: {
                        type: 'IfStatement',
                        start: 1788,
                        end: 1858,
                        test: {
                          type: 'BinaryExpression',
                          start: 1791,
                          end: 1802,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 1791,
                            end: 1795,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'CallExpression',
                            start: 1798,
                            end: 1802,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 1798,
                              end: 1799,
                              name: 'h'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 1800,
                                end: 1801,
                                name: 'r'
                              }
                            ]
                          }
                        },
                        consequent: {
                          type: 'ExpressionStatement',
                          start: 1803,
                          end: 1813,
                          expression: {
                            type: 'SequenceExpression',
                            start: 1803,
                            end: 1812,
                            expressions: [
                              {
                                type: 'AssignmentExpression',
                                start: 1803,
                                end: 1807,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 1803,
                                  end: 1804,
                                  name: 'A'
                                },
                                right: {
                                  type: 'UnaryExpression',
                                  start: 1805,
                                  end: 1807,
                                  operator: '!',
                                  argument: {
                                    type: 'Literal',
                                    start: 1806,
                                    end: 1807,
                                    raw: '0',
                                    value: 0
                                  },
                                  prefix: true
                                }
                              },
                              {
                                type: 'CallExpression',
                                start: 1808,
                                end: 1812,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 1808,
                                  end: 1809,
                                  name: 'I'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 1810,
                                    end: 1811,
                                    name: 'J'
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        alternate: {
                          type: 'BlockStatement',
                          start: 1817,
                          end: 1858,
                          body: [
                            {
                              type: 'VariableDeclaration',
                              start: 1818,
                              end: 1829,
                              kind: 'var',
                              declarations: [
                                {
                                  type: 'VariableDeclarator',
                                  start: 1822,
                                  end: 1828,
                                  id: {
                                    type: 'Identifier',
                                    start: 1822,
                                    end: 1823,
                                    name: 'b'
                                  },
                                  init: {
                                    type: 'CallExpression',
                                    start: 1824,
                                    end: 1828,
                                    optional: false,
                                    callee: {
                                      type: 'Identifier',
                                      start: 1824,
                                      end: 1825,
                                      name: 'h'
                                    },
                                    arguments: [
                                      {
                                        type: 'Identifier',
                                        start: 1826,
                                        end: 1827,
                                        name: 't'
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 1829,
                              end: 1857,
                              expression: {
                                type: 'LogicalExpression',
                                start: 1829,
                                end: 1857,
                                operator: '&&',
                                left: {
                                  type: 'BinaryExpression',
                                  start: 1829,
                                  end: 1837,
                                  operator: '!==',
                                  left: {
                                    type: 'Literal',
                                    start: 1829,
                                    end: 1833,
                                    raw: 'null',
                                    value: null
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 1836,
                                    end: 1837,
                                    name: 'b'
                                  }
                                },
                                right: {
                                  type: 'CallExpression',
                                  start: 1839,
                                  end: 1857,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 1839,
                                    end: 1840,
                                    name: 'K'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 1841,
                                      end: 1842,
                                      name: 'H'
                                    },
                                    {
                                      type: 'BinaryExpression',
                                      start: 1843,
                                      end: 1856,
                                      operator: '-',
                                      left: {
                                        type: 'MemberExpression',
                                        start: 1843,
                                        end: 1854,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 1843,
                                          end: 1844,
                                          name: 'b'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 1845,
                                          end: 1854,
                                          name: 'startTime'
                                        }
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 1855,
                                        end: 1856,
                                        name: 'a'
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      alternate: null
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 1861,
                end: 2288,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 1870,
                  end: 1871,
                  name: 'J'
                },
                params: [
                  {
                    type: 'Identifier',
                    start: 1872,
                    end: 1873,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 1874,
                    end: 1875,
                    name: 'b'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 1876,
                  end: 2288,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 1877,
                      end: 1882,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 1877,
                        end: 1881,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 1877,
                          end: 1878,
                          name: 'A'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1879,
                          end: 1881,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 1880,
                            end: 1881,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 1882,
                      end: 1902,
                      expression: {
                        type: 'LogicalExpression',
                        start: 1882,
                        end: 1901,
                        operator: '&&',
                        left: {
                          type: 'Identifier',
                          start: 1882,
                          end: 1883,
                          name: 'B'
                        },
                        right: {
                          type: 'SequenceExpression',
                          start: 1886,
                          end: 1900,
                          expressions: [
                            {
                              type: 'AssignmentExpression',
                              start: 1886,
                              end: 1890,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 1886,
                                end: 1887,
                                name: 'B'
                              },
                              right: {
                                type: 'UnaryExpression',
                                start: 1888,
                                end: 1890,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 1889,
                                  end: 1890,
                                  raw: '1',
                                  value: 1
                                },
                                prefix: true
                              }
                            },
                            {
                              type: 'CallExpression',
                              start: 1891,
                              end: 1895,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 1891,
                                end: 1892,
                                name: 'E'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 1893,
                                  end: 1894,
                                  name: 'L'
                                }
                              ]
                            },
                            {
                              type: 'AssignmentExpression',
                              start: 1896,
                              end: 1900,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 1896,
                                end: 1897,
                                name: 'L'
                              },
                              right: {
                                type: 'UnaryExpression',
                                start: 1898,
                                end: 1900,
                                operator: '-',
                                argument: {
                                  type: 'Literal',
                                  start: 1899,
                                  end: 1900,
                                  raw: '1',
                                  value: 1
                                },
                                prefix: true
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 1902,
                      end: 1907,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 1902,
                        end: 1906,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 1902,
                          end: 1903,
                          name: 'z'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 1904,
                          end: 1906,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 1905,
                            end: 1906,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        }
                      }
                    },
                    {
                      type: 'VariableDeclaration',
                      start: 1907,
                      end: 1915,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 1911,
                          end: 1914,
                          id: {
                            type: 'Identifier',
                            start: 1911,
                            end: 1912,
                            name: 'c'
                          },
                          init: {
                            type: 'Identifier',
                            start: 1913,
                            end: 1914,
                            name: 'y'
                          }
                        }
                      ]
                    },
                    {
                      type: 'TryStatement',
                      start: 1915,
                      end: 2287,
                      block: {
                        type: 'BlockStatement',
                        start: 1918,
                        end: 2263,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 1919,
                            end: 1924,
                            expression: {
                              type: 'CallExpression',
                              start: 1919,
                              end: 1923,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 1919,
                                end: 1920,
                                name: 'G'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 1921,
                                  end: 1922,
                                  name: 'b'
                                }
                              ]
                            }
                          },
                          {
                            type: 'ForStatement',
                            start: 1924,
                            end: 2183,
                            init: {
                              type: 'AssignmentExpression',
                              start: 1928,
                              end: 1934,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 1928,
                                end: 1929,
                                name: 'v'
                              },
                              right: {
                                type: 'CallExpression',
                                start: 1930,
                                end: 1934,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 1930,
                                  end: 1931,
                                  name: 'h'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 1932,
                                    end: 1933,
                                    name: 'r'
                                  }
                                ]
                              }
                            },
                            test: {
                              type: 'LogicalExpression',
                              start: 1935,
                              end: 1977,
                              operator: '&&',
                              left: {
                                type: 'BinaryExpression',
                                start: 1935,
                                end: 1943,
                                operator: '!==',
                                left: {
                                  type: 'Literal',
                                  start: 1935,
                                  end: 1939,
                                  raw: 'null',
                                  value: null
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 1942,
                                  end: 1943,
                                  name: 'v'
                                }
                              },
                              right: {
                                type: 'LogicalExpression',
                                start: 1946,
                                end: 1976,
                                operator: '||',
                                left: {
                                  type: 'UnaryExpression',
                                  start: 1946,
                                  end: 1967,
                                  operator: '!',
                                  argument: {
                                    type: 'BinaryExpression',
                                    start: 1948,
                                    end: 1966,
                                    operator: '>',
                                    left: {
                                      type: 'MemberExpression',
                                      start: 1948,
                                      end: 1964,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 1948,
                                        end: 1949,
                                        name: 'v'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 1950,
                                        end: 1964,
                                        name: 'expirationTime'
                                      }
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 1965,
                                      end: 1966,
                                      name: 'b'
                                    }
                                  },
                                  prefix: true
                                },
                                right: {
                                  type: 'LogicalExpression',
                                  start: 1969,
                                  end: 1976,
                                  operator: '&&',
                                  left: {
                                    type: 'Identifier',
                                    start: 1969,
                                    end: 1970,
                                    name: 'a'
                                  },
                                  right: {
                                    type: 'UnaryExpression',
                                    start: 1972,
                                    end: 1976,
                                    operator: '!',
                                    argument: {
                                      type: 'CallExpression',
                                      start: 1973,
                                      end: 1976,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 1973,
                                        end: 1974,
                                        name: 'M'
                                      },
                                      arguments: []
                                    },
                                    prefix: true
                                  }
                                }
                              }
                            },
                            update: null,
                            body: {
                              type: 'BlockStatement',
                              start: 1979,
                              end: 2183,
                              body: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 1980,
                                  end: 1997,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 1984,
                                      end: 1996,
                                      id: {
                                        type: 'Identifier',
                                        start: 1984,
                                        end: 1985,
                                        name: 'd'
                                      },
                                      init: {
                                        type: 'MemberExpression',
                                        start: 1986,
                                        end: 1996,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 1986,
                                          end: 1987,
                                          name: 'v'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 1988,
                                          end: 1996,
                                          name: 'callback'
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  type: 'IfStatement',
                                  start: 1997,
                                  end: 2176,
                                  test: {
                                    type: 'BinaryExpression',
                                    start: 2000,
                                    end: 2021,
                                    operator: '===',
                                    left: {
                                      type: 'Literal',
                                      start: 2000,
                                      end: 2010,
                                      value: 'function',
                                      raw: '"function"'
                                    },
                                    right: {
                                      type: 'UnaryExpression',
                                      start: 2013,
                                      end: 2021,
                                      operator: 'typeof',
                                      argument: {
                                        type: 'Identifier',
                                        start: 2020,
                                        end: 2021,
                                        name: 'd'
                                      },
                                      prefix: true
                                    }
                                  },
                                  consequent: {
                                    type: 'BlockStatement',
                                    start: 2022,
                                    end: 2166,
                                    body: [
                                      {
                                        type: 'ExpressionStatement',
                                        start: 2023,
                                        end: 2039,
                                        expression: {
                                          type: 'AssignmentExpression',
                                          start: 2023,
                                          end: 2038,
                                          operator: '=',
                                          left: {
                                            type: 'MemberExpression',
                                            start: 2023,
                                            end: 2033,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 2023,
                                              end: 2024,
                                              name: 'v'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 2025,
                                              end: 2033,
                                              name: 'callback'
                                            }
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 2034,
                                            end: 2038,
                                            raw: 'null',
                                            value: null
                                          }
                                        }
                                      },
                                      {
                                        type: 'ExpressionStatement',
                                        start: 2039,
                                        end: 2057,
                                        expression: {
                                          type: 'AssignmentExpression',
                                          start: 2039,
                                          end: 2056,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 2039,
                                            end: 2040,
                                            name: 'y'
                                          },
                                          right: {
                                            type: 'MemberExpression',
                                            start: 2041,
                                            end: 2056,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 2041,
                                              end: 2042,
                                              name: 'v'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 2043,
                                              end: 2056,
                                              name: 'priorityLevel'
                                            }
                                          }
                                        }
                                      },
                                      {
                                        type: 'VariableDeclaration',
                                        start: 2057,
                                        end: 2086,
                                        kind: 'var',
                                        declarations: [
                                          {
                                            type: 'VariableDeclarator',
                                            start: 2061,
                                            end: 2085,
                                            id: {
                                              type: 'Identifier',
                                              start: 2061,
                                              end: 2062,
                                              name: 'e'
                                            },
                                            init: {
                                              type: 'CallExpression',
                                              start: 2063,
                                              end: 2085,
                                              optional: false,
                                              callee: {
                                                type: 'Identifier',
                                                start: 2063,
                                                end: 2064,
                                                name: 'd'
                                              },
                                              arguments: [
                                                {
                                                  type: 'BinaryExpression',
                                                  start: 2065,
                                                  end: 2084,
                                                  operator: '<=',
                                                  left: {
                                                    type: 'MemberExpression',
                                                    start: 2065,
                                                    end: 2081,
                                                    computed: false,
                                                    optional: false,
                                                    object: {
                                                      type: 'Identifier',
                                                      start: 2065,
                                                      end: 2066,
                                                      name: 'v'
                                                    },
                                                    property: {
                                                      type: 'Identifier',
                                                      start: 2067,
                                                      end: 2081,
                                                      name: 'expirationTime'
                                                    }
                                                  },
                                                  right: {
                                                    type: 'Identifier',
                                                    start: 2083,
                                                    end: 2084,
                                                    name: 'b'
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        type: 'ExpressionStatement',
                                        start: 2086,
                                        end: 2111,
                                        expression: {
                                          type: 'AssignmentExpression',
                                          start: 2086,
                                          end: 2110,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 2086,
                                            end: 2087,
                                            name: 'b'
                                          },
                                          right: {
                                            type: 'CallExpression',
                                            start: 2088,
                                            end: 2110,
                                            optional: false,
                                            callee: {
                                              type: 'MemberExpression',
                                              start: 2088,
                                              end: 2108,
                                              computed: false,
                                              optional: false,
                                              object: {
                                                type: 'Identifier',
                                                start: 2088,
                                                end: 2095,
                                                name: 'exports'
                                              },
                                              property: {
                                                type: 'Identifier',
                                                start: 2096,
                                                end: 2108,
                                                name: 'unstable_now'
                                              }
                                            },
                                            arguments: []
                                          }
                                        }
                                      },
                                      {
                                        type: 'ExpressionStatement',
                                        start: 2111,
                                        end: 2161,
                                        expression: {
                                          type: 'ConditionalExpression',
                                          start: 2111,
                                          end: 2160,
                                          test: {
                                            type: 'BinaryExpression',
                                            start: 2111,
                                            end: 2132,
                                            operator: '===',
                                            left: {
                                              type: 'Literal',
                                              start: 2111,
                                              end: 2121,
                                              value: 'function',
                                              raw: '"function"'
                                            },
                                            right: {
                                              type: 'UnaryExpression',
                                              start: 2124,
                                              end: 2132,
                                              operator: 'typeof',
                                              argument: {
                                                type: 'Identifier',
                                                start: 2131,
                                                end: 2132,
                                                name: 'e'
                                              },
                                              prefix: true
                                            }
                                          },
                                          consequent: {
                                            type: 'AssignmentExpression',
                                            start: 2133,
                                            end: 2145,
                                            operator: '=',
                                            left: {
                                              type: 'MemberExpression',
                                              start: 2133,
                                              end: 2143,
                                              computed: false,
                                              optional: false,
                                              object: {
                                                type: 'Identifier',
                                                start: 2133,
                                                end: 2134,
                                                name: 'v'
                                              },
                                              property: {
                                                type: 'Identifier',
                                                start: 2135,
                                                end: 2143,
                                                name: 'callback'
                                              }
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 2144,
                                              end: 2145,
                                              name: 'e'
                                            }
                                          },
                                          alternate: {
                                            type: 'LogicalExpression',
                                            start: 2146,
                                            end: 2160,
                                            operator: '&&',
                                            left: {
                                              type: 'BinaryExpression',
                                              start: 2146,
                                              end: 2154,
                                              operator: '===',
                                              left: {
                                                type: 'Identifier',
                                                start: 2146,
                                                end: 2147,
                                                name: 'v'
                                              },
                                              right: {
                                                type: 'CallExpression',
                                                start: 2150,
                                                end: 2154,
                                                optional: false,
                                                callee: {
                                                  type: 'Identifier',
                                                  start: 2150,
                                                  end: 2151,
                                                  name: 'h'
                                                },
                                                arguments: [
                                                  {
                                                    type: 'Identifier',
                                                    start: 2152,
                                                    end: 2153,
                                                    name: 'r'
                                                  }
                                                ]
                                              }
                                            },
                                            right: {
                                              type: 'CallExpression',
                                              start: 2156,
                                              end: 2160,
                                              optional: false,
                                              callee: {
                                                type: 'Identifier',
                                                start: 2156,
                                                end: 2157,
                                                name: 'k'
                                              },
                                              arguments: [
                                                {
                                                  type: 'Identifier',
                                                  start: 2158,
                                                  end: 2159,
                                                  name: 'r'
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      {
                                        type: 'ExpressionStatement',
                                        start: 2161,
                                        end: 2165,
                                        expression: {
                                          type: 'CallExpression',
                                          start: 2161,
                                          end: 2165,
                                          optional: false,
                                          callee: {
                                            type: 'Identifier',
                                            start: 2161,
                                            end: 2162,
                                            name: 'G'
                                          },
                                          arguments: [
                                            {
                                              type: 'Identifier',
                                              start: 2163,
                                              end: 2164,
                                              name: 'b'
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  alternate: {
                                    type: 'ExpressionStatement',
                                    start: 2171,
                                    end: 2176,
                                    expression: {
                                      type: 'CallExpression',
                                      start: 2171,
                                      end: 2175,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2171,
                                        end: 2172,
                                        name: 'k'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 2173,
                                          end: 2174,
                                          name: 'r'
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  type: 'ExpressionStatement',
                                  start: 2176,
                                  end: 2182,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 2176,
                                    end: 2182,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 2176,
                                      end: 2177,
                                      name: 'v'
                                    },
                                    right: {
                                      type: 'CallExpression',
                                      start: 2178,
                                      end: 2182,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2178,
                                        end: 2179,
                                        name: 'h'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 2180,
                                          end: 2181,
                                          name: 'r'
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            type: 'IfStatement',
                            start: 2183,
                            end: 2254,
                            test: {
                              type: 'BinaryExpression',
                              start: 2186,
                              end: 2194,
                              operator: '!==',
                              left: {
                                type: 'Literal',
                                start: 2186,
                                end: 2190,
                                raw: 'null',
                                value: null
                              },
                              right: {
                                type: 'Identifier',
                                start: 2193,
                                end: 2194,
                                name: 'v'
                              }
                            },
                            consequent: {
                              type: 'VariableDeclaration',
                              start: 2195,
                              end: 2204,
                              kind: 'var',
                              declarations: [
                                {
                                  type: 'VariableDeclarator',
                                  start: 2199,
                                  end: 2203,
                                  id: {
                                    type: 'Identifier',
                                    start: 2199,
                                    end: 2200,
                                    name: 'w'
                                  },
                                  init: {
                                    type: 'UnaryExpression',
                                    start: 2201,
                                    end: 2203,
                                    operator: '!',
                                    argument: {
                                      type: 'Literal',
                                      start: 2202,
                                      end: 2203,
                                      raw: '0',
                                      value: 0
                                    },
                                    prefix: true
                                  }
                                }
                              ]
                            },
                            alternate: {
                              type: 'BlockStatement',
                              start: 2208,
                              end: 2254,
                              body: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 2209,
                                  end: 2220,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 2213,
                                      end: 2219,
                                      id: {
                                        type: 'Identifier',
                                        start: 2213,
                                        end: 2214,
                                        name: 'm'
                                      },
                                      init: {
                                        type: 'CallExpression',
                                        start: 2215,
                                        end: 2219,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 2215,
                                          end: 2216,
                                          name: 'h'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 2217,
                                            end: 2218,
                                            name: 't'
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  type: 'ExpressionStatement',
                                  start: 2220,
                                  end: 2249,
                                  expression: {
                                    type: 'LogicalExpression',
                                    start: 2220,
                                    end: 2248,
                                    operator: '&&',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 2220,
                                      end: 2228,
                                      operator: '!==',
                                      left: {
                                        type: 'Literal',
                                        start: 2220,
                                        end: 2224,
                                        raw: 'null',
                                        value: null
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 2227,
                                        end: 2228,
                                        name: 'm'
                                      }
                                    },
                                    right: {
                                      type: 'CallExpression',
                                      start: 2230,
                                      end: 2248,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2230,
                                        end: 2231,
                                        name: 'K'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 2232,
                                          end: 2233,
                                          name: 'H'
                                        },
                                        {
                                          type: 'BinaryExpression',
                                          start: 2234,
                                          end: 2247,
                                          operator: '-',
                                          left: {
                                            type: 'MemberExpression',
                                            start: 2234,
                                            end: 2245,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 2234,
                                              end: 2235,
                                              name: 'm'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 2236,
                                              end: 2245,
                                              name: 'startTime'
                                            }
                                          },
                                          right: {
                                            type: 'Identifier',
                                            start: 2246,
                                            end: 2247,
                                            name: 'b'
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  type: 'ExpressionStatement',
                                  start: 2249,
                                  end: 2253,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 2249,
                                    end: 2253,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 2249,
                                      end: 2250,
                                      name: 'w'
                                    },
                                    right: {
                                      type: 'UnaryExpression',
                                      start: 2251,
                                      end: 2253,
                                      operator: '!',
                                      argument: {
                                        type: 'Literal',
                                        start: 2252,
                                        end: 2253,
                                        raw: '1',
                                        value: 1
                                      },
                                      prefix: true
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            type: 'ReturnStatement',
                            start: 2254,
                            end: 2262,
                            argument: {
                              type: 'Identifier',
                              start: 2261,
                              end: 2262,
                              name: 'w'
                            }
                          }
                        ]
                      },
                      handler: null,
                      finalizer: {
                        type: 'BlockStatement',
                        start: 2270,
                        end: 2287,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 2271,
                            end: 2286,
                            expression: {
                              type: 'SequenceExpression',
                              start: 2271,
                              end: 2286,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 2271,
                                  end: 2277,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 2271,
                                    end: 2272,
                                    name: 'v'
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 2273,
                                    end: 2277,
                                    raw: 'null',
                                    value: null
                                  }
                                },
                                {
                                  type: 'AssignmentExpression',
                                  start: 2278,
                                  end: 2281,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 2278,
                                    end: 2279,
                                    name: 'y'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 2280,
                                    end: 2281,
                                    name: 'c'
                                  }
                                },
                                {
                                  type: 'AssignmentExpression',
                                  start: 2282,
                                  end: 2286,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 2282,
                                    end: 2283,
                                    name: 'z'
                                  },
                                  right: {
                                    type: 'UnaryExpression',
                                    start: 2284,
                                    end: 2286,
                                    operator: '!',
                                    argument: {
                                      type: 'Literal',
                                      start: 2285,
                                      end: 2286,
                                      raw: '1',
                                      value: 1
                                    },
                                    prefix: true
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'VariableDeclaration',
                start: 2288,
                end: 2318,
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    start: 2292,
                    end: 2296,
                    id: {
                      type: 'Identifier',
                      start: 2292,
                      end: 2293,
                      name: 'N'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 2294,
                      end: 2296,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 2295,
                        end: 2296,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 2297,
                    end: 2303,
                    id: {
                      type: 'Identifier',
                      start: 2297,
                      end: 2298,
                      name: 'O'
                    },
                    init: {
                      type: 'Literal',
                      start: 2299,
                      end: 2303,
                      raw: 'null',
                      value: null
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 2304,
                    end: 2308,
                    id: {
                      type: 'Identifier',
                      start: 2304,
                      end: 2305,
                      name: 'L'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 2306,
                      end: 2308,
                      operator: '-',
                      argument: {
                        type: 'Literal',
                        start: 2307,
                        end: 2308,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 2309,
                    end: 2312,
                    id: {
                      type: 'Identifier',
                      start: 2309,
                      end: 2310,
                      name: 'P'
                    },
                    init: {
                      type: 'Literal',
                      start: 2311,
                      end: 2312,
                      raw: '5',
                      value: 5
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    start: 2313,
                    end: 2317,
                    id: {
                      type: 'Identifier',
                      start: 2313,
                      end: 2314,
                      name: 'Q'
                    },
                    init: {
                      type: 'UnaryExpression',
                      start: 2315,
                      end: 2317,
                      operator: '-',
                      argument: {
                        type: 'Literal',
                        start: 2316,
                        end: 2317,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  }
                ]
              },
              {
                type: 'FunctionDeclaration',
                start: 2320,
                end: 2373,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 2329,
                  end: 2330,
                  name: 'M'
                },
                params: [],
                body: {
                  type: 'BlockStatement',
                  start: 2332,
                  end: 2373,
                  body: [
                    {
                      type: 'ReturnStatement',
                      start: 2333,
                      end: 2372,
                      argument: {
                        type: 'ConditionalExpression',
                        start: 2340,
                        end: 2372,
                        test: {
                          type: 'BinaryExpression',
                          start: 2340,
                          end: 2366,
                          operator: '<',
                          left: {
                            type: 'BinaryExpression',
                            start: 2340,
                            end: 2364,
                            operator: '-',
                            left: {
                              type: 'CallExpression',
                              start: 2340,
                              end: 2362,
                              optional: false,
                              callee: {
                                type: 'MemberExpression',
                                start: 2340,
                                end: 2360,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 2340,
                                  end: 2347,
                                  name: 'exports'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 2348,
                                  end: 2360,
                                  name: 'unstable_now'
                                }
                              },
                              arguments: []
                            },
                            right: {
                              type: 'Identifier',
                              start: 2363,
                              end: 2364,
                              name: 'Q'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 2365,
                            end: 2366,
                            name: 'P'
                          }
                        },
                        consequent: {
                          type: 'UnaryExpression',
                          start: 2367,
                          end: 2369,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2368,
                            end: 2369,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        alternate: {
                          type: 'UnaryExpression',
                          start: 2370,
                          end: 2372,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2371,
                            end: 2372,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 2373,
                end: 2494,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 2382,
                  end: 2383,
                  name: 'R'
                },
                params: [],
                body: {
                  type: 'BlockStatement',
                  start: 2385,
                  end: 2494,
                  body: [
                    {
                      type: 'IfStatement',
                      start: 2386,
                      end: 2493,
                      test: {
                        type: 'BinaryExpression',
                        start: 2389,
                        end: 2397,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 2389,
                          end: 2393,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'Identifier',
                          start: 2396,
                          end: 2397,
                          name: 'O'
                        }
                      },
                      consequent: {
                        type: 'BlockStatement',
                        start: 2398,
                        end: 2484,
                        body: [
                          {
                            type: 'VariableDeclaration',
                            start: 2399,
                            end: 2428,
                            kind: 'var',
                            declarations: [
                              {
                                type: 'VariableDeclarator',
                                start: 2403,
                                end: 2427,
                                id: {
                                  type: 'Identifier',
                                  start: 2403,
                                  end: 2404,
                                  name: 'a'
                                },
                                init: {
                                  type: 'CallExpression',
                                  start: 2405,
                                  end: 2427,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 2405,
                                    end: 2425,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 2405,
                                      end: 2412,
                                      name: 'exports'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 2413,
                                      end: 2425,
                                      name: 'unstable_now'
                                    }
                                  },
                                  arguments: []
                                }
                              }
                            ]
                          },
                          {
                            type: 'ExpressionStatement',
                            start: 2428,
                            end: 2432,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 2428,
                              end: 2431,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 2428,
                                end: 2429,
                                name: 'Q'
                              },
                              right: {
                                type: 'Identifier',
                                start: 2430,
                                end: 2431,
                                name: 'a'
                              }
                            }
                          },
                          {
                            type: 'VariableDeclaration',
                            start: 2432,
                            end: 2441,
                            kind: 'var',
                            declarations: [
                              {
                                type: 'VariableDeclarator',
                                start: 2436,
                                end: 2440,
                                id: {
                                  type: 'Identifier',
                                  start: 2436,
                                  end: 2437,
                                  name: 'b'
                                },
                                init: {
                                  type: 'UnaryExpression',
                                  start: 2438,
                                  end: 2440,
                                  operator: '!',
                                  argument: {
                                    type: 'Literal',
                                    start: 2439,
                                    end: 2440,
                                    raw: '0',
                                    value: 0
                                  },
                                  prefix: true
                                }
                              }
                            ]
                          },
                          {
                            type: 'TryStatement',
                            start: 2441,
                            end: 2483,
                            block: {
                              type: 'BlockStatement',
                              start: 2444,
                              end: 2455,
                              body: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 2445,
                                  end: 2454,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 2445,
                                    end: 2454,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 2445,
                                      end: 2446,
                                      name: 'b'
                                    },
                                    right: {
                                      type: 'CallExpression',
                                      start: 2447,
                                      end: 2454,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2447,
                                        end: 2448,
                                        name: 'O'
                                      },
                                      arguments: [
                                        {
                                          type: 'UnaryExpression',
                                          start: 2449,
                                          end: 2451,
                                          operator: '!',
                                          argument: {
                                            type: 'Literal',
                                            start: 2450,
                                            end: 2451,
                                            raw: '0',
                                            value: 0
                                          },
                                          prefix: true
                                        },
                                        {
                                          type: 'Identifier',
                                          start: 2452,
                                          end: 2453,
                                          name: 'a'
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            handler: null,
                            finalizer: {
                              type: 'BlockStatement',
                              start: 2462,
                              end: 2483,
                              body: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 2463,
                                  end: 2482,
                                  expression: {
                                    type: 'ConditionalExpression',
                                    start: 2463,
                                    end: 2482,
                                    test: {
                                      type: 'Identifier',
                                      start: 2463,
                                      end: 2464,
                                      name: 'b'
                                    },
                                    consequent: {
                                      type: 'CallExpression',
                                      start: 2465,
                                      end: 2468,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2465,
                                        end: 2466,
                                        name: 'S'
                                      },
                                      arguments: []
                                    },
                                    alternate: {
                                      type: 'SequenceExpression',
                                      start: 2470,
                                      end: 2481,
                                      expressions: [
                                        {
                                          type: 'AssignmentExpression',
                                          start: 2470,
                                          end: 2474,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 2470,
                                            end: 2471,
                                            name: 'N'
                                          },
                                          right: {
                                            type: 'UnaryExpression',
                                            start: 2472,
                                            end: 2474,
                                            operator: '!',
                                            argument: {
                                              type: 'Literal',
                                              start: 2473,
                                              end: 2474,
                                              raw: '1',
                                              value: 1
                                            },
                                            prefix: true
                                          }
                                        },
                                        {
                                          type: 'AssignmentExpression',
                                          start: 2475,
                                          end: 2481,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 2475,
                                            end: 2476,
                                            name: 'O'
                                          },
                                          right: {
                                            type: 'Literal',
                                            start: 2477,
                                            end: 2481,
                                            raw: 'null',
                                            value: null
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      alternate: {
                        type: 'ExpressionStatement',
                        start: 2489,
                        end: 2493,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 2489,
                          end: 2493,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 2489,
                            end: 2490,
                            name: 'N'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 2491,
                            end: 2493,
                            operator: '!',
                            argument: {
                              type: 'Literal',
                              start: 2492,
                              end: 2493,
                              raw: '1',
                              value: 1
                            },
                            prefix: true
                          }
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'VariableDeclaration',
                start: 2494,
                end: 2500,
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    start: 2498,
                    end: 2499,
                    id: {
                      type: 'Identifier',
                      start: 2498,
                      end: 2499,
                      name: 'S'
                    },
                    init: null
                  }
                ]
              },
              {
                type: 'IfStatement',
                start: 2500,
                end: 2704,
                test: {
                  type: 'BinaryExpression',
                  start: 2503,
                  end: 2524,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 2503,
                    end: 2513,
                    value: 'function',
                    raw: '"function"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 2516,
                    end: 2524,
                    operator: 'typeof',
                    argument: {
                      type: 'Identifier',
                      start: 2523,
                      end: 2524,
                      name: 'F'
                    },
                    prefix: true
                  }
                },
                consequent: {
                  type: 'ExpressionStatement',
                  start: 2525,
                  end: 2544,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 2525,
                    end: 2543,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 2525,
                      end: 2526,
                      name: 'S'
                    },
                    right: {
                      type: 'FunctionExpression',
                      start: 2527,
                      end: 2543,
                      async: false,
                      generator: false,
                      id: null,
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        start: 2537,
                        end: 2543,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 2538,
                            end: 2542,
                            expression: {
                              type: 'CallExpression',
                              start: 2538,
                              end: 2542,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 2538,
                                end: 2539,
                                name: 'F'
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 2540,
                                  end: 2541,
                                  name: 'R'
                                }
                              ]
                            }
                          }
                        ]
                      },
                      expression: false
                    }
                  }
                },
                alternate: {
                  type: 'IfStatement',
                  start: 2549,
                  end: 2704,
                  test: {
                    type: 'BinaryExpression',
                    start: 2552,
                    end: 2587,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 2552,
                      end: 2563,
                      value: 'undefined',
                      raw: '"undefined"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 2566,
                      end: 2587,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 2573,
                        end: 2587,
                        name: 'MessageChannel'
                      },
                      prefix: true
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 2588,
                    end: 2678,
                    body: [
                      {
                        type: 'VariableDeclaration',
                        start: 2589,
                        end: 2624,
                        kind: 'var',
                        declarations: [
                          {
                            type: 'VariableDeclarator',
                            start: 2593,
                            end: 2613,
                            id: {
                              type: 'Identifier',
                              start: 2593,
                              end: 2594,
                              name: 'T'
                            },
                            init: {
                              type: 'NewExpression',
                              start: 2595,
                              end: 2613,
                              callee: {
                                type: 'Identifier',
                                start: 2599,
                                end: 2613,
                                name: 'MessageChannel'
                              },
                              arguments: []
                            }
                          },
                          {
                            type: 'VariableDeclarator',
                            start: 2614,
                            end: 2623,
                            id: {
                              type: 'Identifier',
                              start: 2614,
                              end: 2615,
                              name: 'U'
                            },
                            init: {
                              type: 'MemberExpression',
                              start: 2616,
                              end: 2623,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 2616,
                                end: 2617,
                                name: 'T'
                              },
                              property: {
                                type: 'Identifier',
                                start: 2618,
                                end: 2623,
                                name: 'port2'
                              }
                            }
                          }
                        ]
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 2624,
                        end: 2644,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 2624,
                          end: 2643,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 2624,
                            end: 2641,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'MemberExpression',
                              start: 2624,
                              end: 2631,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 2624,
                                end: 2625,
                                name: 'T'
                              },
                              property: {
                                type: 'Identifier',
                                start: 2626,
                                end: 2631,
                                name: 'port1'
                              }
                            },
                            property: {
                              type: 'Identifier',
                              start: 2632,
                              end: 2641,
                              name: 'onmessage'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 2642,
                            end: 2643,
                            name: 'R'
                          }
                        }
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 2644,
                        end: 2677,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 2644,
                          end: 2677,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 2644,
                            end: 2645,
                            name: 'S'
                          },
                          right: {
                            type: 'FunctionExpression',
                            start: 2646,
                            end: 2677,
                            async: false,
                            generator: false,
                            id: null,
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              start: 2656,
                              end: 2677,
                              body: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 2657,
                                  end: 2676,
                                  expression: {
                                    type: 'CallExpression',
                                    start: 2657,
                                    end: 2676,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 2657,
                                      end: 2670,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 2657,
                                        end: 2658,
                                        name: 'U'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 2659,
                                        end: 2670,
                                        name: 'postMessage'
                                      }
                                    },
                                    arguments: [
                                      {
                                        type: 'Literal',
                                        start: 2671,
                                        end: 2675,
                                        raw: 'null',
                                        value: null
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            expression: false
                          }
                        }
                      }
                    ]
                  },
                  alternate: {
                    type: 'ExpressionStatement',
                    start: 2683,
                    end: 2704,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 2683,
                      end: 2703,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 2683,
                        end: 2684,
                        name: 'S'
                      },
                      right: {
                        type: 'FunctionExpression',
                        start: 2685,
                        end: 2703,
                        async: false,
                        generator: false,
                        id: null,
                        params: [],
                        body: {
                          type: 'BlockStatement',
                          start: 2695,
                          end: 2703,
                          body: [
                            {
                              type: 'ExpressionStatement',
                              start: 2696,
                              end: 2702,
                              expression: {
                                type: 'CallExpression',
                                start: 2696,
                                end: 2702,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 2696,
                                  end: 2697,
                                  name: 'D'
                                },
                                arguments: [
                                  {
                                    type: 'Identifier',
                                    start: 2698,
                                    end: 2699,
                                    name: 'R'
                                  },
                                  {
                                    type: 'Literal',
                                    start: 2700,
                                    end: 2701,
                                    raw: '0',
                                    value: 0
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        expression: false
                      }
                    }
                  }
                }
              },
              {
                type: 'FunctionDeclaration',
                start: 2704,
                end: 2736,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 2713,
                  end: 2714,
                  name: 'I'
                },
                params: [
                  {
                    type: 'Identifier',
                    start: 2715,
                    end: 2716,
                    name: 'a'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 2717,
                  end: 2736,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 2718,
                      end: 2722,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 2718,
                        end: 2721,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 2718,
                          end: 2719,
                          name: 'O'
                        },
                        right: {
                          type: 'Identifier',
                          start: 2720,
                          end: 2721,
                          name: 'a'
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 2722,
                      end: 2735,
                      expression: {
                        type: 'LogicalExpression',
                        start: 2722,
                        end: 2735,
                        operator: '||',
                        left: {
                          type: 'Identifier',
                          start: 2722,
                          end: 2723,
                          name: 'N'
                        },
                        right: {
                          type: 'SequenceExpression',
                          start: 2726,
                          end: 2734,
                          expressions: [
                            {
                              type: 'AssignmentExpression',
                              start: 2726,
                              end: 2730,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 2726,
                                end: 2727,
                                name: 'N'
                              },
                              right: {
                                type: 'UnaryExpression',
                                start: 2728,
                                end: 2730,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 2729,
                                  end: 2730,
                                  raw: '0',
                                  value: 0
                                },
                                prefix: true
                              }
                            },
                            {
                              type: 'CallExpression',
                              start: 2731,
                              end: 2734,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 2731,
                                end: 2732,
                                name: 'S'
                              },
                              arguments: []
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'FunctionDeclaration',
                start: 2736,
                end: 2797,
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  start: 2745,
                  end: 2746,
                  name: 'K'
                },
                params: [
                  {
                    type: 'Identifier',
                    start: 2747,
                    end: 2748,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 2749,
                    end: 2750,
                    name: 'b'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 2751,
                  end: 2797,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 2752,
                      end: 2796,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 2752,
                        end: 2796,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 2752,
                          end: 2753,
                          name: 'L'
                        },
                        right: {
                          type: 'CallExpression',
                          start: 2754,
                          end: 2796,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 2754,
                            end: 2755,
                            name: 'D'
                          },
                          arguments: [
                            {
                              type: 'FunctionExpression',
                              start: 2756,
                              end: 2793,
                              async: false,
                              generator: false,
                              id: null,
                              params: [],
                              body: {
                                type: 'BlockStatement',
                                start: 2766,
                                end: 2793,
                                body: [
                                  {
                                    type: 'ExpressionStatement',
                                    start: 2767,
                                    end: 2792,
                                    expression: {
                                      type: 'CallExpression',
                                      start: 2767,
                                      end: 2792,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 2767,
                                        end: 2768,
                                        name: 'a'
                                      },
                                      arguments: [
                                        {
                                          type: 'CallExpression',
                                          start: 2769,
                                          end: 2791,
                                          optional: false,
                                          callee: {
                                            type: 'MemberExpression',
                                            start: 2769,
                                            end: 2789,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 2769,
                                              end: 2776,
                                              name: 'exports'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 2777,
                                              end: 2789,
                                              name: 'unstable_now'
                                            }
                                          },
                                          arguments: []
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              expression: false
                            },
                            {
                              type: 'Identifier',
                              start: 2794,
                              end: 2795,
                              name: 'b'
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                expression: false
              },
              {
                type: 'ExpressionStatement',
                start: 2799,
                end: 2831,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2799,
                  end: 2830,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2799,
                    end: 2828,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2799,
                      end: 2806,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2807,
                      end: 2828,
                      name: 'unstable_IdlePriority'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2829,
                    end: 2830,
                    raw: '5',
                    value: 5
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 2831,
                end: 2868,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2831,
                  end: 2867,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2831,
                    end: 2865,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2831,
                      end: 2838,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2839,
                      end: 2865,
                      name: 'unstable_ImmediatePriority'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2866,
                    end: 2867,
                    raw: '1',
                    value: 1
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 2868,
                end: 2899,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2868,
                  end: 2898,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2868,
                    end: 2896,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2868,
                      end: 2875,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2876,
                      end: 2896,
                      name: 'unstable_LowPriority'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2897,
                    end: 2898,
                    raw: '4',
                    value: 4
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 2899,
                end: 2933,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2899,
                  end: 2932,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2899,
                    end: 2930,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2899,
                      end: 2906,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2907,
                      end: 2930,
                      name: 'unstable_NormalPriority'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2931,
                    end: 2932,
                    raw: '3',
                    value: 3
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 2933,
                end: 2965,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2933,
                  end: 2964,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2933,
                    end: 2959,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2933,
                      end: 2940,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2941,
                      end: 2959,
                      name: 'unstable_Profiling'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 2960,
                    end: 2964,
                    raw: 'null',
                    value: null
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 2965,
                end: 3005,
                expression: {
                  type: 'AssignmentExpression',
                  start: 2965,
                  end: 3004,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 2965,
                    end: 3002,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 2965,
                      end: 2972,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 2973,
                      end: 3002,
                      name: 'unstable_UserBlockingPriority'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 3003,
                    end: 3004,
                    raw: '2',
                    value: 2
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3005,
                end: 3066,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3005,
                  end: 3065,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3005,
                    end: 3036,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3005,
                      end: 3012,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3013,
                      end: 3036,
                      name: 'unstable_cancelCallback'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3037,
                    end: 3065,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 3046,
                        end: 3047,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 3048,
                      end: 3065,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 3049,
                          end: 3064,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 3049,
                            end: 3064,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 3049,
                              end: 3059,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 3049,
                                end: 3050,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 3051,
                                end: 3059,
                                name: 'callback'
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 3060,
                              end: 3064,
                              raw: 'null',
                              value: null
                            }
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3066,
                end: 3131,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3066,
                  end: 3130,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3066,
                    end: 3100,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3066,
                      end: 3073,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3074,
                      end: 3100,
                      name: 'unstable_continueExecution'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3101,
                    end: 3130,
                    async: false,
                    generator: false,
                    id: null,
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      start: 3111,
                      end: 3130,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 3112,
                          end: 3129,
                          expression: {
                            type: 'LogicalExpression',
                            start: 3112,
                            end: 3129,
                            operator: '||',
                            left: {
                              type: 'LogicalExpression',
                              start: 3112,
                              end: 3116,
                              operator: '||',
                              left: {
                                type: 'Identifier',
                                start: 3112,
                                end: 3113,
                                name: 'A'
                              },
                              right: {
                                type: 'Identifier',
                                start: 3115,
                                end: 3116,
                                name: 'z'
                              }
                            },
                            right: {
                              type: 'SequenceExpression',
                              start: 3119,
                              end: 3128,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 3119,
                                  end: 3123,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 3119,
                                    end: 3120,
                                    name: 'A'
                                  },
                                  right: {
                                    type: 'UnaryExpression',
                                    start: 3121,
                                    end: 3123,
                                    operator: '!',
                                    argument: {
                                      type: 'Literal',
                                      start: 3122,
                                      end: 3123,
                                      raw: '0',
                                      value: 0
                                    },
                                    prefix: true
                                  }
                                },
                                {
                                  type: 'CallExpression',
                                  start: 3124,
                                  end: 3128,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 3124,
                                    end: 3125,
                                    name: 'I'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 3126,
                                      end: 3127,
                                      name: 'J'
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3133,
                end: 3344,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3133,
                  end: 3343,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3133,
                    end: 3164,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3133,
                      end: 3140,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3141,
                      end: 3164,
                      name: 'unstable_forceFrameRate'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3165,
                    end: 3343,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 3174,
                        end: 3175,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 3176,
                      end: 3343,
                      body: [
                        {
                          type: 'ExpressionStatement',
                          start: 3177,
                          end: 3342,
                          expression: {
                            type: 'ConditionalExpression',
                            start: 3177,
                            end: 3342,
                            test: {
                              type: 'LogicalExpression',
                              start: 3177,
                              end: 3187,
                              operator: '||',
                              left: {
                                type: 'BinaryExpression',
                                start: 3177,
                                end: 3180,
                                operator: '>',
                                left: {
                                  type: 'Literal',
                                  start: 3177,
                                  end: 3178,
                                  raw: '0',
                                  value: 0
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 3179,
                                  end: 3180,
                                  name: 'a'
                                }
                              },
                              right: {
                                type: 'BinaryExpression',
                                start: 3182,
                                end: 3187,
                                operator: '<',
                                left: {
                                  type: 'Literal',
                                  start: 3182,
                                  end: 3185,
                                  raw: '125',
                                  value: 125
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 3186,
                                  end: 3187,
                                  name: 'a'
                                }
                              }
                            },
                            consequent: {
                              type: 'CallExpression',
                              start: 3188,
                              end: 3316,
                              optional: false,
                              callee: {
                                type: 'MemberExpression',
                                start: 3188,
                                end: 3201,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 3188,
                                  end: 3195,
                                  name: 'console'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 3196,
                                  end: 3201,
                                  name: 'error'
                                }
                              },
                              arguments: [
                                {
                                  type: 'Literal',
                                  start: 3202,
                                  end: 3315,
                                  value: 'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported',
                                  raw: '"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"'
                                }
                              ]
                            },
                            alternate: {
                              type: 'AssignmentExpression',
                              start: 3317,
                              end: 3342,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 3317,
                                end: 3318,
                                name: 'P'
                              },
                              right: {
                                type: 'ConditionalExpression',
                                start: 3319,
                                end: 3342,
                                test: {
                                  type: 'BinaryExpression',
                                  start: 3319,
                                  end: 3322,
                                  operator: '<',
                                  left: {
                                    type: 'Literal',
                                    start: 3319,
                                    end: 3320,
                                    raw: '0',
                                    value: 0
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 3321,
                                    end: 3322,
                                    name: 'a'
                                  }
                                },
                                consequent: {
                                  type: 'CallExpression',
                                  start: 3323,
                                  end: 3340,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 3323,
                                    end: 3333,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3323,
                                      end: 3327,
                                      name: 'Math'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3328,
                                      end: 3333,
                                      name: 'floor'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'BinaryExpression',
                                      start: 3334,
                                      end: 3339,
                                      operator: '/',
                                      left: {
                                        type: 'Literal',
                                        start: 3334,
                                        end: 3337,
                                        raw: '1E3',
                                        value: 1000
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 3338,
                                        end: 3339,
                                        name: 'a'
                                      }
                                    }
                                  ]
                                },
                                alternate: {
                                  type: 'Literal',
                                  start: 3341,
                                  end: 3342,
                                  raw: '5',
                                  value: 5
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3344,
                end: 3406,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3344,
                  end: 3405,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3344,
                    end: 3384,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3344,
                      end: 3351,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3352,
                      end: 3384,
                      name: 'unstable_getCurrentPriorityLevel'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3385,
                    end: 3405,
                    async: false,
                    generator: false,
                    id: null,
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      start: 3395,
                      end: 3405,
                      body: [
                        {
                          type: 'ReturnStatement',
                          start: 3396,
                          end: 3404,
                          argument: {
                            type: 'Identifier',
                            start: 3403,
                            end: 3404,
                            name: 'y'
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3406,
                end: 3468,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3406,
                  end: 3467,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3406,
                    end: 3443,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3406,
                      end: 3413,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3414,
                      end: 3443,
                      name: 'unstable_getFirstCallbackNode'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3444,
                    end: 3467,
                    async: false,
                    generator: false,
                    id: null,
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      start: 3454,
                      end: 3467,
                      body: [
                        {
                          type: 'ReturnStatement',
                          start: 3455,
                          end: 3466,
                          argument: {
                            type: 'CallExpression',
                            start: 3462,
                            end: 3466,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 3462,
                              end: 3463,
                              name: 'h'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 3464,
                                end: 3465,
                                name: 'r'
                              }
                            ]
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3468,
                end: 3600,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3468,
                  end: 3599,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3468,
                    end: 3489,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3468,
                      end: 3475,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3476,
                      end: 3489,
                      name: 'unstable_next'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3490,
                    end: 3599,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 3499,
                        end: 3500,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 3501,
                      end: 3599,
                      body: [
                        {
                          type: 'SwitchStatement',
                          start: 3502,
                          end: 3559,
                          discriminant: {
                            type: 'Identifier',
                            start: 3509,
                            end: 3510,
                            name: 'y'
                          },
                          cases: [
                            {
                              type: 'SwitchCase',
                              start: 3512,
                              end: 3519,
                              test: {
                                type: 'Literal',
                                start: 3517,
                                end: 3518,
                                raw: '1',
                                value: 1
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3519,
                              end: 3526,
                              test: {
                                type: 'Literal',
                                start: 3524,
                                end: 3525,
                                raw: '2',
                                value: 2
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3526,
                              end: 3547,
                              test: {
                                type: 'Literal',
                                start: 3531,
                                end: 3532,
                                raw: '3',
                                value: 3
                              },
                              consequent: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 3533,
                                  end: 3541,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 3537,
                                      end: 3540,
                                      id: {
                                        type: 'Identifier',
                                        start: 3537,
                                        end: 3538,
                                        name: 'b'
                                      },
                                      init: {
                                        type: 'Literal',
                                        start: 3539,
                                        end: 3540,
                                        raw: '3',
                                        value: 3
                                      }
                                    }
                                  ]
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 3541,
                                  end: 3547,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 3547,
                              end: 3558,
                              test: null,
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 3555,
                                  end: 3558,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 3555,
                                    end: 3558,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 3555,
                                      end: 3556,
                                      name: 'b'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 3557,
                                      end: 3558,
                                      name: 'y'
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          type: 'VariableDeclaration',
                          start: 3559,
                          end: 3567,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 3563,
                              end: 3566,
                              id: {
                                type: 'Identifier',
                                start: 3563,
                                end: 3564,
                                name: 'c'
                              },
                              init: {
                                type: 'Identifier',
                                start: 3565,
                                end: 3566,
                                name: 'y'
                              }
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 3567,
                          end: 3571,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 3567,
                            end: 3570,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 3567,
                              end: 3568,
                              name: 'y'
                            },
                            right: {
                              type: 'Identifier',
                              start: 3569,
                              end: 3570,
                              name: 'b'
                            }
                          }
                        },
                        {
                          type: 'TryStatement',
                          start: 3571,
                          end: 3598,
                          block: {
                            type: 'BlockStatement',
                            start: 3574,
                            end: 3586,
                            body: [
                              {
                                type: 'ReturnStatement',
                                start: 3575,
                                end: 3585,
                                argument: {
                                  type: 'CallExpression',
                                  start: 3582,
                                  end: 3585,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 3582,
                                    end: 3583,
                                    name: 'a'
                                  },
                                  arguments: []
                                }
                              }
                            ]
                          },
                          handler: null,
                          finalizer: {
                            type: 'BlockStatement',
                            start: 3593,
                            end: 3598,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 3594,
                                end: 3597,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 3594,
                                  end: 3597,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 3594,
                                    end: 3595,
                                    name: 'y'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 3596,
                                    end: 3597,
                                    name: 'c'
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3600,
                end: 3645,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3600,
                  end: 3644,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3600,
                    end: 3631,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3600,
                      end: 3607,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3608,
                      end: 3631,
                      name: 'unstable_pauseExecution'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3632,
                    end: 3644,
                    async: false,
                    generator: false,
                    id: null,
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      start: 3642,
                      end: 3644,
                      body: []
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3647,
                end: 3690,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3647,
                  end: 3689,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3647,
                    end: 3676,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3647,
                      end: 3654,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3655,
                      end: 3676,
                      name: 'unstable_requestPaint'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3677,
                    end: 3689,
                    async: false,
                    generator: false,
                    id: null,
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      start: 3687,
                      end: 3689,
                      body: []
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3690,
                end: 3841,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3690,
                  end: 3840,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3690,
                    end: 3722,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3690,
                      end: 3697,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3698,
                      end: 3722,
                      name: 'unstable_runWithPriority'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3723,
                    end: 3840,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 3732,
                        end: 3733,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 3734,
                        end: 3735,
                        name: 'b'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 3736,
                      end: 3840,
                      body: [
                        {
                          type: 'SwitchStatement',
                          start: 3737,
                          end: 3800,
                          discriminant: {
                            type: 'Identifier',
                            start: 3744,
                            end: 3745,
                            name: 'a'
                          },
                          cases: [
                            {
                              type: 'SwitchCase',
                              start: 3747,
                              end: 3754,
                              test: {
                                type: 'Literal',
                                start: 3752,
                                end: 3753,
                                raw: '1',
                                value: 1
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3754,
                              end: 3761,
                              test: {
                                type: 'Literal',
                                start: 3759,
                                end: 3760,
                                raw: '2',
                                value: 2
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3761,
                              end: 3768,
                              test: {
                                type: 'Literal',
                                start: 3766,
                                end: 3767,
                                raw: '3',
                                value: 3
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3768,
                              end: 3775,
                              test: {
                                type: 'Literal',
                                start: 3773,
                                end: 3774,
                                raw: '4',
                                value: 4
                              },
                              consequent: []
                            },
                            {
                              type: 'SwitchCase',
                              start: 3775,
                              end: 3788,
                              test: {
                                type: 'Literal',
                                start: 3780,
                                end: 3781,
                                raw: '5',
                                value: 5
                              },
                              consequent: [
                                {
                                  type: 'BreakStatement',
                                  start: 3782,
                                  end: 3788,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 3788,
                              end: 3799,
                              test: null,
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 3796,
                                  end: 3799,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 3796,
                                    end: 3799,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 3796,
                                      end: 3797,
                                      name: 'a'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 3798,
                                      end: 3799,
                                      raw: '3',
                                      value: 3
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          type: 'VariableDeclaration',
                          start: 3800,
                          end: 3808,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 3804,
                              end: 3807,
                              id: {
                                type: 'Identifier',
                                start: 3804,
                                end: 3805,
                                name: 'c'
                              },
                              init: {
                                type: 'Identifier',
                                start: 3806,
                                end: 3807,
                                name: 'y'
                              }
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 3808,
                          end: 3812,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 3808,
                            end: 3811,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 3808,
                              end: 3809,
                              name: 'y'
                            },
                            right: {
                              type: 'Identifier',
                              start: 3810,
                              end: 3811,
                              name: 'a'
                            }
                          }
                        },
                        {
                          type: 'TryStatement',
                          start: 3812,
                          end: 3839,
                          block: {
                            type: 'BlockStatement',
                            start: 3815,
                            end: 3827,
                            body: [
                              {
                                type: 'ReturnStatement',
                                start: 3816,
                                end: 3826,
                                argument: {
                                  type: 'CallExpression',
                                  start: 3823,
                                  end: 3826,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 3823,
                                    end: 3824,
                                    name: 'b'
                                  },
                                  arguments: []
                                }
                              }
                            ]
                          },
                          handler: null,
                          finalizer: {
                            type: 'BlockStatement',
                            start: 3834,
                            end: 3839,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 3835,
                                end: 3838,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 3835,
                                  end: 3838,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 3835,
                                    end: 3836,
                                    name: 'y'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 3837,
                                    end: 3838,
                                    name: 'c'
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 3843,
                end: 4328,
                expression: {
                  type: 'AssignmentExpression',
                  start: 3843,
                  end: 4327,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 3843,
                    end: 3876,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 3843,
                      end: 3850,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 3851,
                      end: 3876,
                      name: 'unstable_scheduleCallback'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 3877,
                    end: 4327,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 3886,
                        end: 3887,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 3888,
                        end: 3889,
                        name: 'b'
                      },
                      {
                        type: 'Identifier',
                        start: 3890,
                        end: 3891,
                        name: 'c'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 3892,
                      end: 4327,
                      body: [
                        {
                          type: 'VariableDeclaration',
                          start: 3893,
                          end: 3922,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 3897,
                              end: 3921,
                              id: {
                                type: 'Identifier',
                                start: 3897,
                                end: 3898,
                                name: 'd'
                              },
                              init: {
                                type: 'CallExpression',
                                start: 3899,
                                end: 3921,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 3899,
                                  end: 3919,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 3899,
                                    end: 3906,
                                    name: 'exports'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 3907,
                                    end: 3919,
                                    name: 'unstable_now'
                                  }
                                },
                                arguments: []
                              }
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 3922,
                          end: 4001,
                          expression: {
                            type: 'ConditionalExpression',
                            start: 3922,
                            end: 4000,
                            test: {
                              type: 'LogicalExpression',
                              start: 3922,
                              end: 3951,
                              operator: '&&',
                              left: {
                                type: 'BinaryExpression',
                                start: 3922,
                                end: 3941,
                                operator: '===',
                                left: {
                                  type: 'Literal',
                                  start: 3922,
                                  end: 3930,
                                  value: 'object',
                                  raw: '"object"'
                                },
                                right: {
                                  type: 'UnaryExpression',
                                  start: 3933,
                                  end: 3941,
                                  operator: 'typeof',
                                  argument: {
                                    type: 'Identifier',
                                    start: 3940,
                                    end: 3941,
                                    name: 'c'
                                  },
                                  prefix: true
                                }
                              },
                              right: {
                                type: 'BinaryExpression',
                                start: 3943,
                                end: 3951,
                                operator: '!==',
                                left: {
                                  type: 'Literal',
                                  start: 3943,
                                  end: 3947,
                                  raw: 'null',
                                  value: null
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 3950,
                                  end: 3951,
                                  name: 'c'
                                }
                              }
                            },
                            consequent: {
                              type: 'SequenceExpression',
                              start: 3953,
                              end: 3995,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 3953,
                                  end: 3962,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 3953,
                                    end: 3954,
                                    name: 'c'
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 3955,
                                    end: 3962,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 3955,
                                      end: 3956,
                                      name: 'c'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 3957,
                                      end: 3962,
                                      name: 'delay'
                                    }
                                  }
                                },
                                {
                                  type: 'AssignmentExpression',
                                  start: 3963,
                                  end: 3995,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 3963,
                                    end: 3964,
                                    name: 'c'
                                  },
                                  right: {
                                    type: 'ConditionalExpression',
                                    start: 3965,
                                    end: 3995,
                                    test: {
                                      type: 'LogicalExpression',
                                      start: 3965,
                                      end: 3989,
                                      operator: '&&',
                                      left: {
                                        type: 'BinaryExpression',
                                        start: 3965,
                                        end: 3984,
                                        operator: '===',
                                        left: {
                                          type: 'Literal',
                                          start: 3965,
                                          end: 3973,
                                          value: 'number',
                                          raw: '"number"'
                                        },
                                        right: {
                                          type: 'UnaryExpression',
                                          start: 3976,
                                          end: 3984,
                                          operator: 'typeof',
                                          argument: {
                                            type: 'Identifier',
                                            start: 3983,
                                            end: 3984,
                                            name: 'c'
                                          },
                                          prefix: true
                                        }
                                      },
                                      right: {
                                        type: 'BinaryExpression',
                                        start: 3986,
                                        end: 3989,
                                        operator: '<',
                                        left: {
                                          type: 'Literal',
                                          start: 3986,
                                          end: 3987,
                                          raw: '0',
                                          value: 0
                                        },
                                        right: {
                                          type: 'Identifier',
                                          start: 3988,
                                          end: 3989,
                                          name: 'c'
                                        }
                                      }
                                    },
                                    consequent: {
                                      type: 'BinaryExpression',
                                      start: 3990,
                                      end: 3993,
                                      operator: '+',
                                      left: {
                                        type: 'Identifier',
                                        start: 3990,
                                        end: 3991,
                                        name: 'd'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 3992,
                                        end: 3993,
                                        name: 'c'
                                      }
                                    },
                                    alternate: {
                                      type: 'Identifier',
                                      start: 3994,
                                      end: 3995,
                                      name: 'd'
                                    }
                                  }
                                }
                              ]
                            },
                            alternate: {
                              type: 'AssignmentExpression',
                              start: 3997,
                              end: 4000,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 3997,
                                end: 3998,
                                name: 'c'
                              },
                              right: {
                                type: 'Identifier',
                                start: 3999,
                                end: 4000,
                                name: 'd'
                              }
                            }
                          }
                        },
                        {
                          type: 'SwitchStatement',
                          start: 4001,
                          end: 4111,
                          discriminant: {
                            type: 'Identifier',
                            start: 4008,
                            end: 4009,
                            name: 'a'
                          },
                          cases: [
                            {
                              type: 'SwitchCase',
                              start: 4011,
                              end: 4033,
                              test: {
                                type: 'Literal',
                                start: 4016,
                                end: 4017,
                                raw: '1',
                                value: 1
                              },
                              consequent: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 4018,
                                  end: 4027,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 4022,
                                      end: 4026,
                                      id: {
                                        type: 'Identifier',
                                        start: 4022,
                                        end: 4023,
                                        name: 'e'
                                      },
                                      init: {
                                        type: 'UnaryExpression',
                                        start: 4024,
                                        end: 4026,
                                        operator: '-',
                                        argument: {
                                          type: 'Literal',
                                          start: 4025,
                                          end: 4026,
                                          raw: '1',
                                          value: 1
                                        },
                                        prefix: true
                                      }
                                    }
                                  ]
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 4027,
                                  end: 4033,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 4033,
                              end: 4052,
                              test: {
                                type: 'Literal',
                                start: 4038,
                                end: 4039,
                                raw: '2',
                                value: 2
                              },
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 4040,
                                  end: 4046,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 4040,
                                    end: 4045,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 4040,
                                      end: 4041,
                                      name: 'e'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 4042,
                                      end: 4045,
                                      raw: '250',
                                      value: 250
                                    }
                                  }
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 4046,
                                  end: 4052,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 4052,
                              end: 4078,
                              test: {
                                type: 'Literal',
                                start: 4057,
                                end: 4058,
                                raw: '5',
                                value: 5
                              },
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 4059,
                                  end: 4072,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 4059,
                                    end: 4071,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 4059,
                                      end: 4060,
                                      name: 'e'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 4061,
                                      end: 4071,
                                      raw: '1073741823',
                                      value: 1073741823
                                    }
                                  }
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 4072,
                                  end: 4078,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 4078,
                              end: 4097,
                              test: {
                                type: 'Literal',
                                start: 4083,
                                end: 4084,
                                raw: '4',
                                value: 4
                              },
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 4085,
                                  end: 4091,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 4085,
                                    end: 4090,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 4085,
                                      end: 4086,
                                      name: 'e'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 4087,
                                      end: 4090,
                                      raw: '1E4',
                                      value: 10000
                                    }
                                  }
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 4091,
                                  end: 4097,
                                  label: null
                                }
                              ]
                            },
                            {
                              type: 'SwitchCase',
                              start: 4097,
                              end: 4110,
                              test: null,
                              consequent: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 4105,
                                  end: 4110,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 4105,
                                    end: 4110,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 4105,
                                      end: 4106,
                                      name: 'e'
                                    },
                                    right: {
                                      type: 'Literal',
                                      start: 4107,
                                      end: 4110,
                                      raw: '5E3',
                                      value: 5000
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 4111,
                          end: 4117,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 4111,
                            end: 4116,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 4111,
                              end: 4112,
                              name: 'e'
                            },
                            right: {
                              type: 'BinaryExpression',
                              start: 4113,
                              end: 4116,
                              operator: '+',
                              left: {
                                type: 'Identifier',
                                start: 4113,
                                end: 4114,
                                name: 'c'
                              },
                              right: {
                                type: 'Identifier',
                                start: 4115,
                                end: 4116,
                                name: 'e'
                              }
                            }
                          }
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 4117,
                          end: 4197,
                          expression: {
                            type: 'AssignmentExpression',
                            start: 4117,
                            end: 4196,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 4117,
                              end: 4118,
                              name: 'a'
                            },
                            right: {
                              type: 'ObjectExpression',
                              start: 4119,
                              end: 4196,
                              properties: [
                                {
                                  type: 'Property',
                                  start: 4120,
                                  end: 4126,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4120,
                                    end: 4122,
                                    name: 'id'
                                  },
                                  value: {
                                    type: 'UpdateExpression',
                                    start: 4123,
                                    end: 4126,
                                    prefix: false,
                                    operator: '++',
                                    argument: {
                                      type: 'Identifier',
                                      start: 4123,
                                      end: 4124,
                                      name: 'u'
                                    }
                                  },
                                  kind: 'init'
                                },
                                {
                                  type: 'Property',
                                  start: 4127,
                                  end: 4137,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4127,
                                    end: 4135,
                                    name: 'callback'
                                  },
                                  value: {
                                    type: 'Identifier',
                                    start: 4136,
                                    end: 4137,
                                    name: 'b'
                                  },
                                  kind: 'init'
                                },
                                {
                                  type: 'Property',
                                  start: 4138,
                                  end: 4153,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4138,
                                    end: 4151,
                                    name: 'priorityLevel'
                                  },
                                  value: {
                                    type: 'Identifier',
                                    start: 4152,
                                    end: 4153,
                                    name: 'a'
                                  },
                                  kind: 'init'
                                },
                                {
                                  type: 'Property',
                                  start: 4154,
                                  end: 4165,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4154,
                                    end: 4163,
                                    name: 'startTime'
                                  },
                                  value: {
                                    type: 'Identifier',
                                    start: 4164,
                                    end: 4165,
                                    name: 'c'
                                  },
                                  kind: 'init'
                                },
                                {
                                  type: 'Property',
                                  start: 4166,
                                  end: 4182,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4166,
                                    end: 4180,
                                    name: 'expirationTime'
                                  },
                                  value: {
                                    type: 'Identifier',
                                    start: 4181,
                                    end: 4182,
                                    name: 'e'
                                  },
                                  kind: 'init'
                                },
                                {
                                  type: 'Property',
                                  start: 4183,
                                  end: 4195,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 4183,
                                    end: 4192,
                                    name: 'sortIndex'
                                  },
                                  value: {
                                    type: 'UnaryExpression',
                                    start: 4193,
                                    end: 4195,
                                    operator: '-',
                                    argument: {
                                      type: 'Literal',
                                      start: 4194,
                                      end: 4195,
                                      raw: '1',
                                      value: 1
                                    },
                                    prefix: true
                                  },
                                  kind: 'init'
                                }
                              ]
                            }
                          }
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 4197,
                          end: 4318,
                          expression: {
                            type: 'ConditionalExpression',
                            start: 4197,
                            end: 4317,
                            test: {
                              type: 'BinaryExpression',
                              start: 4197,
                              end: 4200,
                              operator: '>',
                              left: {
                                type: 'Identifier',
                                start: 4197,
                                end: 4198,
                                name: 'c'
                              },
                              right: {
                                type: 'Identifier',
                                start: 4199,
                                end: 4200,
                                name: 'd'
                              }
                            },
                            consequent: {
                              type: 'SequenceExpression',
                              start: 4202,
                              end: 4275,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 4202,
                                  end: 4215,
                                  operator: '=',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 4202,
                                    end: 4213,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 4202,
                                      end: 4203,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 4204,
                                      end: 4213,
                                      name: 'sortIndex'
                                    }
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 4214,
                                    end: 4215,
                                    name: 'c'
                                  }
                                },
                                {
                                  type: 'CallExpression',
                                  start: 4216,
                                  end: 4222,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 4216,
                                    end: 4217,
                                    name: 'f'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 4218,
                                      end: 4219,
                                      name: 't'
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 4220,
                                      end: 4221,
                                      name: 'a'
                                    }
                                  ]
                                },
                                {
                                  type: 'LogicalExpression',
                                  start: 4223,
                                  end: 4275,
                                  operator: '&&',
                                  left: {
                                    type: 'LogicalExpression',
                                    start: 4223,
                                    end: 4244,
                                    operator: '&&',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 4223,
                                      end: 4234,
                                      operator: '===',
                                      left: {
                                        type: 'Literal',
                                        start: 4223,
                                        end: 4227,
                                        raw: 'null',
                                        value: null
                                      },
                                      right: {
                                        type: 'CallExpression',
                                        start: 4230,
                                        end: 4234,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 4230,
                                          end: 4231,
                                          name: 'h'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 4232,
                                            end: 4233,
                                            name: 'r'
                                          }
                                        ]
                                      }
                                    },
                                    right: {
                                      type: 'BinaryExpression',
                                      start: 4236,
                                      end: 4244,
                                      operator: '===',
                                      left: {
                                        type: 'Identifier',
                                        start: 4236,
                                        end: 4237,
                                        name: 'a'
                                      },
                                      right: {
                                        type: 'CallExpression',
                                        start: 4240,
                                        end: 4244,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 4240,
                                          end: 4241,
                                          name: 'h'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 4242,
                                            end: 4243,
                                            name: 't'
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  right: {
                                    type: 'SequenceExpression',
                                    start: 4247,
                                    end: 4274,
                                    expressions: [
                                      {
                                        type: 'ConditionalExpression',
                                        start: 4247,
                                        end: 4265,
                                        test: {
                                          type: 'Identifier',
                                          start: 4247,
                                          end: 4248,
                                          name: 'B'
                                        },
                                        consequent: {
                                          type: 'SequenceExpression',
                                          start: 4250,
                                          end: 4259,
                                          expressions: [
                                            {
                                              type: 'CallExpression',
                                              start: 4250,
                                              end: 4254,
                                              optional: false,
                                              callee: {
                                                type: 'Identifier',
                                                start: 4250,
                                                end: 4251,
                                                name: 'E'
                                              },
                                              arguments: [
                                                {
                                                  type: 'Identifier',
                                                  start: 4252,
                                                  end: 4253,
                                                  name: 'L'
                                                }
                                              ]
                                            },
                                            {
                                              type: 'AssignmentExpression',
                                              start: 4255,
                                              end: 4259,
                                              operator: '=',
                                              left: {
                                                type: 'Identifier',
                                                start: 4255,
                                                end: 4256,
                                                name: 'L'
                                              },
                                              right: {
                                                type: 'UnaryExpression',
                                                start: 4257,
                                                end: 4259,
                                                operator: '-',
                                                argument: {
                                                  type: 'Literal',
                                                  start: 4258,
                                                  end: 4259,
                                                  raw: '1',
                                                  value: 1
                                                },
                                                prefix: true
                                              }
                                            }
                                          ]
                                        },
                                        alternate: {
                                          type: 'AssignmentExpression',
                                          start: 4261,
                                          end: 4265,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 4261,
                                            end: 4262,
                                            name: 'B'
                                          },
                                          right: {
                                            type: 'UnaryExpression',
                                            start: 4263,
                                            end: 4265,
                                            operator: '!',
                                            argument: {
                                              type: 'Literal',
                                              start: 4264,
                                              end: 4265,
                                              raw: '0',
                                              value: 0
                                            },
                                            prefix: true
                                          }
                                        }
                                      },
                                      {
                                        type: 'CallExpression',
                                        start: 4266,
                                        end: 4274,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 4266,
                                          end: 4267,
                                          name: 'K'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 4268,
                                            end: 4269,
                                            name: 'H'
                                          },
                                          {
                                            type: 'BinaryExpression',
                                            start: 4270,
                                            end: 4273,
                                            operator: '-',
                                            left: {
                                              type: 'Identifier',
                                              start: 4270,
                                              end: 4271,
                                              name: 'c'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 4272,
                                              end: 4273,
                                              name: 'd'
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            alternate: {
                              type: 'SequenceExpression',
                              start: 4278,
                              end: 4316,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 4278,
                                  end: 4291,
                                  operator: '=',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 4278,
                                    end: 4289,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 4278,
                                      end: 4279,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 4280,
                                      end: 4289,
                                      name: 'sortIndex'
                                    }
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 4290,
                                    end: 4291,
                                    name: 'e'
                                  }
                                },
                                {
                                  type: 'CallExpression',
                                  start: 4292,
                                  end: 4298,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 4292,
                                    end: 4293,
                                    name: 'f'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 4294,
                                      end: 4295,
                                      name: 'r'
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 4296,
                                      end: 4297,
                                      name: 'a'
                                    }
                                  ]
                                },
                                {
                                  type: 'LogicalExpression',
                                  start: 4299,
                                  end: 4316,
                                  operator: '||',
                                  left: {
                                    type: 'LogicalExpression',
                                    start: 4299,
                                    end: 4303,
                                    operator: '||',
                                    left: {
                                      type: 'Identifier',
                                      start: 4299,
                                      end: 4300,
                                      name: 'A'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 4302,
                                      end: 4303,
                                      name: 'z'
                                    }
                                  },
                                  right: {
                                    type: 'SequenceExpression',
                                    start: 4306,
                                    end: 4315,
                                    expressions: [
                                      {
                                        type: 'AssignmentExpression',
                                        start: 4306,
                                        end: 4310,
                                        operator: '=',
                                        left: {
                                          type: 'Identifier',
                                          start: 4306,
                                          end: 4307,
                                          name: 'A'
                                        },
                                        right: {
                                          type: 'UnaryExpression',
                                          start: 4308,
                                          end: 4310,
                                          operator: '!',
                                          argument: {
                                            type: 'Literal',
                                            start: 4309,
                                            end: 4310,
                                            raw: '0',
                                            value: 0
                                          },
                                          prefix: true
                                        }
                                      },
                                      {
                                        type: 'CallExpression',
                                        start: 4311,
                                        end: 4315,
                                        optional: false,
                                        callee: {
                                          type: 'Identifier',
                                          start: 4311,
                                          end: 4312,
                                          name: 'I'
                                        },
                                        arguments: [
                                          {
                                            type: 'Identifier',
                                            start: 4313,
                                            end: 4314,
                                            name: 'J'
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          type: 'ReturnStatement',
                          start: 4318,
                          end: 4326,
                          argument: {
                            type: 'Identifier',
                            start: 4325,
                            end: 4326,
                            name: 'a'
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 4330,
                end: 4361,
                expression: {
                  type: 'AssignmentExpression',
                  start: 4330,
                  end: 4360,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 4330,
                    end: 4358,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 4330,
                      end: 4337,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 4338,
                      end: 4358,
                      name: 'unstable_shouldYield'
                    }
                  },
                  right: {
                    type: 'Identifier',
                    start: 4359,
                    end: 4360,
                    name: 'M'
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                start: 4361,
                end: 4491,
                expression: {
                  type: 'AssignmentExpression',
                  start: 4361,
                  end: 4490,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 4361,
                    end: 4390,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 4361,
                      end: 4368,
                      name: 'exports'
                    },
                    property: {
                      type: 'Identifier',
                      start: 4369,
                      end: 4390,
                      name: 'unstable_wrapCallback'
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    start: 4391,
                    end: 4490,
                    async: false,
                    generator: false,
                    id: null,
                    params: [
                      {
                        type: 'Identifier',
                        start: 4400,
                        end: 4401,
                        name: 'a'
                      }
                    ],
                    body: {
                      type: 'BlockStatement',
                      start: 4402,
                      end: 4490,
                      body: [
                        {
                          type: 'VariableDeclaration',
                          start: 4403,
                          end: 4411,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 4407,
                              end: 4410,
                              id: {
                                type: 'Identifier',
                                start: 4407,
                                end: 4408,
                                name: 'b'
                              },
                              init: {
                                type: 'Identifier',
                                start: 4409,
                                end: 4410,
                                name: 'y'
                              }
                            }
                          ]
                        },
                        {
                          type: 'ReturnStatement',
                          start: 4411,
                          end: 4489,
                          argument: {
                            type: 'FunctionExpression',
                            start: 4418,
                            end: 4489,
                            async: false,
                            generator: false,
                            id: null,
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              start: 4428,
                              end: 4489,
                              body: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 4429,
                                  end: 4437,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 4433,
                                      end: 4436,
                                      id: {
                                        type: 'Identifier',
                                        start: 4433,
                                        end: 4434,
                                        name: 'c'
                                      },
                                      init: {
                                        type: 'Identifier',
                                        start: 4435,
                                        end: 4436,
                                        name: 'y'
                                      }
                                    }
                                  ]
                                },
                                {
                                  type: 'ExpressionStatement',
                                  start: 4437,
                                  end: 4441,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 4437,
                                    end: 4440,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 4437,
                                      end: 4438,
                                      name: 'y'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 4439,
                                      end: 4440,
                                      name: 'b'
                                    }
                                  }
                                },
                                {
                                  type: 'TryStatement',
                                  start: 4441,
                                  end: 4488,
                                  block: {
                                    type: 'BlockStatement',
                                    start: 4444,
                                    end: 4476,
                                    body: [
                                      {
                                        type: 'ReturnStatement',
                                        start: 4445,
                                        end: 4475,
                                        argument: {
                                          type: 'CallExpression',
                                          start: 4452,
                                          end: 4475,
                                          optional: false,
                                          callee: {
                                            type: 'MemberExpression',
                                            start: 4452,
                                            end: 4459,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 4452,
                                              end: 4453,
                                              name: 'a'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 4454,
                                              end: 4459,
                                              name: 'apply'
                                            }
                                          },
                                          arguments: [
                                            {
                                              type: 'ThisExpression',
                                              start: 4460,
                                              end: 4464
                                            },
                                            {
                                              type: 'Identifier',
                                              start: 4465,
                                              end: 4474,
                                              name: 'arguments'
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  handler: null,
                                  finalizer: {
                                    type: 'BlockStatement',
                                    start: 4483,
                                    end: 4488,
                                    body: [
                                      {
                                        type: 'ExpressionStatement',
                                        start: 4484,
                                        end: 4487,
                                        expression: {
                                          type: 'AssignmentExpression',
                                          start: 4484,
                                          end: 4487,
                                          operator: '=',
                                          left: {
                                            type: 'Identifier',
                                            start: 4484,
                                            end: 4485,
                                            name: 'y'
                                          },
                                          right: {
                                            type: 'Identifier',
                                            start: 4486,
                                            end: 4487,
                                            name: 'c'
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            expression: false
                          }
                        }
                      ]
                    },
                    expression: false
                  }
                }
              }
            ]
          },
          expression: false
        },
        arguments: [
          {
            type: 'Identifier',
            start: 4496,
            end: 4520,
            name: 'scheduler_production_min'
          }
        ]
      }
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 4525,
      end: 4619,
      declaration: {
        type: 'CallExpression',
        start: 4553,
        end: 4618,
        optional: false,
        _rollupAnnotations: [ { end: 4553, start: 4540, type: 'pure' } ],
        callee: {
          type: 'MemberExpression',
          start: 4553,
          end: 4592,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 4553,
            end: 4568,
            name: 'commonjsHelpers'
          },
          property: {
            type: 'Identifier',
            start: 4569,
            end: 4592,
            name: 'getDefaultExportFromCjs'
          }
        },
        arguments: [
          {
            type: 'Identifier',
            start: 4593,
            end: 4617,
            name: 'scheduler_production_min'
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 4620,
      end: 4675,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 4629,
          end: 4672,
          local: {
            type: 'Identifier',
            start: 4629,
            end: 4653,
            name: 'scheduler_production_min'
          },
          exported: {
            type: 'Identifier',
            start: 4657,
            end: 4672,
            name: '__moduleExports'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 689,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 55,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 7,
          end: 27,
          local: {
            type: 'Identifier',
            start: 12,
            end: 27,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 33,
        end: 54,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 56,
      end: 189,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 65,
          end: 92,
          imported: { type: 'Identifier', start: 65, end: 73, name: '__module' },
          local: {
            type: 'Identifier',
            start: 77,
            end: 92,
            name: 'schedulerModule'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 100,
        end: 188,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js?commonjs-module',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js?commonjs-module"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 190,
      end: 230,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 194,
          end: 229,
          id: {
            type: 'Identifier',
            start: 194,
            end: 203,
            name: 'scheduler'
          },
          init: {
            type: 'MemberExpression',
            start: 206,
            end: 229,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 206,
              end: 221,
              name: 'schedulerModule'
            },
            property: {
              type: 'Identifier',
              start: 222,
              end: 229,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ImportDeclaration',
      start: 231,
      end: 365,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 238,
          end: 248,
          local: {
            type: 'Identifier',
            start: 238,
            end: 248,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 254,
        end: 364,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 367,
      end: 380,
      expression: {
        type: 'Literal',
        start: 367,
        end: 379,
        value: 'use strict',
        raw: '"use strict"'
      }
    },
    {
      type: 'IfStatement',
      start: 381,
      end: 505,
      test: {
        type: 'Literal',
        start: 385,
        end: 389,
        value: true,
        raw: 'true'
      },
      consequent: {
        type: 'BlockStatement',
        start: 391,
        end: 434,
        body: [
          {
            type: 'ExpressionStatement',
            start: 395,
            end: 432,
            expression: {
              type: 'AssignmentExpression',
              start: 395,
              end: 431,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 395,
                end: 418,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 395,
                  end: 410,
                  name: 'schedulerModule'
                },
                property: {
                  type: 'Identifier',
                  start: 411,
                  end: 418,
                  name: 'exports'
                }
              },
              right: {
                type: 'Identifier',
                start: 421,
                end: 431,
                name: 'require$$0'
              }
            }
          }
        ]
      },
      alternate: {
        type: 'BlockStatement',
        start: 440,
        end: 505,
        body: [
          {
            type: 'ExpressionStatement',
            start: 444,
            end: 503,
            expression: {
              type: 'AssignmentExpression',
              start: 444,
              end: 502,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 444,
                end: 458,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 444,
                  end: 450,
                  name: 'module'
                },
                property: {
                  type: 'Identifier',
                  start: 451,
                  end: 458,
                  name: 'exports'
                }
              },
              right: {
                type: 'CallExpression',
                start: 461,
                end: 502,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 461,
                  end: 468,
                  name: 'require'
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 469,
                    end: 501,
                    value: './cjs/scheduler.development.js',
                    raw: '"./cjs/scheduler.development.js"'
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 507,
      end: 554,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 511,
          end: 553,
          id: {
            type: 'Identifier',
            start: 511,
            end: 527,
            name: 'schedulerExports'
          },
          init: {
            type: 'MemberExpression',
            start: 530,
            end: 553,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 530,
              end: 545,
              name: 'schedulerModule'
            },
            property: {
              type: 'Identifier',
              start: 546,
              end: 553,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 555,
      end: 641,
      declaration: {
        type: 'CallExpression',
        start: 583,
        end: 640,
        optional: false,
        _rollupAnnotations: [ { end: 583, start: 570, type: 'pure' } ],
        callee: {
          type: 'MemberExpression',
          start: 583,
          end: 622,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 583,
            end: 598,
            name: 'commonjsHelpers'
          },
          property: {
            type: 'Identifier',
            start: 599,
            end: 622,
            name: 'getDefaultExportFromCjs'
          }
        },
        arguments: [
          {
            type: 'Identifier',
            start: 623,
            end: 639,
            name: 'schedulerExports'
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 642,
      end: 689,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 651,
          end: 686,
          local: {
            type: 'Identifier',
            start: 651,
            end: 667,
            name: 'schedulerExports'
          },
          exported: {
            type: 'Identifier',
            start: 671,
            end: 686,
            name: '__moduleExports'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 132910,
  body: [
    {
      type: 'ImportDeclaration',
      start: 241,
      end: 296,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 248,
          end: 268,
          local: {
            type: 'Identifier',
            start: 253,
            end: 268,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 274,
        end: 295,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 297,
      end: 463,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 306,
          end: 342,
          imported: {
            type: 'Identifier',
            start: 306,
            end: 315,
            name: '__exports'
          },
          local: {
            type: 'Identifier',
            start: 319,
            end: 342,
            name: 'reactDom_production_min'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 350,
        end: 462,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js?commonjs-exports',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js?commonjs-exports"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 464,
      end: 571,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 471,
          end: 481,
          local: {
            type: 'Identifier',
            start: 471,
            end: 481,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 487,
        end: 570,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react/index.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 572,
      end: 683,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 579,
          end: 589,
          local: {
            type: 'Identifier',
            start: 579,
            end: 589,
            name: 'require$$1'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 595,
        end: 682,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 732,
      end: 745,
      expression: {
        type: 'Literal',
        start: 732,
        end: 744,
        value: 'use strict',
        raw: "'use strict'"
      }
    },
    {
      type: 'VariableDeclaration',
      start: 745,
      end: 777,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 749,
          end: 762,
          id: { type: 'Identifier', start: 749, end: 751, name: 'aa' },
          init: {
            type: 'Identifier',
            start: 752,
            end: 762,
            name: 'require$$0'
          }
        },
        {
          type: 'VariableDeclarator',
          start: 763,
          end: 776,
          id: { type: 'Identifier', start: 763, end: 765, name: 'ca' },
          init: {
            type: 'Identifier',
            start: 766,
            end: 776,
            name: 'require$$1'
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 777,
      end: 1093,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 786, end: 787, name: 'p' },
      params: [ { type: 'Identifier', start: 788, end: 789, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 790,
        end: 1093,
        body: [
          {
            type: 'ForStatement',
            start: 791,
            end: 934,
            init: {
              type: 'VariableDeclaration',
              start: 795,
              end: 863,
              kind: 'var',
              declarations: [
                {
                  type: 'VariableDeclarator',
                  start: 799,
                  end: 859,
                  id: {
                    type: 'Identifier',
                    start: 799,
                    end: 800,
                    name: 'b'
                  },
                  init: {
                    type: 'BinaryExpression',
                    start: 801,
                    end: 859,
                    operator: '+',
                    left: {
                      type: 'Literal',
                      start: 801,
                      end: 857,
                      value: 'https://reactjs.org/docs/error-decoder.html?invariant=',
                      raw: '"https://reactjs.org/docs/error-decoder.html?invariant="'
                    },
                    right: {
                      type: 'Identifier',
                      start: 858,
                      end: 859,
                      name: 'a'
                    }
                  }
                },
                {
                  type: 'VariableDeclarator',
                  start: 860,
                  end: 863,
                  id: {
                    type: 'Identifier',
                    start: 860,
                    end: 861,
                    name: 'c'
                  },
                  init: {
                    type: 'Literal',
                    start: 862,
                    end: 863,
                    raw: '1',
                    value: 1
                  }
                }
              ]
            },
            test: {
              type: 'BinaryExpression',
              start: 864,
              end: 882,
              operator: '<',
              left: { type: 'Identifier', start: 864, end: 865, name: 'c' },
              right: {
                type: 'MemberExpression',
                start: 866,
                end: 882,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 866,
                  end: 875,
                  name: 'arguments'
                },
                property: {
                  type: 'Identifier',
                  start: 876,
                  end: 882,
                  name: 'length'
                }
              }
            },
            update: {
              type: 'UpdateExpression',
              start: 883,
              end: 886,
              prefix: false,
              operator: '++',
              argument: { type: 'Identifier', start: 883, end: 884, name: 'c' }
            },
            body: {
              type: 'ExpressionStatement',
              start: 887,
              end: 934,
              expression: {
                type: 'AssignmentExpression',
                start: 887,
                end: 933,
                operator: '+=',
                left: { type: 'Identifier', start: 887, end: 888, name: 'b' },
                right: {
                  type: 'BinaryExpression',
                  start: 890,
                  end: 933,
                  operator: '+',
                  left: {
                    type: 'Literal',
                    start: 890,
                    end: 900,
                    value: '&args[]=',
                    raw: '"&args[]="'
                  },
                  right: {
                    type: 'CallExpression',
                    start: 901,
                    end: 933,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 901,
                      end: 919,
                      name: 'encodeURIComponent'
                    },
                    arguments: [
                      {
                        type: 'MemberExpression',
                        start: 920,
                        end: 932,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 920,
                          end: 929,
                          name: 'arguments'
                        },
                        property: {
                          type: 'Identifier',
                          start: 930,
                          end: 931,
                          name: 'c'
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 934,
            end: 1092,
            argument: {
              type: 'BinaryExpression',
              start: 940,
              end: 1092,
              operator: '+',
              left: {
                type: 'BinaryExpression',
                start: 940,
                end: 979,
                operator: '+',
                left: {
                  type: 'BinaryExpression',
                  start: 940,
                  end: 977,
                  operator: '+',
                  left: {
                    type: 'BinaryExpression',
                    start: 940,
                    end: 966,
                    operator: '+',
                    left: {
                      type: 'Literal',
                      start: 940,
                      end: 964,
                      value: 'Minified React error #',
                      raw: '"Minified React error #"'
                    },
                    right: {
                      type: 'Identifier',
                      start: 965,
                      end: 966,
                      name: 'a'
                    }
                  },
                  right: {
                    type: 'Literal',
                    start: 967,
                    end: 977,
                    value: '; visit ',
                    raw: '"; visit "'
                  }
                },
                right: { type: 'Identifier', start: 978, end: 979, name: 'b' }
              },
              right: {
                type: 'Literal',
                start: 980,
                end: 1092,
                value: ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.',
                raw: '" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."'
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 1093,
      end: 1114,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1097,
          end: 1107,
          id: { type: 'Identifier', start: 1097, end: 1099, name: 'da' },
          init: {
            type: 'NewExpression',
            start: 1100,
            end: 1107,
            callee: { type: 'Identifier', start: 1104, end: 1107, name: 'Set' },
            arguments: []
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1108,
          end: 1113,
          id: { type: 'Identifier', start: 1108, end: 1110, name: 'ea' },
          init: {
            type: 'ObjectExpression',
            start: 1111,
            end: 1113,
            properties: []
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 1114,
      end: 1157,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1123, end: 1125, name: 'fa' },
      params: [
        { type: 'Identifier', start: 1126, end: 1127, name: 'a' },
        { type: 'Identifier', start: 1128, end: 1129, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1130,
        end: 1157,
        body: [
          {
            type: 'ExpressionStatement',
            start: 1131,
            end: 1139,
            expression: {
              type: 'CallExpression',
              start: 1131,
              end: 1138,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 1131,
                end: 1133,
                name: 'ha'
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 1134,
                  end: 1135,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 1136,
                  end: 1137,
                  name: 'b'
                }
              ]
            }
          },
          {
            type: 'ExpressionStatement',
            start: 1139,
            end: 1156,
            expression: {
              type: 'CallExpression',
              start: 1139,
              end: 1156,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 1139,
                end: 1141,
                name: 'ha'
              },
              arguments: [
                {
                  type: 'BinaryExpression',
                  start: 1142,
                  end: 1153,
                  operator: '+',
                  left: {
                    type: 'Identifier',
                    start: 1142,
                    end: 1143,
                    name: 'a'
                  },
                  right: {
                    type: 'Literal',
                    start: 1144,
                    end: 1153,
                    value: 'Capture',
                    raw: '"Capture"'
                  }
                },
                {
                  type: 'Identifier',
                  start: 1154,
                  end: 1155,
                  name: 'b'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 1158,
      end: 1219,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1167, end: 1169, name: 'ha' },
      params: [
        { type: 'Identifier', start: 1170, end: 1171, name: 'a' },
        { type: 'Identifier', start: 1172, end: 1173, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1174,
        end: 1219,
        body: [
          {
            type: 'ExpressionStatement',
            start: 1175,
            end: 1183,
            expression: {
              type: 'AssignmentExpression',
              start: 1175,
              end: 1182,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1175,
                end: 1180,
                computed: true,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1175,
                  end: 1177,
                  name: 'ea'
                },
                property: {
                  type: 'Identifier',
                  start: 1178,
                  end: 1179,
                  name: 'a'
                }
              },
              right: { type: 'Identifier', start: 1181, end: 1182, name: 'b' }
            }
          },
          {
            type: 'ForStatement',
            start: 1183,
            end: 1218,
            init: {
              type: 'AssignmentExpression',
              start: 1187,
              end: 1190,
              operator: '=',
              left: { type: 'Identifier', start: 1187, end: 1188, name: 'a' },
              right: {
                type: 'Literal',
                start: 1189,
                end: 1190,
                raw: '0',
                value: 0
              }
            },
            test: {
              type: 'BinaryExpression',
              start: 1191,
              end: 1201,
              operator: '<',
              left: { type: 'Identifier', start: 1191, end: 1192, name: 'a' },
              right: {
                type: 'MemberExpression',
                start: 1193,
                end: 1201,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1193,
                  end: 1194,
                  name: 'b'
                },
                property: {
                  type: 'Identifier',
                  start: 1195,
                  end: 1201,
                  name: 'length'
                }
              }
            },
            update: {
              type: 'UpdateExpression',
              start: 1202,
              end: 1205,
              prefix: false,
              operator: '++',
              argument: { type: 'Identifier', start: 1202, end: 1203, name: 'a' }
            },
            body: {
              type: 'ExpressionStatement',
              start: 1206,
              end: 1218,
              expression: {
                type: 'CallExpression',
                start: 1206,
                end: 1218,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 1206,
                  end: 1212,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 1206,
                    end: 1208,
                    name: 'da'
                  },
                  property: {
                    type: 'Identifier',
                    start: 1209,
                    end: 1212,
                    name: 'add'
                  }
                },
                arguments: [
                  {
                    type: 'MemberExpression',
                    start: 1213,
                    end: 1217,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 1213,
                      end: 1214,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 1215,
                      end: 1216,
                      name: 'a'
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 1220,
      end: 1749,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 1224,
          end: 1347,
          id: { type: 'Identifier', start: 1224, end: 1226, name: 'ia' },
          init: {
            type: 'UnaryExpression',
            start: 1227,
            end: 1347,
            operator: '!',
            argument: {
              type: 'LogicalExpression',
              start: 1229,
              end: 1346,
              operator: '||',
              left: {
                type: 'LogicalExpression',
                start: 1229,
                end: 1294,
                operator: '||',
                left: {
                  type: 'BinaryExpression',
                  start: 1229,
                  end: 1256,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 1229,
                    end: 1240,
                    value: 'undefined',
                    raw: '"undefined"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 1243,
                    end: 1256,
                    operator: 'typeof',
                    argument: {
                      type: 'Identifier',
                      start: 1250,
                      end: 1256,
                      name: 'window'
                    },
                    prefix: true
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 1258,
                  end: 1294,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 1258,
                    end: 1269,
                    value: 'undefined',
                    raw: '"undefined"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 1272,
                    end: 1294,
                    operator: 'typeof',
                    argument: {
                      type: 'MemberExpression',
                      start: 1279,
                      end: 1294,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1279,
                        end: 1285,
                        name: 'window'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1286,
                        end: 1294,
                        name: 'document'
                      }
                    },
                    prefix: true
                  }
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 1296,
                end: 1346,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 1296,
                  end: 1307,
                  value: 'undefined',
                  raw: '"undefined"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 1310,
                  end: 1346,
                  operator: 'typeof',
                  argument: {
                    type: 'MemberExpression',
                    start: 1317,
                    end: 1346,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'MemberExpression',
                      start: 1317,
                      end: 1332,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 1317,
                        end: 1323,
                        name: 'window'
                      },
                      property: {
                        type: 'Identifier',
                        start: 1324,
                        end: 1332,
                        name: 'document'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 1333,
                      end: 1346,
                      name: 'createElement'
                    }
                  },
                  prefix: true
                }
              }
            },
            prefix: true
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1348,
          end: 1382,
          id: { type: 'Identifier', start: 1348, end: 1350, name: 'ja' },
          init: {
            type: 'MemberExpression',
            start: 1351,
            end: 1382,
            computed: false,
            optional: false,
            object: {
              type: 'MemberExpression',
              start: 1351,
              end: 1367,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 1351,
                end: 1357,
                name: 'Object'
              },
              property: {
                type: 'Identifier',
                start: 1358,
                end: 1367,
                name: 'prototype'
              }
            },
            property: {
              type: 'Identifier',
              start: 1368,
              end: 1382,
              name: 'hasOwnProperty'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1383,
          end: 1735,
          id: { type: 'Identifier', start: 1383, end: 1385, name: 'ka' },
          init: {
            type: 'Literal',
            start: 1386,
            end: 1735,
            raw: '/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/',
            regex: {
              flags: '',
              pattern: '^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$'
            },
            value: /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1736,
          end: 1742,
          id: { type: 'Identifier', start: 1736, end: 1738, name: 'la' },
          init: {
            type: 'ObjectExpression',
            start: 1740,
            end: 1742,
            properties: []
          }
        },
        {
          type: 'VariableDeclarator',
          start: 1743,
          end: 1748,
          id: { type: 'Identifier', start: 1743, end: 1745, name: 'ma' },
          init: {
            type: 'ObjectExpression',
            start: 1746,
            end: 1748,
            properties: []
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 1749,
      end: 1864,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1758, end: 1760, name: 'oa' },
      params: [ { type: 'Identifier', start: 1761, end: 1762, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 1763,
        end: 1864,
        body: [
          {
            type: 'IfStatement',
            start: 1764,
            end: 1790,
            test: {
              type: 'CallExpression',
              start: 1767,
              end: 1780,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 1767,
                end: 1774,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1767,
                  end: 1769,
                  name: 'ja'
                },
                property: {
                  type: 'Identifier',
                  start: 1770,
                  end: 1774,
                  name: 'call'
                }
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 1775,
                  end: 1777,
                  name: 'ma'
                },
                {
                  type: 'Identifier',
                  start: 1778,
                  end: 1779,
                  name: 'a'
                }
              ]
            },
            consequent: {
              type: 'ReturnStatement',
              start: 1781,
              end: 1790,
              argument: {
                type: 'UnaryExpression',
                start: 1787,
                end: 1789,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 1788,
                  end: 1789,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 1790,
            end: 1816,
            test: {
              type: 'CallExpression',
              start: 1793,
              end: 1806,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 1793,
                end: 1800,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1793,
                  end: 1795,
                  name: 'ja'
                },
                property: {
                  type: 'Identifier',
                  start: 1796,
                  end: 1800,
                  name: 'call'
                }
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 1801,
                  end: 1803,
                  name: 'la'
                },
                {
                  type: 'Identifier',
                  start: 1804,
                  end: 1805,
                  name: 'a'
                }
              ]
            },
            consequent: {
              type: 'ReturnStatement',
              start: 1807,
              end: 1816,
              argument: {
                type: 'UnaryExpression',
                start: 1813,
                end: 1815,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 1814,
                  end: 1815,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 1816,
            end: 1846,
            test: {
              type: 'CallExpression',
              start: 1819,
              end: 1829,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 1819,
                end: 1826,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1819,
                  end: 1821,
                  name: 'ka'
                },
                property: {
                  type: 'Identifier',
                  start: 1822,
                  end: 1826,
                  name: 'test'
                }
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 1827,
                  end: 1828,
                  name: 'a'
                }
              ]
            },
            consequent: {
              type: 'ReturnStatement',
              start: 1830,
              end: 1846,
              argument: {
                type: 'AssignmentExpression',
                start: 1837,
                end: 1845,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 1837,
                  end: 1842,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 1837,
                    end: 1839,
                    name: 'ma'
                  },
                  property: {
                    type: 'Identifier',
                    start: 1840,
                    end: 1841,
                    name: 'a'
                  }
                },
                right: {
                  type: 'UnaryExpression',
                  start: 1843,
                  end: 1845,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 1844,
                    end: 1845,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                }
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 1846,
            end: 1855,
            expression: {
              type: 'AssignmentExpression',
              start: 1846,
              end: 1854,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 1846,
                end: 1851,
                computed: true,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 1846,
                  end: 1848,
                  name: 'la'
                },
                property: {
                  type: 'Identifier',
                  start: 1849,
                  end: 1850,
                  name: 'a'
                }
              },
              right: {
                type: 'UnaryExpression',
                start: 1852,
                end: 1854,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 1853,
                  end: 1854,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 1855,
            end: 1863,
            argument: {
              type: 'UnaryExpression',
              start: 1861,
              end: 1863,
              operator: '!',
              argument: {
                type: 'Literal',
                start: 1862,
                end: 1863,
                raw: '1',
                value: 1
              },
              prefix: true
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 1864,
      end: 2118,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 1873, end: 1875, name: 'pa' },
      params: [
        { type: 'Identifier', start: 1876, end: 1877, name: 'a' },
        { type: 'Identifier', start: 1878, end: 1879, name: 'b' },
        { type: 'Identifier', start: 1880, end: 1881, name: 'c' },
        { type: 'Identifier', start: 1882, end: 1883, name: 'd' }
      ],
      body: {
        type: 'BlockStatement',
        start: 1884,
        end: 2118,
        body: [
          {
            type: 'IfStatement',
            start: 1885,
            end: 1918,
            test: {
              type: 'LogicalExpression',
              start: 1888,
              end: 1908,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 1888,
                end: 1896,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 1888,
                  end: 1892,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 1895,
                  end: 1896,
                  name: 'c'
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 1898,
                end: 1908,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 1898,
                  end: 1899,
                  raw: '0',
                  value: 0
                },
                right: {
                  type: 'MemberExpression',
                  start: 1902,
                  end: 1908,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 1902,
                    end: 1903,
                    name: 'c'
                  },
                  property: {
                    type: 'Identifier',
                    start: 1904,
                    end: 1908,
                    name: 'type'
                  }
                }
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 1909,
              end: 1918,
              argument: {
                type: 'UnaryExpression',
                start: 1915,
                end: 1917,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 1916,
                  end: 1917,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'SwitchStatement',
            start: 1918,
            end: 2117,
            discriminant: {
              type: 'UnaryExpression',
              start: 1925,
              end: 1933,
              operator: 'typeof',
              argument: { type: 'Identifier', start: 1932, end: 1933, name: 'b' },
              prefix: true
            },
            cases: [
              {
                type: 'SwitchCase',
                start: 1935,
                end: 1951,
                test: {
                  type: 'Literal',
                  start: 1940,
                  end: 1950,
                  value: 'function',
                  raw: '"function"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 1951,
                end: 1974,
                test: {
                  type: 'Literal',
                  start: 1956,
                  end: 1964,
                  value: 'symbol',
                  raw: '"symbol"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 1965,
                    end: 1974,
                    argument: {
                      type: 'UnaryExpression',
                      start: 1971,
                      end: 1973,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 1972,
                        end: 1973,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 1974,
                end: 2100,
                test: {
                  type: 'Literal',
                  start: 1979,
                  end: 1988,
                  value: 'boolean',
                  raw: '"boolean"'
                },
                consequent: [
                  {
                    type: 'IfStatement',
                    start: 1989,
                    end: 2003,
                    test: {
                      type: 'Identifier',
                      start: 1992,
                      end: 1993,
                      name: 'd'
                    },
                    consequent: {
                      type: 'ReturnStatement',
                      start: 1994,
                      end: 2003,
                      argument: {
                        type: 'UnaryExpression',
                        start: 2000,
                        end: 2002,
                        operator: '!',
                        argument: {
                          type: 'Literal',
                          start: 2001,
                          end: 2002,
                          raw: '1',
                          value: 1
                        },
                        prefix: true
                      }
                    },
                    alternate: null
                  },
                  {
                    type: 'IfStatement',
                    start: 2003,
                    end: 2040,
                    test: {
                      type: 'BinaryExpression',
                      start: 2006,
                      end: 2014,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 2006,
                        end: 2010,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'Identifier',
                        start: 2013,
                        end: 2014,
                        name: 'c'
                      }
                    },
                    consequent: {
                      type: 'ReturnStatement',
                      start: 2015,
                      end: 2040,
                      argument: {
                        type: 'UnaryExpression',
                        start: 2021,
                        end: 2039,
                        operator: '!',
                        argument: {
                          type: 'MemberExpression',
                          start: 2022,
                          end: 2039,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 2022,
                            end: 2023,
                            name: 'c'
                          },
                          property: {
                            type: 'Identifier',
                            start: 2024,
                            end: 2039,
                            name: 'acceptsBooleans'
                          }
                        },
                        prefix: true
                      }
                    },
                    alternate: null
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 2040,
                    end: 2069,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 2040,
                      end: 2068,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 2040,
                        end: 2041,
                        name: 'a'
                      },
                      right: {
                        type: 'CallExpression',
                        start: 2042,
                        end: 2068,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 2042,
                          end: 2063,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'CallExpression',
                            start: 2042,
                            end: 2057,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 2042,
                              end: 2055,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 2042,
                                end: 2043,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 2044,
                                end: 2055,
                                name: 'toLowerCase'
                              }
                            },
                            arguments: []
                          },
                          property: {
                            type: 'Identifier',
                            start: 2058,
                            end: 2063,
                            name: 'slice'
                          }
                        },
                        arguments: [
                          {
                            type: 'Literal',
                            start: 2064,
                            end: 2065,
                            raw: '0',
                            value: 0
                          },
                          {
                            type: 'Literal',
                            start: 2066,
                            end: 2067,
                            raw: '5',
                            value: 5
                          }
                        ]
                      }
                    }
                  },
                  {
                    type: 'ReturnStatement',
                    start: 2069,
                    end: 2100,
                    argument: {
                      type: 'LogicalExpression',
                      start: 2075,
                      end: 2099,
                      operator: '&&',
                      left: {
                        type: 'BinaryExpression',
                        start: 2075,
                        end: 2086,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 2075,
                          end: 2082,
                          value: 'data-',
                          raw: '"data-"'
                        },
                        right: {
                          type: 'Identifier',
                          start: 2085,
                          end: 2086,
                          name: 'a'
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 2088,
                        end: 2099,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 2088,
                          end: 2095,
                          value: 'aria-',
                          raw: '"aria-"'
                        },
                        right: {
                          type: 'Identifier',
                          start: 2098,
                          end: 2099,
                          name: 'a'
                        }
                      }
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 2100,
                end: 2116,
                test: null,
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 2108,
                    end: 2116,
                    argument: {
                      type: 'UnaryExpression',
                      start: 2114,
                      end: 2116,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 2115,
                        end: 2116,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2119,
      end: 2335,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2128, end: 2130, name: 'qa' },
      params: [
        { type: 'Identifier', start: 2131, end: 2132, name: 'a' },
        { type: 'Identifier', start: 2133, end: 2134, name: 'b' },
        { type: 'Identifier', start: 2135, end: 2136, name: 'c' },
        { type: 'Identifier', start: 2137, end: 2138, name: 'd' }
      ],
      body: {
        type: 'BlockStatement',
        start: 2139,
        end: 2335,
        body: [
          {
            type: 'IfStatement',
            start: 2140,
            end: 2198,
            test: {
              type: 'LogicalExpression',
              start: 2143,
              end: 2188,
              operator: '||',
              left: {
                type: 'LogicalExpression',
                start: 2143,
                end: 2175,
                operator: '||',
                left: {
                  type: 'BinaryExpression',
                  start: 2143,
                  end: 2151,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 2143,
                    end: 2147,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'Identifier',
                    start: 2150,
                    end: 2151,
                    name: 'b'
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 2153,
                  end: 2175,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 2153,
                    end: 2164,
                    value: 'undefined',
                    raw: '"undefined"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 2167,
                    end: 2175,
                    operator: 'typeof',
                    argument: {
                      type: 'Identifier',
                      start: 2174,
                      end: 2175,
                      name: 'b'
                    },
                    prefix: true
                  }
                }
              },
              right: {
                type: 'CallExpression',
                start: 2177,
                end: 2188,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 2177,
                  end: 2179,
                  name: 'pa'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 2180,
                    end: 2181,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 2182,
                    end: 2183,
                    name: 'b'
                  },
                  {
                    type: 'Identifier',
                    start: 2184,
                    end: 2185,
                    name: 'c'
                  },
                  {
                    type: 'Identifier',
                    start: 2186,
                    end: 2187,
                    name: 'd'
                  }
                ]
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 2189,
              end: 2198,
              argument: {
                type: 'UnaryExpression',
                start: 2195,
                end: 2197,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 2196,
                  end: 2197,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 2198,
            end: 2212,
            test: { type: 'Identifier', start: 2201, end: 2202, name: 'd' },
            consequent: {
              type: 'ReturnStatement',
              start: 2203,
              end: 2212,
              argument: {
                type: 'UnaryExpression',
                start: 2209,
                end: 2211,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 2210,
                  end: 2211,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 2212,
            end: 2326,
            test: {
              type: 'BinaryExpression',
              start: 2215,
              end: 2223,
              operator: '!==',
              left: {
                type: 'Literal',
                start: 2215,
                end: 2219,
                raw: 'null',
                value: null
              },
              right: { type: 'Identifier', start: 2222, end: 2223, name: 'c' }
            },
            consequent: {
              type: 'SwitchStatement',
              start: 2224,
              end: 2326,
              discriminant: {
                type: 'MemberExpression',
                start: 2231,
                end: 2237,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 2231,
                  end: 2232,
                  name: 'c'
                },
                property: {
                  type: 'Identifier',
                  start: 2233,
                  end: 2237,
                  name: 'type'
                }
              },
              cases: [
                {
                  type: 'SwitchCase',
                  start: 2239,
                  end: 2255,
                  test: {
                    type: 'Literal',
                    start: 2244,
                    end: 2245,
                    raw: '3',
                    value: 3
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 2246,
                      end: 2255,
                      argument: {
                        type: 'UnaryExpression',
                        start: 2252,
                        end: 2254,
                        operator: '!',
                        argument: {
                          type: 'Identifier',
                          start: 2253,
                          end: 2254,
                          name: 'b'
                        },
                        prefix: true
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 2255,
                  end: 2275,
                  test: {
                    type: 'Literal',
                    start: 2260,
                    end: 2261,
                    raw: '4',
                    value: 4
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 2262,
                      end: 2275,
                      argument: {
                        type: 'BinaryExpression',
                        start: 2268,
                        end: 2274,
                        operator: '===',
                        left: {
                          type: 'UnaryExpression',
                          start: 2268,
                          end: 2270,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2269,
                            end: 2270,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        right: {
                          type: 'Identifier',
                          start: 2273,
                          end: 2274,
                          name: 'b'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 2275,
                  end: 2298,
                  test: {
                    type: 'Literal',
                    start: 2280,
                    end: 2281,
                    raw: '5',
                    value: 5
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 2282,
                      end: 2298,
                      argument: {
                        type: 'CallExpression',
                        start: 2289,
                        end: 2297,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 2289,
                          end: 2294,
                          name: 'isNaN'
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 2295,
                            end: 2296,
                            name: 'b'
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 2298,
                  end: 2325,
                  test: {
                    type: 'Literal',
                    start: 2303,
                    end: 2304,
                    raw: '6',
                    value: 6
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 2305,
                      end: 2325,
                      argument: {
                        type: 'LogicalExpression',
                        start: 2312,
                        end: 2325,
                        operator: '||',
                        left: {
                          type: 'CallExpression',
                          start: 2312,
                          end: 2320,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 2312,
                            end: 2317,
                            name: 'isNaN'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 2318,
                              end: 2319,
                              name: 'b'
                            }
                          ]
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 2322,
                          end: 2325,
                          operator: '>',
                          left: {
                            type: 'Literal',
                            start: 2322,
                            end: 2323,
                            raw: '1',
                            value: 1
                          },
                          right: {
                            type: 'Identifier',
                            start: 2324,
                            end: 2325,
                            name: 'b'
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 2326,
            end: 2334,
            argument: {
              type: 'UnaryExpression',
              start: 2332,
              end: 2334,
              operator: '!',
              argument: {
                type: 'Literal',
                start: 2333,
                end: 2334,
                raw: '1',
                value: 1
              },
              prefix: true
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 2335,
      end: 2548,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 2344, end: 2345, name: 'v' },
      params: [
        { type: 'Identifier', start: 2346, end: 2347, name: 'a' },
        { type: 'Identifier', start: 2348, end: 2349, name: 'b' },
        { type: 'Identifier', start: 2350, end: 2351, name: 'c' },
        { type: 'Identifier', start: 2352, end: 2353, name: 'd' },
        { type: 'Identifier', start: 2354, end: 2355, name: 'e' },
        { type: 'Identifier', start: 2356, end: 2357, name: 'f' },
        { type: 'Identifier', start: 2358, end: 2359, name: 'g' }
      ],
      body: {
        type: 'BlockStatement',
        start: 2360,
        end: 2548,
        body: [
          {
            type: 'ExpressionStatement',
            start: 2361,
            end: 2402,
            expression: {
              type: 'AssignmentExpression',
              start: 2361,
              end: 2401,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2361,
                end: 2381,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2361, end: 2365 },
                property: {
                  type: 'Identifier',
                  start: 2366,
                  end: 2381,
                  name: 'acceptsBooleans'
                }
              },
              right: {
                type: 'LogicalExpression',
                start: 2382,
                end: 2401,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 2382,
                  end: 2394,
                  operator: '||',
                  left: {
                    type: 'BinaryExpression',
                    start: 2382,
                    end: 2387,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 2382,
                      end: 2383,
                      raw: '2',
                      value: 2
                    },
                    right: {
                      type: 'Identifier',
                      start: 2386,
                      end: 2387,
                      name: 'b'
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 2389,
                    end: 2394,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 2389,
                      end: 2390,
                      raw: '3',
                      value: 3
                    },
                    right: {
                      type: 'Identifier',
                      start: 2393,
                      end: 2394,
                      name: 'b'
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 2396,
                  end: 2401,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 2396,
                    end: 2397,
                    raw: '4',
                    value: 4
                  },
                  right: {
                    type: 'Identifier',
                    start: 2400,
                    end: 2401,
                    name: 'b'
                  }
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2402,
            end: 2423,
            expression: {
              type: 'AssignmentExpression',
              start: 2402,
              end: 2422,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2402,
                end: 2420,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2402, end: 2406 },
                property: {
                  type: 'Identifier',
                  start: 2407,
                  end: 2420,
                  name: 'attributeName'
                }
              },
              right: { type: 'Identifier', start: 2421, end: 2422, name: 'd' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2423,
            end: 2449,
            expression: {
              type: 'AssignmentExpression',
              start: 2423,
              end: 2448,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2423,
                end: 2446,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2423, end: 2427 },
                property: {
                  type: 'Identifier',
                  start: 2428,
                  end: 2446,
                  name: 'attributeNamespace'
                }
              },
              right: { type: 'Identifier', start: 2447, end: 2448, name: 'e' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2449,
            end: 2472,
            expression: {
              type: 'AssignmentExpression',
              start: 2449,
              end: 2471,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2449,
                end: 2469,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2449, end: 2453 },
                property: {
                  type: 'Identifier',
                  start: 2454,
                  end: 2469,
                  name: 'mustUseProperty'
                }
              },
              right: { type: 'Identifier', start: 2470, end: 2471, name: 'c' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2472,
            end: 2492,
            expression: {
              type: 'AssignmentExpression',
              start: 2472,
              end: 2491,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2472,
                end: 2489,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2472, end: 2476 },
                property: {
                  type: 'Identifier',
                  start: 2477,
                  end: 2489,
                  name: 'propertyName'
                }
              },
              right: { type: 'Identifier', start: 2490, end: 2491, name: 'a' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2492,
            end: 2504,
            expression: {
              type: 'AssignmentExpression',
              start: 2492,
              end: 2503,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2492,
                end: 2501,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2492, end: 2496 },
                property: {
                  type: 'Identifier',
                  start: 2497,
                  end: 2501,
                  name: 'type'
                }
              },
              right: { type: 'Identifier', start: 2502, end: 2503, name: 'b' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2504,
            end: 2523,
            expression: {
              type: 'AssignmentExpression',
              start: 2504,
              end: 2522,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2504,
                end: 2520,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2504, end: 2508 },
                property: {
                  type: 'Identifier',
                  start: 2509,
                  end: 2520,
                  name: 'sanitizeURL'
                }
              },
              right: { type: 'Identifier', start: 2521, end: 2522, name: 'f' }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 2523,
            end: 2547,
            expression: {
              type: 'AssignmentExpression',
              start: 2523,
              end: 2547,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 2523,
                end: 2545,
                computed: false,
                optional: false,
                object: { type: 'ThisExpression', start: 2523, end: 2527 },
                property: {
                  type: 'Identifier',
                  start: 2528,
                  end: 2545,
                  name: 'removeEmptyString'
                }
              },
              right: { type: 'Identifier', start: 2546, end: 2547, name: 'g' }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 2548,
      end: 2557,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 2552,
          end: 2556,
          id: { type: 'Identifier', start: 2552, end: 2553, name: 'z' },
          init: {
            type: 'ObjectExpression',
            start: 2554,
            end: 2556,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 2558,
      end: 2758,
      expression: {
        type: 'CallExpression',
        start: 2558,
        end: 2757,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 2558,
          end: 2711,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 2558,
            end: 2703,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 2558,
              end: 2698,
              computed: false,
              optional: false,
              object: {
                type: 'Literal',
                start: 2558,
                end: 2692,
                value: 'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style',
                raw: '"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"'
              },
              property: {
                type: 'Identifier',
                start: 2693,
                end: 2698,
                name: 'split'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 2699,
                end: 2702,
                value: ' ',
                raw: '" "'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 2704,
            end: 2711,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 2712,
            end: 2756,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 2721, end: 2722, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 2723,
              end: 2756,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 2724,
                  end: 2755,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 2724,
                    end: 2755,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 2724,
                      end: 2728,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2724,
                        end: 2725,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2726,
                        end: 2727,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 2729,
                      end: 2755,
                      callee: {
                        type: 'Identifier',
                        start: 2733,
                        end: 2734,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 2735,
                          end: 2736,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 2737,
                          end: 2738,
                          raw: '0',
                          value: 0
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2739,
                          end: 2741,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2740,
                            end: 2741,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 2742,
                          end: 2743,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 2744,
                          end: 2748,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2749,
                          end: 2751,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2750,
                            end: 2751,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2752,
                          end: 2754,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2753,
                            end: 2754,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 2758,
      end: 2930,
      expression: {
        type: 'CallExpression',
        start: 2758,
        end: 2929,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 2758,
          end: 2869,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 2758,
            end: 2861,
            elements: [
              {
                type: 'ArrayExpression',
                start: 2759,
                end: 2793,
                elements: [
                  {
                    type: 'Literal',
                    start: 2760,
                    end: 2775,
                    value: 'acceptCharset',
                    raw: '"acceptCharset"'
                  },
                  {
                    type: 'Literal',
                    start: 2776,
                    end: 2792,
                    value: 'accept-charset',
                    raw: '"accept-charset"'
                  }
                ]
              },
              {
                type: 'ArrayExpression',
                start: 2794,
                end: 2815,
                elements: [
                  {
                    type: 'Literal',
                    start: 2795,
                    end: 2806,
                    value: 'className',
                    raw: '"className"'
                  },
                  {
                    type: 'Literal',
                    start: 2807,
                    end: 2814,
                    value: 'class',
                    raw: '"class"'
                  }
                ]
              },
              {
                type: 'ArrayExpression',
                start: 2816,
                end: 2833,
                elements: [
                  {
                    type: 'Literal',
                    start: 2817,
                    end: 2826,
                    value: 'htmlFor',
                    raw: '"htmlFor"'
                  },
                  {
                    type: 'Literal',
                    start: 2827,
                    end: 2832,
                    value: 'for',
                    raw: '"for"'
                  }
                ]
              },
              {
                type: 'ArrayExpression',
                start: 2834,
                end: 2860,
                elements: [
                  {
                    type: 'Literal',
                    start: 2835,
                    end: 2846,
                    value: 'httpEquiv',
                    raw: '"httpEquiv"'
                  },
                  {
                    type: 'Literal',
                    start: 2847,
                    end: 2859,
                    value: 'http-equiv',
                    raw: '"http-equiv"'
                  }
                ]
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 2862,
            end: 2869,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 2870,
            end: 2928,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 2879, end: 2880, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 2881,
              end: 2928,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 2882,
                  end: 2893,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 2886,
                      end: 2892,
                      id: {
                        type: 'Identifier',
                        start: 2886,
                        end: 2887,
                        name: 'b'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 2888,
                        end: 2892,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 2888,
                          end: 2889,
                          name: 'a'
                        },
                        property: {
                          type: 'Literal',
                          start: 2890,
                          end: 2891,
                          raw: '0',
                          value: 0
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 2893,
                  end: 2927,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 2893,
                    end: 2927,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 2893,
                      end: 2897,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 2893,
                        end: 2894,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 2895,
                        end: 2896,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 2898,
                      end: 2927,
                      callee: {
                        type: 'Identifier',
                        start: 2902,
                        end: 2903,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 2904,
                          end: 2905,
                          name: 'b'
                        },
                        {
                          type: 'Literal',
                          start: 2906,
                          end: 2907,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2908,
                          end: 2910,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2909,
                            end: 2910,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'MemberExpression',
                          start: 2911,
                          end: 2915,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 2911,
                            end: 2912,
                            name: 'a'
                          },
                          property: {
                            type: 'Literal',
                            start: 2913,
                            end: 2914,
                            raw: '1',
                            value: 1
                          }
                        },
                        {
                          type: 'Literal',
                          start: 2916,
                          end: 2920,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2921,
                          end: 2923,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2922,
                            end: 2923,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 2924,
                          end: 2926,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 2925,
                            end: 2926,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 2930,
      end: 3051,
      expression: {
        type: 'CallExpression',
        start: 2930,
        end: 3050,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 2930,
          end: 2990,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 2930,
            end: 2982,
            elements: [
              {
                type: 'Literal',
                start: 2931,
                end: 2948,
                value: 'contentEditable',
                raw: '"contentEditable"'
              },
              {
                type: 'Literal',
                start: 2949,
                end: 2960,
                value: 'draggable',
                raw: '"draggable"'
              },
              {
                type: 'Literal',
                start: 2961,
                end: 2973,
                value: 'spellCheck',
                raw: '"spellCheck"'
              },
              {
                type: 'Literal',
                start: 2974,
                end: 2981,
                value: 'value',
                raw: '"value"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 2983,
            end: 2990,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 2991,
            end: 3049,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3000, end: 3001, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3002,
              end: 3049,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3003,
                  end: 3048,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3003,
                    end: 3048,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3003,
                      end: 3007,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3003,
                        end: 3004,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3005,
                        end: 3006,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3008,
                      end: 3048,
                      callee: {
                        type: 'Identifier',
                        start: 3012,
                        end: 3013,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3014,
                          end: 3015,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3016,
                          end: 3017,
                          raw: '2',
                          value: 2
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3018,
                          end: 3020,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3019,
                            end: 3020,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'CallExpression',
                          start: 3021,
                          end: 3036,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 3021,
                            end: 3034,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3021,
                              end: 3022,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3023,
                              end: 3034,
                              name: 'toLowerCase'
                            }
                          },
                          arguments: []
                        },
                        {
                          type: 'Literal',
                          start: 3037,
                          end: 3041,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3042,
                          end: 3044,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3043,
                            end: 3044,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3045,
                          end: 3047,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3046,
                            end: 3047,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3052,
      end: 3178,
      expression: {
        type: 'CallExpression',
        start: 3052,
        end: 3177,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3052,
          end: 3131,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 3052,
            end: 3123,
            elements: [
              {
                type: 'Literal',
                start: 3053,
                end: 3066,
                value: 'autoReverse',
                raw: '"autoReverse"'
              },
              {
                type: 'Literal',
                start: 3067,
                end: 3094,
                value: 'externalResourcesRequired',
                raw: '"externalResourcesRequired"'
              },
              {
                type: 'Literal',
                start: 3095,
                end: 3106,
                value: 'focusable',
                raw: '"focusable"'
              },
              {
                type: 'Literal',
                start: 3107,
                end: 3122,
                value: 'preserveAlpha',
                raw: '"preserveAlpha"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3124,
            end: 3131,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3132,
            end: 3176,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3141, end: 3142, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3143,
              end: 3176,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3144,
                  end: 3175,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3144,
                    end: 3175,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3144,
                      end: 3148,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3144,
                        end: 3145,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3146,
                        end: 3147,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3149,
                      end: 3175,
                      callee: {
                        type: 'Identifier',
                        start: 3153,
                        end: 3154,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3155,
                          end: 3156,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3157,
                          end: 3158,
                          raw: '2',
                          value: 2
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3159,
                          end: 3161,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3160,
                            end: 3161,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 3162,
                          end: 3163,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3164,
                          end: 3168,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3169,
                          end: 3171,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3170,
                            end: 3171,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3172,
                          end: 3174,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3173,
                            end: 3174,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3178,
      end: 3495,
      expression: {
        type: 'CallExpression',
        start: 3178,
        end: 3494,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3178,
          end: 3434,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 3178,
            end: 3426,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 3178,
              end: 3421,
              computed: false,
              optional: false,
              object: {
                type: 'Literal',
                start: 3178,
                end: 3415,
                value: 'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope',
                raw: '"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"'
              },
              property: {
                type: 'Identifier',
                start: 3416,
                end: 3421,
                name: 'split'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 3422,
                end: 3425,
                value: ' ',
                raw: '" "'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3427,
            end: 3434,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3435,
            end: 3493,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3444, end: 3445, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3446,
              end: 3493,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3447,
                  end: 3492,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3447,
                    end: 3492,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3447,
                      end: 3451,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3447,
                        end: 3448,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3449,
                        end: 3450,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3452,
                      end: 3492,
                      callee: {
                        type: 'Identifier',
                        start: 3456,
                        end: 3457,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3458,
                          end: 3459,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3460,
                          end: 3461,
                          raw: '3',
                          value: 3
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3462,
                          end: 3464,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3463,
                            end: 3464,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'CallExpression',
                          start: 3465,
                          end: 3480,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 3465,
                            end: 3478,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3465,
                              end: 3466,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3467,
                              end: 3478,
                              name: 'toLowerCase'
                            }
                          },
                          arguments: []
                        },
                        {
                          type: 'Literal',
                          start: 3481,
                          end: 3485,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3486,
                          end: 3488,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3487,
                            end: 3488,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3489,
                          end: 3491,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3490,
                            end: 3491,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3496,
      end: 3592,
      expression: {
        type: 'CallExpression',
        start: 3496,
        end: 3591,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3496,
          end: 3545,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 3496,
            end: 3537,
            elements: [
              {
                type: 'Literal',
                start: 3497,
                end: 3506,
                value: 'checked',
                raw: '"checked"'
              },
              {
                type: 'Literal',
                start: 3507,
                end: 3517,
                value: 'multiple',
                raw: '"multiple"'
              },
              {
                type: 'Literal',
                start: 3518,
                end: 3525,
                value: 'muted',
                raw: '"muted"'
              },
              {
                type: 'Literal',
                start: 3526,
                end: 3536,
                value: 'selected',
                raw: '"selected"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3538,
            end: 3545,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3546,
            end: 3590,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3555, end: 3556, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3557,
              end: 3590,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3558,
                  end: 3589,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3558,
                    end: 3589,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3558,
                      end: 3562,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3558,
                        end: 3559,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3560,
                        end: 3561,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3563,
                      end: 3589,
                      callee: {
                        type: 'Identifier',
                        start: 3567,
                        end: 3568,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3569,
                          end: 3570,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3571,
                          end: 3572,
                          raw: '3',
                          value: 3
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3573,
                          end: 3575,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3574,
                            end: 3575,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 3576,
                          end: 3577,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3578,
                          end: 3582,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3583,
                          end: 3585,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3584,
                            end: 3585,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3586,
                          end: 3588,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3587,
                            end: 3588,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3592,
      end: 3669,
      expression: {
        type: 'CallExpression',
        start: 3592,
        end: 3668,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3592,
          end: 3622,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 3592,
            end: 3614,
            elements: [
              {
                type: 'Literal',
                start: 3593,
                end: 3602,
                value: 'capture',
                raw: '"capture"'
              },
              {
                type: 'Literal',
                start: 3603,
                end: 3613,
                value: 'download',
                raw: '"download"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3615,
            end: 3622,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3623,
            end: 3667,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3632, end: 3633, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3634,
              end: 3667,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3635,
                  end: 3666,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3635,
                    end: 3666,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3635,
                      end: 3639,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3635,
                        end: 3636,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3637,
                        end: 3638,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3640,
                      end: 3666,
                      callee: {
                        type: 'Identifier',
                        start: 3644,
                        end: 3645,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3646,
                          end: 3647,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3648,
                          end: 3649,
                          raw: '4',
                          value: 4
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3650,
                          end: 3652,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3651,
                            end: 3652,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 3653,
                          end: 3654,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3655,
                          end: 3659,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3660,
                          end: 3662,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3661,
                            end: 3662,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3663,
                          end: 3665,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3664,
                            end: 3665,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3669,
      end: 3753,
      expression: {
        type: 'CallExpression',
        start: 3669,
        end: 3752,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3669,
          end: 3706,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 3669,
            end: 3698,
            elements: [
              {
                type: 'Literal',
                start: 3670,
                end: 3676,
                value: 'cols',
                raw: '"cols"'
              },
              {
                type: 'Literal',
                start: 3677,
                end: 3683,
                value: 'rows',
                raw: '"rows"'
              },
              {
                type: 'Literal',
                start: 3684,
                end: 3690,
                value: 'size',
                raw: '"size"'
              },
              {
                type: 'Literal',
                start: 3691,
                end: 3697,
                value: 'span',
                raw: '"span"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3699,
            end: 3706,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3707,
            end: 3751,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3716, end: 3717, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3718,
              end: 3751,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3719,
                  end: 3750,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3719,
                    end: 3750,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3719,
                      end: 3723,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3719,
                        end: 3720,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3721,
                        end: 3722,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3724,
                      end: 3750,
                      callee: {
                        type: 'Identifier',
                        start: 3728,
                        end: 3729,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3730,
                          end: 3731,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3732,
                          end: 3733,
                          raw: '6',
                          value: 6
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3734,
                          end: 3736,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3735,
                            end: 3736,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 3737,
                          end: 3738,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3739,
                          end: 3743,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3744,
                          end: 3746,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3745,
                            end: 3746,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3747,
                          end: 3749,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3748,
                            end: 3749,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 3753,
      end: 3841,
      expression: {
        type: 'CallExpression',
        start: 3753,
        end: 3840,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3753,
          end: 3780,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 3753,
            end: 3772,
            elements: [
              {
                type: 'Literal',
                start: 3754,
                end: 3763,
                value: 'rowSpan',
                raw: '"rowSpan"'
              },
              {
                type: 'Literal',
                start: 3764,
                end: 3771,
                value: 'start',
                raw: '"start"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 3773,
            end: 3780,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 3781,
            end: 3839,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 3790, end: 3791, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 3792,
              end: 3839,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 3793,
                  end: 3838,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 3793,
                    end: 3838,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 3793,
                      end: 3797,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 3793,
                        end: 3794,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 3795,
                        end: 3796,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 3798,
                      end: 3838,
                      callee: {
                        type: 'Identifier',
                        start: 3802,
                        end: 3803,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 3804,
                          end: 3805,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 3806,
                          end: 3807,
                          raw: '5',
                          value: 5
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3808,
                          end: 3810,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3809,
                            end: 3810,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'CallExpression',
                          start: 3811,
                          end: 3826,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 3811,
                            end: 3824,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 3811,
                              end: 3812,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 3813,
                              end: 3824,
                              name: 'toLowerCase'
                            }
                          },
                          arguments: []
                        },
                        {
                          type: 'Literal',
                          start: 3827,
                          end: 3831,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3832,
                          end: 3834,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3833,
                            end: 3834,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 3835,
                          end: 3837,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 3836,
                            end: 3837,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 3841,
      end: 3864,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 3845,
          end: 3863,
          id: { type: 'Identifier', start: 3845, end: 3847, name: 'ra' },
          init: {
            type: 'Literal',
            start: 3848,
            end: 3863,
            raw: '/[\\-:]([a-z])/g',
            regex: { flags: 'g', pattern: '[\\-:]([a-z])' },
            value: /[\-:]([a-z])/g
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 3864,
      end: 3905,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 3873, end: 3875, name: 'sa' },
      params: [ { type: 'Identifier', start: 3876, end: 3877, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 3878,
        end: 3905,
        body: [
          {
            type: 'ReturnStatement',
            start: 3879,
            end: 3904,
            argument: {
              type: 'CallExpression',
              start: 3886,
              end: 3904,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 3886,
                end: 3902,
                computed: false,
                optional: false,
                object: {
                  type: 'MemberExpression',
                  start: 3886,
                  end: 3890,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 3886,
                    end: 3887,
                    name: 'a'
                  },
                  property: {
                    type: 'Literal',
                    start: 3888,
                    end: 3889,
                    raw: '1',
                    value: 1
                  }
                },
                property: {
                  type: 'Identifier',
                  start: 3891,
                  end: 3902,
                  name: 'toUpperCase'
                }
              },
              arguments: []
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'ExpressionStatement',
      start: 3906,
      end: 5077,
      expression: {
        type: 'CallExpression',
        start: 3906,
        end: 5076,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 3906,
          end: 5006,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 3906,
            end: 4998,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 3906,
              end: 4993,
              computed: false,
              optional: false,
              object: {
                type: 'Literal',
                start: 3906,
                end: 4987,
                value: 'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height',
                raw: '"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"'
              },
              property: {
                type: 'Identifier',
                start: 4988,
                end: 4993,
                name: 'split'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 4994,
                end: 4997,
                value: ' ',
                raw: '" "'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 4999,
            end: 5006,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 5007,
            end: 5075,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 5016, end: 5017, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 5018,
              end: 5075,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 5019,
                  end: 5043,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 5023,
                      end: 5042,
                      id: {
                        type: 'Identifier',
                        start: 5023,
                        end: 5024,
                        name: 'b'
                      },
                      init: {
                        type: 'CallExpression',
                        start: 5025,
                        end: 5042,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 5025,
                          end: 5034,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5025,
                            end: 5026,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5027,
                            end: 5034,
                            name: 'replace'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 5035,
                            end: 5037,
                            name: 'ra'
                          },
                          {
                            type: 'Identifier',
                            start: 5039,
                            end: 5041,
                            name: 'sa'
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 5043,
                  end: 5074,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 5043,
                    end: 5074,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 5043,
                      end: 5047,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5043,
                        end: 5044,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5045,
                        end: 5046,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 5048,
                      end: 5074,
                      callee: {
                        type: 'Identifier',
                        start: 5052,
                        end: 5053,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5054,
                          end: 5055,
                          name: 'b'
                        },
                        {
                          type: 'Literal',
                          start: 5056,
                          end: 5057,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5058,
                          end: 5060,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5059,
                            end: 5060,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 5061,
                          end: 5062,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 5063,
                          end: 5067,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5068,
                          end: 5070,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5069,
                            end: 5070,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5071,
                          end: 5073,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5072,
                            end: 5073,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 5077,
      end: 5266,
      expression: {
        type: 'CallExpression',
        start: 5077,
        end: 5265,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 5077,
          end: 5170,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 5077,
            end: 5162,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 5077,
              end: 5157,
              computed: false,
              optional: false,
              object: {
                type: 'Literal',
                start: 5077,
                end: 5151,
                value: 'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type',
                raw: '"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"'
              },
              property: {
                type: 'Identifier',
                start: 5152,
                end: 5157,
                name: 'split'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 5158,
                end: 5161,
                value: ' ',
                raw: '" "'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 5163,
            end: 5170,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 5171,
            end: 5264,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 5180, end: 5181, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 5182,
              end: 5264,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 5183,
                  end: 5206,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 5187,
                      end: 5205,
                      id: {
                        type: 'Identifier',
                        start: 5187,
                        end: 5188,
                        name: 'b'
                      },
                      init: {
                        type: 'CallExpression',
                        start: 5189,
                        end: 5205,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 5189,
                          end: 5198,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5189,
                            end: 5190,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5191,
                            end: 5198,
                            name: 'replace'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 5199,
                            end: 5201,
                            name: 'ra'
                          },
                          {
                            type: 'Identifier',
                            start: 5202,
                            end: 5204,
                            name: 'sa'
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 5206,
                  end: 5263,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 5206,
                    end: 5263,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 5206,
                      end: 5210,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5206,
                        end: 5207,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5208,
                        end: 5209,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 5211,
                      end: 5263,
                      callee: {
                        type: 'Identifier',
                        start: 5215,
                        end: 5216,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5217,
                          end: 5218,
                          name: 'b'
                        },
                        {
                          type: 'Literal',
                          start: 5219,
                          end: 5220,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5221,
                          end: 5223,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5222,
                            end: 5223,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 5224,
                          end: 5225,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 5226,
                          end: 5256,
                          value: 'http://www.w3.org/1999/xlink',
                          raw: '"http://www.w3.org/1999/xlink"'
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5257,
                          end: 5259,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5258,
                            end: 5259,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5260,
                          end: 5262,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5261,
                            end: 5262,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 5266,
      end: 5413,
      expression: {
        type: 'CallExpression',
        start: 5266,
        end: 5412,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 5266,
          end: 5309,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 5266,
            end: 5301,
            elements: [
              {
                type: 'Literal',
                start: 5267,
                end: 5277,
                value: 'xml:base',
                raw: '"xml:base"'
              },
              {
                type: 'Literal',
                start: 5278,
                end: 5288,
                value: 'xml:lang',
                raw: '"xml:lang"'
              },
              {
                type: 'Literal',
                start: 5289,
                end: 5300,
                value: 'xml:space',
                raw: '"xml:space"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 5302,
            end: 5309,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 5310,
            end: 5411,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 5319, end: 5320, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 5321,
              end: 5411,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 5322,
                  end: 5345,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 5326,
                      end: 5344,
                      id: {
                        type: 'Identifier',
                        start: 5326,
                        end: 5327,
                        name: 'b'
                      },
                      init: {
                        type: 'CallExpression',
                        start: 5328,
                        end: 5344,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 5328,
                          end: 5337,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5328,
                            end: 5329,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5330,
                            end: 5337,
                            name: 'replace'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 5338,
                            end: 5340,
                            name: 'ra'
                          },
                          {
                            type: 'Identifier',
                            start: 5341,
                            end: 5343,
                            name: 'sa'
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 5345,
                  end: 5410,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 5345,
                    end: 5410,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 5345,
                      end: 5349,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5345,
                        end: 5346,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5347,
                        end: 5348,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 5350,
                      end: 5410,
                      callee: {
                        type: 'Identifier',
                        start: 5354,
                        end: 5355,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5356,
                          end: 5357,
                          name: 'b'
                        },
                        {
                          type: 'Literal',
                          start: 5358,
                          end: 5359,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5360,
                          end: 5362,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5361,
                            end: 5362,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'Identifier',
                          start: 5363,
                          end: 5364,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 5365,
                          end: 5403,
                          value: 'http://www.w3.org/XML/1998/namespace',
                          raw: '"http://www.w3.org/XML/1998/namespace"'
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5404,
                          end: 5406,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5405,
                            end: 5406,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5407,
                          end: 5409,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5408,
                            end: 5409,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 5413,
      end: 5508,
      expression: {
        type: 'CallExpression',
        start: 5413,
        end: 5507,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 5413,
          end: 5447,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 5413,
            end: 5439,
            elements: [
              {
                type: 'Literal',
                start: 5414,
                end: 5424,
                value: 'tabIndex',
                raw: '"tabIndex"'
              },
              {
                type: 'Literal',
                start: 5425,
                end: 5438,
                value: 'crossOrigin',
                raw: '"crossOrigin"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 5440,
            end: 5447,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 5448,
            end: 5506,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 5457, end: 5458, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 5459,
              end: 5506,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 5460,
                  end: 5505,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 5460,
                    end: 5505,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 5460,
                      end: 5464,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5460,
                        end: 5461,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5462,
                        end: 5463,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 5465,
                      end: 5505,
                      callee: {
                        type: 'Identifier',
                        start: 5469,
                        end: 5470,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5471,
                          end: 5472,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 5473,
                          end: 5474,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5475,
                          end: 5477,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5476,
                            end: 5477,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'CallExpression',
                          start: 5478,
                          end: 5493,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 5478,
                            end: 5491,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5478,
                              end: 5479,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5480,
                              end: 5491,
                              name: 'toLowerCase'
                            }
                          },
                          arguments: []
                        },
                        {
                          type: 'Literal',
                          start: 5494,
                          end: 5498,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5499,
                          end: 5501,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5500,
                            end: 5501,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5502,
                          end: 5504,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5503,
                            end: 5504,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 5509,
      end: 5595,
      expression: {
        type: 'AssignmentExpression',
        start: 5509,
        end: 5594,
        operator: '=',
        left: {
          type: 'MemberExpression',
          start: 5509,
          end: 5520,
          computed: false,
          optional: false,
          object: { type: 'Identifier', start: 5509, end: 5510, name: 'z' },
          property: {
            type: 'Identifier',
            start: 5511,
            end: 5520,
            name: 'xlinkHref'
          }
        },
        right: {
          type: 'NewExpression',
          start: 5521,
          end: 5594,
          callee: { type: 'Identifier', start: 5525, end: 5526, name: 'v' },
          arguments: [
            {
              type: 'Literal',
              start: 5527,
              end: 5538,
              value: 'xlinkHref',
              raw: '"xlinkHref"'
            },
            {
              type: 'Literal',
              start: 5539,
              end: 5540,
              raw: '1',
              value: 1
            },
            {
              type: 'UnaryExpression',
              start: 5541,
              end: 5543,
              operator: '!',
              argument: {
                type: 'Literal',
                start: 5542,
                end: 5543,
                raw: '1',
                value: 1
              },
              prefix: true
            },
            {
              type: 'Literal',
              start: 5544,
              end: 5556,
              value: 'xlink:href',
              raw: '"xlink:href"'
            },
            {
              type: 'Literal',
              start: 5557,
              end: 5587,
              value: 'http://www.w3.org/1999/xlink',
              raw: '"http://www.w3.org/1999/xlink"'
            },
            {
              type: 'UnaryExpression',
              start: 5588,
              end: 5590,
              operator: '!',
              argument: {
                type: 'Literal',
                start: 5589,
                end: 5590,
                raw: '0',
                value: 0
              },
              prefix: true
            },
            {
              type: 'UnaryExpression',
              start: 5591,
              end: 5593,
              operator: '!',
              argument: {
                type: 'Literal',
                start: 5592,
                end: 5593,
                raw: '1',
                value: 1
              },
              prefix: true
            }
          ]
        }
      }
    },
    {
      type: 'ExpressionStatement',
      start: 5595,
      end: 5700,
      expression: {
        type: 'CallExpression',
        start: 5595,
        end: 5699,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 5595,
          end: 5639,
          computed: false,
          optional: false,
          object: {
            type: 'ArrayExpression',
            start: 5595,
            end: 5631,
            elements: [
              {
                type: 'Literal',
                start: 5596,
                end: 5601,
                value: 'src',
                raw: '"src"'
              },
              {
                type: 'Literal',
                start: 5602,
                end: 5608,
                value: 'href',
                raw: '"href"'
              },
              {
                type: 'Literal',
                start: 5609,
                end: 5617,
                value: 'action',
                raw: '"action"'
              },
              {
                type: 'Literal',
                start: 5618,
                end: 5630,
                value: 'formAction',
                raw: '"formAction"'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 5632,
            end: 5639,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 5640,
            end: 5698,
            async: false,
            generator: false,
            id: null,
            params: [
              { type: 'Identifier', start: 5649, end: 5650, name: 'a' }
            ],
            body: {
              type: 'BlockStatement',
              start: 5651,
              end: 5698,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 5652,
                  end: 5697,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 5652,
                    end: 5697,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 5652,
                      end: 5656,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5652,
                        end: 5653,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5654,
                        end: 5655,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'NewExpression',
                      start: 5657,
                      end: 5697,
                      callee: {
                        type: 'Identifier',
                        start: 5661,
                        end: 5662,
                        name: 'v'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5663,
                          end: 5664,
                          name: 'a'
                        },
                        {
                          type: 'Literal',
                          start: 5665,
                          end: 5666,
                          raw: '1',
                          value: 1
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5667,
                          end: 5669,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5668,
                            end: 5669,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        },
                        {
                          type: 'CallExpression',
                          start: 5670,
                          end: 5685,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 5670,
                            end: 5683,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5670,
                              end: 5671,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5672,
                              end: 5683,
                              name: 'toLowerCase'
                            }
                          },
                          arguments: []
                        },
                        {
                          type: 'Literal',
                          start: 5686,
                          end: 5690,
                          raw: 'null',
                          value: null
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5691,
                          end: 5693,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5692,
                            end: 5693,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        },
                        {
                          type: 'UnaryExpression',
                          start: 5694,
                          end: 5696,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 5695,
                            end: 5696,
                            raw: '0',
                            value: 0
                          },
                          prefix: true
                        }
                      ]
                    }
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'FunctionDeclaration',
      start: 5701,
      end: 6167,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 5710, end: 5712, name: 'ta' },
      params: [
        { type: 'Identifier', start: 5713, end: 5714, name: 'a' },
        { type: 'Identifier', start: 5715, end: 5716, name: 'b' },
        { type: 'Identifier', start: 5717, end: 5718, name: 'c' },
        { type: 'Identifier', start: 5719, end: 5720, name: 'd' }
      ],
      body: {
        type: 'BlockStatement',
        start: 5721,
        end: 6167,
        body: [
          {
            type: 'VariableDeclaration',
            start: 5722,
            end: 5758,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 5726,
                end: 5757,
                id: {
                  type: 'Identifier',
                  start: 5726,
                  end: 5727,
                  name: 'e'
                },
                init: {
                  type: 'ConditionalExpression',
                  start: 5728,
                  end: 5757,
                  test: {
                    type: 'CallExpression',
                    start: 5728,
                    end: 5747,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 5728,
                      end: 5744,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5728,
                        end: 5729,
                        name: 'z'
                      },
                      property: {
                        type: 'Identifier',
                        start: 5730,
                        end: 5744,
                        name: 'hasOwnProperty'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 5745,
                        end: 5746,
                        name: 'b'
                      }
                    ]
                  },
                  consequent: {
                    type: 'MemberExpression',
                    start: 5748,
                    end: 5752,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 5748,
                      end: 5749,
                      name: 'z'
                    },
                    property: {
                      type: 'Identifier',
                      start: 5750,
                      end: 5751,
                      name: 'b'
                    }
                  },
                  alternate: {
                    type: 'Literal',
                    start: 5753,
                    end: 5757,
                    raw: 'null',
                    value: null
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 5758,
            end: 6166,
            test: {
              type: 'ConditionalExpression',
              start: 5761,
              end: 5845,
              test: {
                type: 'BinaryExpression',
                start: 5761,
                end: 5769,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 5761,
                  end: 5765,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 5768,
                  end: 5769,
                  name: 'e'
                }
              },
              consequent: {
                type: 'BinaryExpression',
                start: 5770,
                end: 5780,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 5770,
                  end: 5771,
                  raw: '0',
                  value: 0
                },
                right: {
                  type: 'MemberExpression',
                  start: 5774,
                  end: 5780,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 5774,
                    end: 5775,
                    name: 'e'
                  },
                  property: {
                    type: 'Identifier',
                    start: 5776,
                    end: 5780,
                    name: 'type'
                  }
                }
              },
              alternate: {
                type: 'LogicalExpression',
                start: 5781,
                end: 5845,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 5781,
                  end: 5821,
                  operator: '||',
                  left: {
                    type: 'LogicalExpression',
                    start: 5781,
                    end: 5797,
                    operator: '||',
                    left: {
                      type: 'Identifier',
                      start: 5781,
                      end: 5782,
                      name: 'd'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 5784,
                      end: 5797,
                      operator: '!',
                      argument: {
                        type: 'BinaryExpression',
                        start: 5786,
                        end: 5796,
                        operator: '<',
                        left: {
                          type: 'Literal',
                          start: 5786,
                          end: 5787,
                          raw: '2',
                          value: 2
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 5788,
                          end: 5796,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5788,
                            end: 5789,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 5790,
                            end: 5796,
                            name: 'length'
                          }
                        }
                      },
                      prefix: true
                    }
                  },
                  right: {
                    type: 'LogicalExpression',
                    start: 5799,
                    end: 5821,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 5799,
                      end: 5809,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 5799,
                        end: 5802,
                        value: 'o',
                        raw: '"o"'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 5805,
                        end: 5809,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 5805,
                          end: 5806,
                          name: 'b'
                        },
                        property: {
                          type: 'Literal',
                          start: 5807,
                          end: 5808,
                          raw: '0',
                          value: 0
                        }
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 5811,
                      end: 5821,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 5811,
                        end: 5814,
                        value: 'O',
                        raw: '"O"'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 5817,
                        end: 5821,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 5817,
                          end: 5818,
                          name: 'b'
                        },
                        property: {
                          type: 'Literal',
                          start: 5819,
                          end: 5820,
                          raw: '0',
                          value: 0
                        }
                      }
                    }
                  }
                },
                right: {
                  type: 'LogicalExpression',
                  start: 5823,
                  end: 5845,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 5823,
                    end: 5833,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 5823,
                      end: 5826,
                      value: 'n',
                      raw: '"n"'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 5829,
                      end: 5833,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5829,
                        end: 5830,
                        name: 'b'
                      },
                      property: {
                        type: 'Literal',
                        start: 5831,
                        end: 5832,
                        raw: '1',
                        value: 1
                      }
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 5835,
                    end: 5845,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 5835,
                      end: 5838,
                      value: 'N',
                      raw: '"N"'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 5841,
                      end: 5845,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 5841,
                        end: 5842,
                        name: 'b'
                      },
                      property: {
                        type: 'Literal',
                        start: 5843,
                        end: 5844,
                        raw: '1',
                        value: 1
                      }
                    }
                  }
                }
              }
            },
            consequent: {
              type: 'ExpressionStatement',
              start: 5846,
              end: 6166,
              expression: {
                type: 'SequenceExpression',
                start: 5846,
                end: 6166,
                expressions: [
                  {
                    type: 'LogicalExpression',
                    start: 5846,
                    end: 5867,
                    operator: '&&',
                    left: {
                      type: 'CallExpression',
                      start: 5846,
                      end: 5857,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 5846,
                        end: 5848,
                        name: 'qa'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 5849,
                          end: 5850,
                          name: 'b'
                        },
                        {
                          type: 'Identifier',
                          start: 5851,
                          end: 5852,
                          name: 'c'
                        },
                        {
                          type: 'Identifier',
                          start: 5853,
                          end: 5854,
                          name: 'e'
                        },
                        {
                          type: 'Identifier',
                          start: 5855,
                          end: 5856,
                          name: 'd'
                        }
                      ]
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 5860,
                      end: 5866,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 5860,
                        end: 5861,
                        name: 'c'
                      },
                      right: {
                        type: 'Literal',
                        start: 5862,
                        end: 5866,
                        raw: 'null',
                        value: null
                      }
                    }
                  },
                  {
                    type: 'ConditionalExpression',
                    start: 5868,
                    end: 6166,
                    test: {
                      type: 'LogicalExpression',
                      start: 5868,
                      end: 5879,
                      operator: '||',
                      left: {
                        type: 'Identifier',
                        start: 5868,
                        end: 5869,
                        name: 'd'
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 5871,
                        end: 5879,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 5871,
                          end: 5875,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'Identifier',
                          start: 5878,
                          end: 5879,
                          name: 'e'
                        }
                      }
                    },
                    consequent: {
                      type: 'LogicalExpression',
                      start: 5880,
                      end: 5941,
                      operator: '&&',
                      left: {
                        type: 'CallExpression',
                        start: 5880,
                        end: 5885,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 5880,
                          end: 5882,
                          name: 'oa'
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 5883,
                            end: 5884,
                            name: 'b'
                          }
                        ]
                      },
                      right: {
                        type: 'ConditionalExpression',
                        start: 5888,
                        end: 5940,
                        test: {
                          type: 'BinaryExpression',
                          start: 5888,
                          end: 5896,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 5888,
                            end: 5892,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 5895,
                            end: 5896,
                            name: 'c'
                          }
                        },
                        consequent: {
                          type: 'CallExpression',
                          start: 5897,
                          end: 5917,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 5897,
                            end: 5914,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5897,
                              end: 5898,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5899,
                              end: 5914,
                              name: 'removeAttribute'
                            }
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 5915,
                              end: 5916,
                              name: 'b'
                            }
                          ]
                        },
                        alternate: {
                          type: 'CallExpression',
                          start: 5918,
                          end: 5940,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 5918,
                            end: 5932,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5918,
                              end: 5919,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5920,
                              end: 5932,
                              name: 'setAttribute'
                            }
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 5933,
                              end: 5934,
                              name: 'b'
                            },
                            {
                              type: 'BinaryExpression',
                              start: 5935,
                              end: 5939,
                              operator: '+',
                              left: {
                                type: 'Literal',
                                start: 5935,
                                end: 5937,
                                value: '',
                                raw: '""'
                              },
                              right: {
                                type: 'Identifier',
                                start: 5938,
                                end: 5939,
                                name: 'c'
                              }
                            }
                          ]
                        }
                      }
                    },
                    alternate: {
                      type: 'ConditionalExpression',
                      start: 5942,
                      end: 6166,
                      test: {
                        type: 'MemberExpression',
                        start: 5942,
                        end: 5959,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 5942,
                          end: 5943,
                          name: 'e'
                        },
                        property: {
                          type: 'Identifier',
                          start: 5944,
                          end: 5959,
                          name: 'mustUseProperty'
                        }
                      },
                      consequent: {
                        type: 'AssignmentExpression',
                        start: 5960,
                        end: 6005,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 5960,
                          end: 5977,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 5960,
                            end: 5961,
                            name: 'a'
                          },
                          property: {
                            type: 'MemberExpression',
                            start: 5962,
                            end: 5976,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 5962,
                              end: 5963,
                              name: 'e'
                            },
                            property: {
                              type: 'Identifier',
                              start: 5964,
                              end: 5976,
                              name: 'propertyName'
                            }
                          }
                        },
                        right: {
                          type: 'ConditionalExpression',
                          start: 5978,
                          end: 6005,
                          test: {
                            type: 'BinaryExpression',
                            start: 5978,
                            end: 5986,
                            operator: '===',
                            left: {
                              type: 'Literal',
                              start: 5978,
                              end: 5982,
                              raw: 'null',
                              value: null
                            },
                            right: {
                              type: 'Identifier',
                              start: 5985,
                              end: 5986,
                              name: 'c'
                            }
                          },
                          consequent: {
                            type: 'ConditionalExpression',
                            start: 5987,
                            end: 6003,
                            test: {
                              type: 'BinaryExpression',
                              start: 5987,
                              end: 5997,
                              operator: '===',
                              left: {
                                type: 'Literal',
                                start: 5987,
                                end: 5988,
                                raw: '3',
                                value: 3
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 5991,
                                end: 5997,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 5991,
                                  end: 5992,
                                  name: 'e'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 5993,
                                  end: 5997,
                                  name: 'type'
                                }
                              }
                            },
                            consequent: {
                              type: 'UnaryExpression',
                              start: 5998,
                              end: 6000,
                              operator: '!',
                              argument: {
                                type: 'Literal',
                                start: 5999,
                                end: 6000,
                                raw: '1',
                                value: 1
                              },
                              prefix: true
                            },
                            alternate: {
                              type: 'Literal',
                              start: 6001,
                              end: 6003,
                              value: '',
                              raw: '""'
                            }
                          },
                          alternate: {
                            type: 'Identifier',
                            start: 6004,
                            end: 6005,
                            name: 'c'
                          }
                        }
                      },
                      alternate: {
                        type: 'SequenceExpression',
                        start: 6007,
                        end: 6165,
                        expressions: [
                          {
                            type: 'AssignmentExpression',
                            start: 6007,
                            end: 6024,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 6007,
                              end: 6008,
                              name: 'b'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 6009,
                              end: 6024,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 6009,
                                end: 6010,
                                name: 'e'
                              },
                              property: {
                                type: 'Identifier',
                                start: 6011,
                                end: 6024,
                                name: 'attributeName'
                              }
                            }
                          },
                          {
                            type: 'AssignmentExpression',
                            start: 6025,
                            end: 6047,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 6025,
                              end: 6026,
                              name: 'd'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 6027,
                              end: 6047,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 6027,
                                end: 6028,
                                name: 'e'
                              },
                              property: {
                                type: 'Identifier',
                                start: 6029,
                                end: 6047,
                                name: 'attributeNamespace'
                              }
                            }
                          },
                          {
                            type: 'ConditionalExpression',
                            start: 6048,
                            end: 6165,
                            test: {
                              type: 'BinaryExpression',
                              start: 6048,
                              end: 6056,
                              operator: '===',
                              left: {
                                type: 'Literal',
                                start: 6048,
                                end: 6052,
                                raw: 'null',
                                value: null
                              },
                              right: {
                                type: 'Identifier',
                                start: 6055,
                                end: 6056,
                                name: 'c'
                              }
                            },
                            consequent: {
                              type: 'CallExpression',
                              start: 6057,
                              end: 6077,
                              optional: false,
                              callee: {
                                type: 'MemberExpression',
                                start: 6057,
                                end: 6074,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 6057,
                                  end: 6058,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 6059,
                                  end: 6074,
                                  name: 'removeAttribute'
                                }
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 6075,
                                  end: 6076,
                                  name: 'b'
                                }
                              ]
                            },
                            alternate: {
                              type: 'SequenceExpression',
                              start: 6079,
                              end: 6164,
                              expressions: [
                                {
                                  type: 'AssignmentExpression',
                                  start: 6079,
                                  end: 6087,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 6079,
                                    end: 6080,
                                    name: 'e'
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 6081,
                                    end: 6087,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 6081,
                                      end: 6082,
                                      name: 'e'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 6083,
                                      end: 6087,
                                      name: 'type'
                                    }
                                  }
                                },
                                {
                                  type: 'AssignmentExpression',
                                  start: 6088,
                                  end: 6118,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 6088,
                                    end: 6089,
                                    name: 'c'
                                  },
                                  right: {
                                    type: 'ConditionalExpression',
                                    start: 6090,
                                    end: 6118,
                                    test: {
                                      type: 'LogicalExpression',
                                      start: 6090,
                                      end: 6110,
                                      operator: '||',
                                      left: {
                                        type: 'BinaryExpression',
                                        start: 6090,
                                        end: 6095,
                                        operator: '===',
                                        left: {
                                          type: 'Literal',
                                          start: 6090,
                                          end: 6091,
                                          raw: '3',
                                          value: 3
                                        },
                                        right: {
                                          type: 'Identifier',
                                          start: 6094,
                                          end: 6095,
                                          name: 'e'
                                        }
                                      },
                                      right: {
                                        type: 'LogicalExpression',
                                        start: 6097,
                                        end: 6110,
                                        operator: '&&',
                                        left: {
                                          type: 'BinaryExpression',
                                          start: 6097,
                                          end: 6102,
                                          operator: '===',
                                          left: {
                                            type: 'Literal',
                                            start: 6097,
                                            end: 6098,
                                            raw: '4',
                                            value: 4
                                          },
                                          right: {
                                            type: 'Identifier',
                                            start: 6101,
                                            end: 6102,
                                            name: 'e'
                                          }
                                        },
                                        right: {
                                          type: 'BinaryExpression',
                                          start: 6104,
                                          end: 6110,
                                          operator: '===',
                                          left: {
                                            type: 'UnaryExpression',
                                            start: 6104,
                                            end: 6106,
                                            operator: '!',
                                            argument: {
                                              type: 'Literal',
                                              start: 6105,
                                              end: 6106,
                                              raw: '0',
                                              value: 0
                                            },
                                            prefix: true
                                          },
                                          right: {
                                            type: 'Identifier',
                                            start: 6109,
                                            end: 6110,
                                            name: 'c'
                                          }
                                        }
                                      }
                                    },
                                    consequent: {
                                      type: 'Literal',
                                      start: 6111,
                                      end: 6113,
                                      value: '',
                                      raw: '""'
                                    },
                                    alternate: {
                                      type: 'BinaryExpression',
                                      start: 6114,
                                      end: 6118,
                                      operator: '+',
                                      left: {
                                        type: 'Literal',
                                        start: 6114,
                                        end: 6116,
                                        value: '',
                                        raw: '""'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 6117,
                                        end: 6118,
                                        name: 'c'
                                      }
                                    }
                                  }
                                },
                                {
                                  type: 'ConditionalExpression',
                                  start: 6119,
                                  end: 6164,
                                  test: {
                                    type: 'Identifier',
                                    start: 6119,
                                    end: 6120,
                                    name: 'd'
                                  },
                                  consequent: {
                                    type: 'CallExpression',
                                    start: 6121,
                                    end: 6144,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 6121,
                                      end: 6137,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 6121,
                                        end: 6122,
                                        name: 'a'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 6123,
                                        end: 6137,
                                        name: 'setAttributeNS'
                                      }
                                    },
                                    arguments: [
                                      {
                                        type: 'Identifier',
                                        start: 6138,
                                        end: 6139,
                                        name: 'd'
                                      },
                                      {
                                        type: 'Identifier',
                                        start: 6140,
                                        end: 6141,
                                        name: 'b'
                                      },
                                      {
                                        type: 'Identifier',
                                        start: 6142,
                                        end: 6143,
                                        name: 'c'
                                      }
                                    ]
                                  },
                                  alternate: {
                                    type: 'CallExpression',
                                    start: 6145,
                                    end: 6164,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 6145,
                                      end: 6159,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 6145,
                                        end: 6146,
                                        name: 'a'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 6147,
                                        end: 6159,
                                        name: 'setAttribute'
                                      }
                                    },
                                    arguments: [
                                      {
                                        type: 'Identifier',
                                        start: 6160,
                                        end: 6161,
                                        name: 'b'
                                      },
                                      {
                                        type: 'Identifier',
                                        start: 6162,
                                        end: 6163,
                                        name: 'c'
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 6168,
      end: 6612,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6172,
          end: 6228,
          id: { type: 'Identifier', start: 6172, end: 6174, name: 'ua' },
          init: {
            type: 'MemberExpression',
            start: 6175,
            end: 6228,
            computed: false,
            optional: false,
            object: { type: 'Identifier', start: 6175, end: 6177, name: 'aa' },
            property: {
              type: 'Identifier',
              start: 6178,
              end: 6228,
              name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6229,
          end: 6259,
          id: { type: 'Identifier', start: 6229, end: 6231, name: 'va' },
          init: {
            type: 'CallExpression',
            start: 6232,
            end: 6259,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6232,
              end: 6242,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6232,
                end: 6238,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6239,
                end: 6242,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6243,
                end: 6258,
                value: 'react.element',
                raw: '"react.element"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6260,
          end: 6289,
          id: { type: 'Identifier', start: 6260, end: 6262, name: 'wa' },
          init: {
            type: 'CallExpression',
            start: 6263,
            end: 6289,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6263,
              end: 6273,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6263,
                end: 6269,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6270,
                end: 6273,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6274,
                end: 6288,
                value: 'react.portal',
                raw: '"react.portal"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6290,
          end: 6321,
          id: { type: 'Identifier', start: 6290, end: 6292, name: 'ya' },
          init: {
            type: 'CallExpression',
            start: 6293,
            end: 6321,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6293,
              end: 6303,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6293,
                end: 6299,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6300,
                end: 6303,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6304,
                end: 6320,
                value: 'react.fragment',
                raw: '"react.fragment"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6322,
          end: 6356,
          id: { type: 'Identifier', start: 6322, end: 6324, name: 'za' },
          init: {
            type: 'CallExpression',
            start: 6325,
            end: 6356,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6325,
              end: 6335,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6325,
                end: 6331,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6332,
                end: 6335,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6336,
                end: 6355,
                value: 'react.strict_mode',
                raw: '"react.strict_mode"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6357,
          end: 6388,
          id: { type: 'Identifier', start: 6357, end: 6359, name: 'Aa' },
          init: {
            type: 'CallExpression',
            start: 6360,
            end: 6388,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6360,
              end: 6370,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6360,
                end: 6366,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6367,
                end: 6370,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6371,
                end: 6387,
                value: 'react.profiler',
                raw: '"react.profiler"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6389,
          end: 6420,
          id: { type: 'Identifier', start: 6389, end: 6391, name: 'Ba' },
          init: {
            type: 'CallExpression',
            start: 6392,
            end: 6420,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6392,
              end: 6402,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6392,
                end: 6398,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6399,
                end: 6402,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6403,
                end: 6419,
                value: 'react.provider',
                raw: '"react.provider"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6421,
          end: 6451,
          id: { type: 'Identifier', start: 6421, end: 6423, name: 'Ca' },
          init: {
            type: 'CallExpression',
            start: 6424,
            end: 6451,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6424,
              end: 6434,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6424,
                end: 6430,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6431,
                end: 6434,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6435,
                end: 6450,
                value: 'react.context',
                raw: '"react.context"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6452,
          end: 6486,
          id: { type: 'Identifier', start: 6452, end: 6454, name: 'Da' },
          init: {
            type: 'CallExpression',
            start: 6455,
            end: 6486,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6455,
              end: 6465,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6455,
                end: 6461,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6462,
                end: 6465,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6466,
                end: 6485,
                value: 'react.forward_ref',
                raw: '"react.forward_ref"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6487,
          end: 6518,
          id: { type: 'Identifier', start: 6487, end: 6489, name: 'Ea' },
          init: {
            type: 'CallExpression',
            start: 6490,
            end: 6518,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6490,
              end: 6500,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6490,
                end: 6496,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6497,
                end: 6500,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6501,
                end: 6517,
                value: 'react.suspense',
                raw: '"react.suspense"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6519,
          end: 6555,
          id: { type: 'Identifier', start: 6519, end: 6521, name: 'Fa' },
          init: {
            type: 'CallExpression',
            start: 6522,
            end: 6555,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6522,
              end: 6532,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6522,
                end: 6528,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6529,
                end: 6532,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6533,
                end: 6554,
                value: 'react.suspense_list',
                raw: '"react.suspense_list"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6556,
          end: 6583,
          id: { type: 'Identifier', start: 6556, end: 6558, name: 'Ga' },
          init: {
            type: 'CallExpression',
            start: 6559,
            end: 6583,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6559,
              end: 6569,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6559,
                end: 6565,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6566,
                end: 6569,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6570,
                end: 6582,
                value: 'react.memo',
                raw: '"react.memo"'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6584,
          end: 6611,
          id: { type: 'Identifier', start: 6584, end: 6586, name: 'Ha' },
          init: {
            type: 'CallExpression',
            start: 6587,
            end: 6611,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6587,
              end: 6597,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6587,
                end: 6593,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6594,
                end: 6597,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6598,
                end: 6610,
                value: 'react.lazy',
                raw: '"react.lazy"'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 6612,
      end: 6638,
      expression: {
        type: 'CallExpression',
        start: 6612,
        end: 6637,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 6612,
          end: 6622,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 6612,
            end: 6618,
            name: 'Symbol'
          },
          property: { type: 'Identifier', start: 6619, end: 6622, name: 'for' }
        },
        arguments: [
          {
            type: 'Literal',
            start: 6623,
            end: 6636,
            value: 'react.scope',
            raw: '"react.scope"'
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 6638,
      end: 6675,
      expression: {
        type: 'CallExpression',
        start: 6638,
        end: 6674,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 6638,
          end: 6648,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 6638,
            end: 6644,
            name: 'Symbol'
          },
          property: { type: 'Identifier', start: 6645, end: 6648, name: 'for' }
        },
        arguments: [
          {
            type: 'Literal',
            start: 6649,
            end: 6673,
            value: 'react.debug_trace_mode',
            raw: '"react.debug_trace_mode"'
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 6676,
      end: 6713,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6680,
          end: 6712,
          id: { type: 'Identifier', start: 6680, end: 6682, name: 'Ia' },
          init: {
            type: 'CallExpression',
            start: 6683,
            end: 6712,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 6683,
              end: 6693,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 6683,
                end: 6689,
                name: 'Symbol'
              },
              property: {
                type: 'Identifier',
                start: 6690,
                end: 6693,
                name: 'for'
              }
            },
            arguments: [
              {
                type: 'Literal',
                start: 6694,
                end: 6711,
                value: 'react.offscreen',
                raw: '"react.offscreen"'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 6713,
      end: 6747,
      expression: {
        type: 'CallExpression',
        start: 6713,
        end: 6746,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 6713,
          end: 6723,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 6713,
            end: 6719,
            name: 'Symbol'
          },
          property: { type: 'Identifier', start: 6720, end: 6723, name: 'for' }
        },
        arguments: [
          {
            type: 'Literal',
            start: 6724,
            end: 6745,
            value: 'react.legacy_hidden',
            raw: '"react.legacy_hidden"'
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 6747,
      end: 6773,
      expression: {
        type: 'CallExpression',
        start: 6747,
        end: 6772,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 6747,
          end: 6757,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 6747,
            end: 6753,
            name: 'Symbol'
          },
          property: { type: 'Identifier', start: 6754, end: 6757, name: 'for' }
        },
        arguments: [
          {
            type: 'Literal',
            start: 6758,
            end: 6771,
            value: 'react.cache',
            raw: '"react.cache"'
          }
        ]
      }
    },
    {
      type: 'ExpressionStatement',
      start: 6773,
      end: 6808,
      expression: {
        type: 'CallExpression',
        start: 6773,
        end: 6807,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 6773,
          end: 6783,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 6773,
            end: 6779,
            name: 'Symbol'
          },
          property: { type: 'Identifier', start: 6780, end: 6783, name: 'for' }
        },
        arguments: [
          {
            type: 'Literal',
            start: 6784,
            end: 6806,
            value: 'react.tracing_marker',
            raw: '"react.tracing_marker"'
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 6808,
      end: 6831,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6812,
          end: 6830,
          id: { type: 'Identifier', start: 6812, end: 6814, name: 'Ja' },
          init: {
            type: 'MemberExpression',
            start: 6815,
            end: 6830,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 6815,
              end: 6821,
              name: 'Symbol'
            },
            property: {
              type: 'Identifier',
              start: 6822,
              end: 6830,
              name: 'iterator'
            }
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 6831,
      end: 6955,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 6840, end: 6842, name: 'Ka' },
      params: [ { type: 'Identifier', start: 6843, end: 6844, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 6845,
        end: 6955,
        body: [
          {
            type: 'IfStatement',
            start: 6846,
            end: 6891,
            test: {
              type: 'LogicalExpression',
              start: 6849,
              end: 6878,
              operator: '||',
              left: {
                type: 'BinaryExpression',
                start: 6849,
                end: 6857,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 6849,
                  end: 6853,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 6856,
                  end: 6857,
                  name: 'a'
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 6859,
                end: 6878,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 6859,
                  end: 6867,
                  value: 'object',
                  raw: '"object"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 6870,
                  end: 6878,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 6877,
                    end: 6878,
                    name: 'a'
                  },
                  prefix: true
                }
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 6879,
              end: 6891,
              argument: {
                type: 'Literal',
                start: 6886,
                end: 6890,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 6891,
            end: 6920,
            expression: {
              type: 'AssignmentExpression',
              start: 6891,
              end: 6919,
              operator: '=',
              left: { type: 'Identifier', start: 6891, end: 6892, name: 'a' },
              right: {
                type: 'LogicalExpression',
                start: 6893,
                end: 6919,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 6893,
                  end: 6902,
                  operator: '&&',
                  left: {
                    type: 'Identifier',
                    start: 6893,
                    end: 6895,
                    name: 'Ja'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 6897,
                    end: 6902,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 6897,
                      end: 6898,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 6899,
                      end: 6901,
                      name: 'Ja'
                    }
                  }
                },
                right: {
                  type: 'MemberExpression',
                  start: 6904,
                  end: 6919,
                  computed: true,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 6904,
                    end: 6905,
                    name: 'a'
                  },
                  property: {
                    type: 'Literal',
                    start: 6906,
                    end: 6918,
                    value: '@@iterator',
                    raw: '"@@iterator"'
                  }
                }
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 6920,
            end: 6954,
            argument: {
              type: 'ConditionalExpression',
              start: 6926,
              end: 6954,
              test: {
                type: 'BinaryExpression',
                start: 6926,
                end: 6947,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 6926,
                  end: 6936,
                  value: 'function',
                  raw: '"function"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 6939,
                  end: 6947,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 6946,
                    end: 6947,
                    name: 'a'
                  },
                  prefix: true
                }
              },
              consequent: { type: 'Identifier', start: 6948, end: 6949, name: 'a' },
              alternate: {
                type: 'Literal',
                start: 6950,
                end: 6954,
                raw: 'null',
                value: null
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 6955,
      end: 6978,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 6959,
          end: 6974,
          id: { type: 'Identifier', start: 6959, end: 6960, name: 'A' },
          init: {
            type: 'MemberExpression',
            start: 6961,
            end: 6974,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 6961,
              end: 6967,
              name: 'Object'
            },
            property: {
              type: 'Identifier',
              start: 6968,
              end: 6974,
              name: 'assign'
            }
          }
        },
        {
          type: 'VariableDeclarator',
          start: 6975,
          end: 6977,
          id: { type: 'Identifier', start: 6975, end: 6977, name: 'La' },
          init: null
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 6978,
      end: 7110,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 6987, end: 6989, name: 'Ma' },
      params: [ { type: 'Identifier', start: 6990, end: 6991, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 6992,
        end: 7110,
        body: [
          {
            type: 'IfStatement',
            start: 6993,
            end: 7094,
            test: {
              type: 'BinaryExpression',
              start: 6996,
              end: 7007,
              operator: '===',
              left: {
                type: 'UnaryExpression',
                start: 6996,
                end: 7002,
                operator: 'void',
                argument: {
                  type: 'Literal',
                  start: 7001,
                  end: 7002,
                  raw: '0',
                  value: 0
                },
                prefix: true
              },
              right: {
                type: 'Identifier',
                start: 7005,
                end: 7007,
                name: 'La'
              }
            },
            consequent: {
              type: 'TryStatement',
              start: 7008,
              end: 7094,
              block: {
                type: 'BlockStatement',
                start: 7011,
                end: 7027,
                body: [
                  {
                    type: 'ThrowStatement',
                    start: 7012,
                    end: 7026,
                    argument: {
                      type: 'CallExpression',
                      start: 7018,
                      end: 7025,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 7018,
                        end: 7023,
                        name: 'Error'
                      },
                      arguments: []
                    }
                  }
                ]
              },
              handler: {
                type: 'CatchClause',
                start: 7027,
                end: 7094,
                param: {
                  type: 'Identifier',
                  start: 7033,
                  end: 7034,
                  name: 'c'
                },
                body: {
                  type: 'BlockStatement',
                  start: 7035,
                  end: 7094,
                  body: [
                    {
                      type: 'VariableDeclaration',
                      start: 7036,
                      end: 7079,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 7040,
                          end: 7078,
                          id: {
                            type: 'Identifier',
                            start: 7040,
                            end: 7041,
                            name: 'b'
                          },
                          init: {
                            type: 'CallExpression',
                            start: 7042,
                            end: 7078,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 7042,
                              end: 7062,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'CallExpression',
                                start: 7042,
                                end: 7056,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 7042,
                                  end: 7054,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'MemberExpression',
                                    start: 7042,
                                    end: 7049,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 7042,
                                      end: 7043,
                                      name: 'c'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7044,
                                      end: 7049,
                                      name: 'stack'
                                    }
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 7050,
                                    end: 7054,
                                    name: 'trim'
                                  }
                                },
                                arguments: []
                              },
                              property: {
                                type: 'Identifier',
                                start: 7057,
                                end: 7062,
                                name: 'match'
                              }
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 7063,
                                end: 7077,
                                raw: '/\\n( *(at )?)/',
                                regex: { flags: '', pattern: '\\n( *(at )?)' },
                                value: /\n( *(at )?)/
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 7079,
                      end: 7093,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 7079,
                        end: 7093,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 7079,
                          end: 7081,
                          name: 'La'
                        },
                        right: {
                          type: 'LogicalExpression',
                          start: 7082,
                          end: 7093,
                          operator: '||',
                          left: {
                            type: 'LogicalExpression',
                            start: 7082,
                            end: 7089,
                            operator: '&&',
                            left: {
                              type: 'Identifier',
                              start: 7082,
                              end: 7083,
                              name: 'b'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 7085,
                              end: 7089,
                              computed: true,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 7085,
                                end: 7086,
                                name: 'b'
                              },
                              property: {
                                type: 'Literal',
                                start: 7087,
                                end: 7088,
                                raw: '1',
                                value: 1
                              }
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 7091,
                            end: 7093,
                            value: '',
                            raw: '""'
                          }
                        }
                      }
                    }
                  ]
                }
              },
              finalizer: null
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 7094,
            end: 7109,
            argument: {
              type: 'BinaryExpression',
              start: 7100,
              end: 7109,
              operator: '+',
              left: {
                type: 'BinaryExpression',
                start: 7100,
                end: 7107,
                operator: '+',
                left: {
                  type: 'Literal',
                  start: 7100,
                  end: 7104,
                  value: '\n',
                  raw: '"\\n"'
                },
                right: {
                  type: 'Identifier',
                  start: 7105,
                  end: 7107,
                  name: 'La'
                }
              },
              right: { type: 'Identifier', start: 7108, end: 7109, name: 'a' }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 7110,
      end: 7120,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 7114,
          end: 7119,
          id: { type: 'Identifier', start: 7114, end: 7116, name: 'Na' },
          init: {
            type: 'UnaryExpression',
            start: 7117,
            end: 7119,
            operator: '!',
            argument: {
              type: 'Literal',
              start: 7118,
              end: 7119,
              raw: '1',
              value: 1
            },
            prefix: true
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 7121,
      end: 8042,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 7130, end: 7132, name: 'Oa' },
      params: [
        { type: 'Identifier', start: 7133, end: 7134, name: 'a' },
        { type: 'Identifier', start: 7135, end: 7136, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 7137,
        end: 8042,
        body: [
          {
            type: 'IfStatement',
            start: 7138,
            end: 7157,
            test: {
              type: 'LogicalExpression',
              start: 7141,
              end: 7147,
              operator: '||',
              left: {
                type: 'UnaryExpression',
                start: 7141,
                end: 7143,
                operator: '!',
                argument: {
                  type: 'Identifier',
                  start: 7142,
                  end: 7143,
                  name: 'a'
                },
                prefix: true
              },
              right: {
                type: 'Identifier',
                start: 7145,
                end: 7147,
                name: 'Na'
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 7148,
              end: 7157,
              argument: {
                type: 'Literal',
                start: 7154,
                end: 7156,
                value: '',
                raw: '""'
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 7157,
            end: 7163,
            expression: {
              type: 'AssignmentExpression',
              start: 7157,
              end: 7162,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 7157,
                end: 7159,
                name: 'Na'
              },
              right: {
                type: 'UnaryExpression',
                start: 7160,
                end: 7162,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 7161,
                  end: 7162,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            }
          },
          {
            type: 'VariableDeclaration',
            start: 7163,
            end: 7193,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 7167,
                end: 7192,
                id: {
                  type: 'Identifier',
                  start: 7167,
                  end: 7168,
                  name: 'c'
                },
                init: {
                  type: 'MemberExpression',
                  start: 7169,
                  end: 7192,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 7169,
                    end: 7174,
                    name: 'Error'
                  },
                  property: {
                    type: 'Identifier',
                    start: 7175,
                    end: 7192,
                    name: 'prepareStackTrace'
                  }
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 7193,
            end: 7224,
            expression: {
              type: 'AssignmentExpression',
              start: 7193,
              end: 7223,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 7193,
                end: 7216,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 7193,
                  end: 7198,
                  name: 'Error'
                },
                property: {
                  type: 'Identifier',
                  start: 7199,
                  end: 7216,
                  name: 'prepareStackTrace'
                }
              },
              right: {
                type: 'UnaryExpression',
                start: 7217,
                end: 7223,
                operator: 'void',
                argument: {
                  type: 'Literal',
                  start: 7222,
                  end: 7223,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            }
          },
          {
            type: 'TryStatement',
            start: 7224,
            end: 7996,
            block: {
              type: 'BlockStatement',
              start: 7227,
              end: 7551,
              body: [
                {
                  type: 'IfStatement',
                  start: 7228,
                  end: 7550,
                  test: {
                    type: 'Identifier',
                    start: 7231,
                    end: 7232,
                    name: 'b'
                  },
                  consequent: {
                    type: 'IfStatement',
                    start: 7233,
                    end: 7509,
                    test: {
                      type: 'SequenceExpression',
                      start: 7236,
                      end: 7385,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 7236,
                          end: 7264,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 7236,
                            end: 7237,
                            name: 'b'
                          },
                          right: {
                            type: 'FunctionExpression',
                            start: 7238,
                            end: 7264,
                            async: false,
                            generator: false,
                            id: null,
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              start: 7248,
                              end: 7264,
                              body: [
                                {
                                  type: 'ThrowStatement',
                                  start: 7249,
                                  end: 7263,
                                  argument: {
                                    type: 'CallExpression',
                                    start: 7255,
                                    end: 7262,
                                    optional: false,
                                    callee: {
                                      type: 'Identifier',
                                      start: 7255,
                                      end: 7260,
                                      name: 'Error'
                                    },
                                    arguments: []
                                  }
                                }
                              ]
                            },
                            expression: false
                          }
                        },
                        {
                          type: 'CallExpression',
                          start: 7265,
                          end: 7340,
                          optional: false,
                          callee: {
                            type: 'MemberExpression',
                            start: 7265,
                            end: 7286,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 7265,
                              end: 7271,
                              name: 'Object'
                            },
                            property: {
                              type: 'Identifier',
                              start: 7272,
                              end: 7286,
                              name: 'defineProperty'
                            }
                          },
                          arguments: [
                            {
                              type: 'MemberExpression',
                              start: 7287,
                              end: 7298,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 7287,
                                end: 7288,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 7289,
                                end: 7298,
                                name: 'prototype'
                              }
                            },
                            {
                              type: 'Literal',
                              start: 7299,
                              end: 7306,
                              value: 'props',
                              raw: '"props"'
                            },
                            {
                              type: 'ObjectExpression',
                              start: 7307,
                              end: 7339,
                              properties: [
                                {
                                  type: 'Property',
                                  start: 7308,
                                  end: 7338,
                                  method: false,
                                  shorthand: false,
                                  computed: false,
                                  key: {
                                    type: 'Identifier',
                                    start: 7308,
                                    end: 7311,
                                    name: 'set'
                                  },
                                  value: {
                                    type: 'FunctionExpression',
                                    start: 7312,
                                    end: 7338,
                                    async: false,
                                    generator: false,
                                    id: null,
                                    params: [],
                                    body: {
                                      type: 'BlockStatement',
                                      start: 7322,
                                      end: 7338,
                                      body: [
                                        {
                                          type: 'ThrowStatement',
                                          start: 7323,
                                          end: 7337,
                                          argument: {
                                            type: 'CallExpression',
                                            start: 7329,
                                            end: 7336,
                                            optional: false,
                                            callee: {
                                              type: 'Identifier',
                                              start: 7329,
                                              end: 7334,
                                              name: 'Error'
                                            },
                                            arguments: []
                                          }
                                        }
                                      ]
                                    },
                                    expression: false
                                  },
                                  kind: 'init'
                                }
                              ]
                            }
                          ]
                        },
                        {
                          type: 'LogicalExpression',
                          start: 7341,
                          end: 7385,
                          operator: '&&',
                          left: {
                            type: 'BinaryExpression',
                            start: 7341,
                            end: 7366,
                            operator: '===',
                            left: {
                              type: 'Literal',
                              start: 7341,
                              end: 7349,
                              value: 'object',
                              raw: '"object"'
                            },
                            right: {
                              type: 'UnaryExpression',
                              start: 7352,
                              end: 7366,
                              operator: 'typeof',
                              argument: {
                                type: 'Identifier',
                                start: 7359,
                                end: 7366,
                                name: 'Reflect'
                              },
                              prefix: true
                            }
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 7368,
                            end: 7385,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 7368,
                              end: 7375,
                              name: 'Reflect'
                            },
                            property: {
                              type: 'Identifier',
                              start: 7376,
                              end: 7385,
                              name: 'construct'
                            }
                          }
                        }
                      ]
                    },
                    consequent: {
                      type: 'BlockStatement',
                      start: 7386,
                      end: 7458,
                      body: [
                        {
                          type: 'TryStatement',
                          start: 7387,
                          end: 7432,
                          block: {
                            type: 'BlockStatement',
                            start: 7390,
                            end: 7415,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 7391,
                                end: 7414,
                                expression: {
                                  type: 'CallExpression',
                                  start: 7391,
                                  end: 7414,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 7391,
                                    end: 7408,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 7391,
                                      end: 7398,
                                      name: 'Reflect'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7399,
                                      end: 7408,
                                      name: 'construct'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 7409,
                                      end: 7410,
                                      name: 'b'
                                    },
                                    {
                                      type: 'ArrayExpression',
                                      start: 7411,
                                      end: 7413,
                                      elements: []
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          handler: {
                            type: 'CatchClause',
                            start: 7415,
                            end: 7432,
                            param: {
                              type: 'Identifier',
                              start: 7421,
                              end: 7422,
                              name: 'l'
                            },
                            body: {
                              type: 'BlockStatement',
                              start: 7423,
                              end: 7432,
                              body: [
                                {
                                  type: 'VariableDeclaration',
                                  start: 7424,
                                  end: 7431,
                                  kind: 'var',
                                  declarations: [
                                    {
                                      type: 'VariableDeclarator',
                                      start: 7428,
                                      end: 7431,
                                      id: {
                                        type: 'Identifier',
                                        start: 7428,
                                        end: 7429,
                                        name: 'd'
                                      },
                                      init: {
                                        type: 'Identifier',
                                        start: 7430,
                                        end: 7431,
                                        name: 'l'
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          finalizer: null
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 7432,
                          end: 7457,
                          expression: {
                            type: 'CallExpression',
                            start: 7432,
                            end: 7457,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 7432,
                              end: 7449,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 7432,
                                end: 7439,
                                name: 'Reflect'
                              },
                              property: {
                                type: 'Identifier',
                                start: 7440,
                                end: 7449,
                                name: 'construct'
                              }
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 7450,
                                end: 7451,
                                name: 'a'
                              },
                              {
                                type: 'ArrayExpression',
                                start: 7452,
                                end: 7454,
                                elements: []
                              },
                              {
                                type: 'Identifier',
                                start: 7455,
                                end: 7456,
                                name: 'b'
                              }
                            ]
                          }
                        }
                      ]
                    },
                    alternate: {
                      type: 'BlockStatement',
                      start: 7462,
                      end: 7509,
                      body: [
                        {
                          type: 'TryStatement',
                          start: 7463,
                          end: 7489,
                          block: {
                            type: 'BlockStatement',
                            start: 7466,
                            end: 7476,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 7467,
                                end: 7475,
                                expression: {
                                  type: 'CallExpression',
                                  start: 7467,
                                  end: 7475,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 7467,
                                    end: 7473,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 7467,
                                      end: 7468,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7469,
                                      end: 7473,
                                      name: 'call'
                                    }
                                  },
                                  arguments: []
                                }
                              }
                            ]
                          },
                          handler: {
                            type: 'CatchClause',
                            start: 7476,
                            end: 7489,
                            param: {
                              type: 'Identifier',
                              start: 7482,
                              end: 7483,
                              name: 'l'
                            },
                            body: {
                              type: 'BlockStatement',
                              start: 7484,
                              end: 7489,
                              body: [
                                {
                                  type: 'ExpressionStatement',
                                  start: 7485,
                                  end: 7488,
                                  expression: {
                                    type: 'AssignmentExpression',
                                    start: 7485,
                                    end: 7488,
                                    operator: '=',
                                    left: {
                                      type: 'Identifier',
                                      start: 7485,
                                      end: 7486,
                                      name: 'd'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 7487,
                                      end: 7488,
                                      name: 'l'
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          finalizer: null
                        },
                        {
                          type: 'ExpressionStatement',
                          start: 7489,
                          end: 7508,
                          expression: {
                            type: 'CallExpression',
                            start: 7489,
                            end: 7508,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 7489,
                              end: 7495,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 7489,
                                end: 7490,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 7491,
                                end: 7495,
                                name: 'call'
                              }
                            },
                            arguments: [
                              {
                                type: 'MemberExpression',
                                start: 7496,
                                end: 7507,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 7496,
                                  end: 7497,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 7498,
                                  end: 7507,
                                  name: 'prototype'
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  alternate: {
                    type: 'BlockStatement',
                    start: 7513,
                    end: 7550,
                    body: [
                      {
                        type: 'TryStatement',
                        start: 7514,
                        end: 7546,
                        block: {
                          type: 'BlockStatement',
                          start: 7517,
                          end: 7533,
                          body: [
                            {
                              type: 'ThrowStatement',
                              start: 7518,
                              end: 7532,
                              argument: {
                                type: 'CallExpression',
                                start: 7524,
                                end: 7531,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 7524,
                                  end: 7529,
                                  name: 'Error'
                                },
                                arguments: []
                              }
                            }
                          ]
                        },
                        handler: {
                          type: 'CatchClause',
                          start: 7533,
                          end: 7546,
                          param: {
                            type: 'Identifier',
                            start: 7539,
                            end: 7540,
                            name: 'l'
                          },
                          body: {
                            type: 'BlockStatement',
                            start: 7541,
                            end: 7546,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 7542,
                                end: 7545,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 7542,
                                  end: 7545,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 7542,
                                    end: 7543,
                                    name: 'd'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 7544,
                                    end: 7545,
                                    name: 'l'
                                  }
                                }
                              }
                            ]
                          }
                        },
                        finalizer: null
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 7546,
                        end: 7549,
                        expression: {
                          type: 'CallExpression',
                          start: 7546,
                          end: 7549,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 7546,
                            end: 7547,
                            name: 'a'
                          },
                          arguments: []
                        }
                      }
                    ]
                  }
                }
              ]
            },
            handler: {
              type: 'CatchClause',
              start: 7551,
              end: 7956,
              param: { type: 'Identifier', start: 7557, end: 7558, name: 'l' },
              body: {
                type: 'BlockStatement',
                start: 7559,
                end: 7956,
                body: [
                  {
                    type: 'IfStatement',
                    start: 7560,
                    end: 7955,
                    test: {
                      type: 'LogicalExpression',
                      start: 7563,
                      end: 7594,
                      operator: '&&',
                      left: {
                        type: 'LogicalExpression',
                        start: 7563,
                        end: 7567,
                        operator: '&&',
                        left: {
                          type: 'Identifier',
                          start: 7563,
                          end: 7564,
                          name: 'l'
                        },
                        right: {
                          type: 'Identifier',
                          start: 7566,
                          end: 7567,
                          name: 'd'
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 7569,
                        end: 7594,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 7569,
                          end: 7577,
                          value: 'string',
                          raw: '"string"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 7580,
                          end: 7594,
                          operator: 'typeof',
                          argument: {
                            type: 'MemberExpression',
                            start: 7587,
                            end: 7594,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 7587,
                              end: 7588,
                              name: 'l'
                            },
                            property: {
                              type: 'Identifier',
                              start: 7589,
                              end: 7594,
                              name: 'stack'
                            }
                          },
                          prefix: true
                        }
                      }
                    },
                    consequent: {
                      type: 'BlockStatement',
                      start: 7595,
                      end: 7955,
                      body: [
                        {
                          type: 'ForStatement',
                          start: 7596,
                          end: 7704,
                          init: {
                            type: 'VariableDeclaration',
                            start: 7600,
                            end: 7674,
                            kind: 'var',
                            declarations: [
                              {
                                type: 'VariableDeclarator',
                                start: 7604,
                                end: 7625,
                                id: {
                                  type: 'Identifier',
                                  start: 7604,
                                  end: 7605,
                                  name: 'e'
                                },
                                init: {
                                  type: 'CallExpression',
                                  start: 7606,
                                  end: 7625,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 7606,
                                    end: 7619,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'MemberExpression',
                                      start: 7606,
                                      end: 7613,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 7606,
                                        end: 7607,
                                        name: 'l'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 7608,
                                        end: 7613,
                                        name: 'stack'
                                      }
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7614,
                                      end: 7619,
                                      name: 'split'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'Literal',
                                      start: 7620,
                                      end: 7624,
                                      value: '\n',
                                      raw: '"\\n"'
                                    }
                                  ]
                                }
                              },
                              {
                                type: 'VariableDeclarator',
                                start: 7627,
                                end: 7648,
                                id: {
                                  type: 'Identifier',
                                  start: 7627,
                                  end: 7628,
                                  name: 'f'
                                },
                                init: {
                                  type: 'CallExpression',
                                  start: 7629,
                                  end: 7648,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 7629,
                                    end: 7642,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'MemberExpression',
                                      start: 7629,
                                      end: 7636,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 7629,
                                        end: 7630,
                                        name: 'd'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 7631,
                                        end: 7636,
                                        name: 'stack'
                                      }
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7637,
                                      end: 7642,
                                      name: 'split'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'Literal',
                                      start: 7643,
                                      end: 7647,
                                      value: '\n',
                                      raw: '"\\n"'
                                    }
                                  ]
                                }
                              },
                              {
                                type: 'VariableDeclarator',
                                start: 7649,
                                end: 7661,
                                id: {
                                  type: 'Identifier',
                                  start: 7649,
                                  end: 7650,
                                  name: 'g'
                                },
                                init: {
                                  type: 'BinaryExpression',
                                  start: 7651,
                                  end: 7661,
                                  operator: '-',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 7651,
                                    end: 7659,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 7651,
                                      end: 7652,
                                      name: 'e'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7653,
                                      end: 7659,
                                      name: 'length'
                                    }
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 7660,
                                    end: 7661,
                                    raw: '1',
                                    value: 1
                                  }
                                }
                              },
                              {
                                type: 'VariableDeclarator',
                                start: 7662,
                                end: 7674,
                                id: {
                                  type: 'Identifier',
                                  start: 7662,
                                  end: 7663,
                                  name: 'h'
                                },
                                init: {
                                  type: 'BinaryExpression',
                                  start: 7664,
                                  end: 7674,
                                  operator: '-',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 7664,
                                    end: 7672,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 7664,
                                      end: 7665,
                                      name: 'f'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 7666,
                                      end: 7672,
                                      name: 'length'
                                    }
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 7673,
                                    end: 7674,
                                    raw: '1',
                                    value: 1
                                  }
                                }
                              }
                            ]
                          },
                          test: {
                            type: 'LogicalExpression',
                            start: 7675,
                            end: 7698,
                            operator: '&&',
                            left: {
                              type: 'LogicalExpression',
                              start: 7675,
                              end: 7685,
                              operator: '&&',
                              left: {
                                type: 'BinaryExpression',
                                start: 7675,
                                end: 7679,
                                operator: '<=',
                                left: {
                                  type: 'Literal',
                                  start: 7675,
                                  end: 7676,
                                  raw: '1',
                                  value: 1
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 7678,
                                  end: 7679,
                                  name: 'g'
                                }
                              },
                              right: {
                                type: 'BinaryExpression',
                                start: 7681,
                                end: 7685,
                                operator: '<=',
                                left: {
                                  type: 'Literal',
                                  start: 7681,
                                  end: 7682,
                                  raw: '0',
                                  value: 0
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 7684,
                                  end: 7685,
                                  name: 'h'
                                }
                              }
                            },
                            right: {
                              type: 'BinaryExpression',
                              start: 7687,
                              end: 7698,
                              operator: '!==',
                              left: {
                                type: 'MemberExpression',
                                start: 7687,
                                end: 7691,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 7687,
                                  end: 7688,
                                  name: 'e'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 7689,
                                  end: 7690,
                                  name: 'g'
                                }
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 7694,
                                end: 7698,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 7694,
                                  end: 7695,
                                  name: 'f'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 7696,
                                  end: 7697,
                                  name: 'h'
                                }
                              }
                            }
                          },
                          update: null,
                          body: {
                            type: 'ExpressionStatement',
                            start: 7700,
                            end: 7704,
                            expression: {
                              type: 'UpdateExpression',
                              start: 7700,
                              end: 7703,
                              prefix: false,
                              operator: '--',
                              argument: {
                                type: 'Identifier',
                                start: 7700,
                                end: 7701,
                                name: 'h'
                              }
                            }
                          }
                        },
                        {
                          type: 'ForStatement',
                          start: 7704,
                          end: 7954,
                          init: null,
                          test: {
                            type: 'LogicalExpression',
                            start: 7709,
                            end: 7719,
                            operator: '&&',
                            left: {
                              type: 'BinaryExpression',
                              start: 7709,
                              end: 7713,
                              operator: '<=',
                              left: {
                                type: 'Literal',
                                start: 7709,
                                end: 7710,
                                raw: '1',
                                value: 1
                              },
                              right: {
                                type: 'Identifier',
                                start: 7712,
                                end: 7713,
                                name: 'g'
                              }
                            },
                            right: {
                              type: 'BinaryExpression',
                              start: 7715,
                              end: 7719,
                              operator: '<=',
                              left: {
                                type: 'Literal',
                                start: 7715,
                                end: 7716,
                                raw: '0',
                                value: 0
                              },
                              right: {
                                type: 'Identifier',
                                start: 7718,
                                end: 7719,
                                name: 'h'
                              }
                            }
                          },
                          update: {
                            type: 'SequenceExpression',
                            start: 7720,
                            end: 7727,
                            expressions: [
                              {
                                type: 'UpdateExpression',
                                start: 7720,
                                end: 7723,
                                prefix: false,
                                operator: '--',
                                argument: {
                                  type: 'Identifier',
                                  start: 7720,
                                  end: 7721,
                                  name: 'g'
                                }
                              },
                              {
                                type: 'UpdateExpression',
                                start: 7724,
                                end: 7727,
                                prefix: false,
                                operator: '--',
                                argument: {
                                  type: 'Identifier',
                                  start: 7724,
                                  end: 7725,
                                  name: 'h'
                                }
                              }
                            ]
                          },
                          body: {
                            type: 'IfStatement',
                            start: 7728,
                            end: 7954,
                            test: {
                              type: 'BinaryExpression',
                              start: 7731,
                              end: 7742,
                              operator: '!==',
                              left: {
                                type: 'MemberExpression',
                                start: 7731,
                                end: 7735,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 7731,
                                  end: 7732,
                                  name: 'e'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 7733,
                                  end: 7734,
                                  name: 'g'
                                }
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 7738,
                                end: 7742,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 7738,
                                  end: 7739,
                                  name: 'f'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 7740,
                                  end: 7741,
                                  name: 'h'
                                }
                              }
                            },
                            consequent: {
                              type: 'BlockStatement',
                              start: 7743,
                              end: 7954,
                              body: [
                                {
                                  type: 'IfStatement',
                                  start: 7744,
                                  end: 7948,
                                  test: {
                                    type: 'LogicalExpression',
                                    start: 7747,
                                    end: 7759,
                                    operator: '||',
                                    left: {
                                      type: 'BinaryExpression',
                                      start: 7747,
                                      end: 7752,
                                      operator: '!==',
                                      left: {
                                        type: 'Literal',
                                        start: 7747,
                                        end: 7748,
                                        raw: '1',
                                        value: 1
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 7751,
                                        end: 7752,
                                        name: 'g'
                                      }
                                    },
                                    right: {
                                      type: 'BinaryExpression',
                                      start: 7754,
                                      end: 7759,
                                      operator: '!==',
                                      left: {
                                        type: 'Literal',
                                        start: 7754,
                                        end: 7755,
                                        raw: '1',
                                        value: 1
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 7758,
                                        end: 7759,
                                        name: 'h'
                                      }
                                    }
                                  },
                                  consequent: {
                                    type: 'BlockStatement',
                                    start: 7760,
                                    end: 7948,
                                    body: [
                                      {
                                        type: 'DoWhileStatement',
                                        start: 7761,
                                        end: 7947,
                                        body: {
                                          type: 'IfStatement',
                                          start: 7764,
                                          end: 7930,
                                          test: {
                                            type: 'SequenceExpression',
                                            start: 7767,
                                            end: 7791,
                                            expressions: [
                                              {
                                                type: 'UpdateExpression',
                                                start: 7767,
                                                end: 7770,
                                                prefix: false,
                                                operator: '--',
                                                argument: {
                                                  type: 'Identifier',
                                                  start: 7767,
                                                  end: 7768,
                                                  name: 'g'
                                                }
                                              },
                                              {
                                                type: 'UpdateExpression',
                                                start: 7771,
                                                end: 7774,
                                                prefix: false,
                                                operator: '--',
                                                argument: {
                                                  type: 'Identifier',
                                                  start: 7771,
                                                  end: 7772,
                                                  name: 'h'
                                                }
                                              },
                                              {
                                                type: 'LogicalExpression',
                                                start: 7775,
                                                end: 7791,
                                                operator: '||',
                                                left: {
                                                  type: 'BinaryExpression',
                                                  start: 7775,
                                                  end: 7778,
                                                  operator: '>',
                                                  left: {
                                                    type: 'Literal',
                                                    start: 7775,
                                                    end: 7776,
                                                    raw: '0',
                                                    value: 0
                                                  },
                                                  right: {
                                                    type: 'Identifier',
                                                    start: 7777,
                                                    end: 7778,
                                                    name: 'h'
                                                  }
                                                },
                                                right: {
                                                  type: 'BinaryExpression',
                                                  start: 7780,
                                                  end: 7791,
                                                  operator: '!==',
                                                  left: {
                                                    type: 'MemberExpression',
                                                    start: 7780,
                                                    end: 7784,
                                                    computed: true,
                                                    optional: false,
                                                    object: {
                                                      type: 'Identifier',
                                                      start: 7780,
                                                      end: 7781,
                                                      name: 'e'
                                                    },
                                                    property: {
                                                      type: 'Identifier',
                                                      start: 7782,
                                                      end: 7783,
                                                      name: 'g'
                                                    }
                                                  },
                                                  right: {
                                                    type: 'MemberExpression',
                                                    start: 7787,
                                                    end: 7791,
                                                    computed: true,
                                                    optional: false,
                                                    object: {
                                                      type: 'Identifier',
                                                      start: 7787,
                                                      end: 7788,
                                                      name: 'f'
                                                    },
                                                    property: {
                                                      type: 'Identifier',
                                                      start: 7789,
                                                      end: 7790,
                                                      name: 'h'
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          consequent: {
                                            type: 'BlockStatement',
                                            start: 7792,
                                            end: 7930,
                                            body: [
                                              {
                                                type: 'VariableDeclaration',
                                                start: 7793,
                                                end: 7836,
                                                kind: 'var',
                                                declarations: [
                                                  {
                                                    type: 'VariableDeclarator',
                                                    start: 7797,
                                                    end: 7835,
                                                    id: {
                                                      type: 'Identifier',
                                                      start: 7797,
                                                      end: 7798,
                                                      name: 'k'
                                                    },
                                                    init: {
                                                      type: 'BinaryExpression',
                                                      start: 7799,
                                                      end: 7835,
                                                      operator: '+',
                                                      left: {
                                                        type: 'Literal',
                                                        start: 7799,
                                                        end: 7803,
                                                        value: '\n',
                                                        raw: '"\\n"'
                                                      },
                                                      right: {
                                                        type: 'CallExpression',
                                                        start: 7804,
                                                        end: 7835,
                                                        optional: false,
                                                        callee: {
                                                          type: 'MemberExpression',
                                                          start: 7804,
                                                          end: 7816,
                                                          computed: false,
                                                          optional: false,
                                                          object: {
                                                            type: 'MemberExpression',
                                                            start: 7804,
                                                            end: 7808,
                                                            computed: true,
                                                            optional: false,
                                                            object: {
                                                              type: 'Identifier',
                                                              start: 7804,
                                                              end: 7805,
                                                              name: 'e'
                                                            },
                                                            property: {
                                                              type: 'Identifier',
                                                              start: 7806,
                                                              end: 7807,
                                                              name: 'g'
                                                            }
                                                          },
                                                          property: {
                                                            type: 'Identifier',
                                                            start: 7809,
                                                            end: 7816,
                                                            name: 'replace'
                                                          }
                                                        },
                                                        arguments: [
                                                          {
                                                            type: 'Literal',
                                                            start: 7817,
                                                            end: 7827,
                                                            value: ' at new ',
                                                            raw: '" at new "'
                                                          },
                                                          {
                                                            type: 'Literal',
                                                            start: 7828,
                                                            end: 7834,
                                                            value: ' at ',
                                                            raw: '" at "'
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                type: 'ExpressionStatement',
                                                start: 7836,
                                                end: 7921,
                                                expression: {
                                                  type: 'LogicalExpression',
                                                  start: 7836,
                                                  end: 7920,
                                                  operator: '&&',
                                                  left: {
                                                    type: 'LogicalExpression',
                                                    start: 7836,
                                                    end: 7876,
                                                    operator: '&&',
                                                    left: {
                                                      type: 'MemberExpression',
                                                      start: 7836,
                                                      end: 7849,
                                                      computed: false,
                                                      optional: false,
                                                      object: {
                                                        type: 'Identifier',
                                                        start: 7836,
                                                        end: 7837,
                                                        name: 'a'
                                                      },
                                                      property: {
                                                        type: 'Identifier',
                                                        start: 7838,
                                                        end: 7849,
                                                        name: 'displayName'
                                                      }
                                                    },
                                                    right: {
                                                      type: 'CallExpression',
                                                      start: 7851,
                                                      end: 7876,
                                                      optional: false,
                                                      callee: {
                                                        type: 'MemberExpression',
                                                        start: 7851,
                                                        end: 7861,
                                                        computed: false,
                                                        optional: false,
                                                        object: {
                                                          type: 'Identifier',
                                                          start: 7851,
                                                          end: 7852,
                                                          name: 'k'
                                                        },
                                                        property: {
                                                          type: 'Identifier',
                                                          start: 7853,
                                                          end: 7861,
                                                          name: 'includes'
                                                        }
                                                      },
                                                      arguments: [
                                                        {
                                                          type: 'Literal',
                                                          start: 7862,
                                                          end: 7875,
                                                          value: '<anonymous>',
                                                          raw: '"<anonymous>"'
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  right: {
                                                    type: 'AssignmentExpression',
                                                    start: 7879,
                                                    end: 7919,
                                                    operator: '=',
                                                    left: {
                                                      type: 'Identifier',
                                                      start: 7879,
                                                      end: 7880,
                                                      name: 'k'
                                                    },
                                                    right: {
                                                      type: 'CallExpression',
                                                      start: 7881,
                                                      end: 7919,
                                                      optional: false,
                                                      callee: {
                                                        type: 'MemberExpression',
                                                        start: 7881,
                                                        end: 7890,
                                                        computed: false,
                                                        optional: false,
                                                        object: {
                                                          type: 'Identifier',
                                                          start: 7881,
                                                          end: 7882,
                                                          name: 'k'
                                                        },
                                                        property: {
                                                          type: 'Identifier',
                                                          start: 7883,
                                                          end: 7890,
                                                          name: 'replace'
                                                        }
                                                      },
                                                      arguments: [
                                                        {
                                                          type: 'Literal',
                                                          start: 7891,
                                                          end: 7904,
                                                          value: '<anonymous>',
                                                          raw: '"<anonymous>"'
                                                        },
                                                        {
                                                          type: 'MemberExpression',
                                                          start: 7905,
                                                          end: 7918,
                                                          computed: false,
                                                          optional: false,
                                                          object: {
                                                            type: 'Identifier',
                                                            start: 7905,
                                                            end: 7906,
                                                            name: 'a'
                                                          },
                                                          property: {
                                                            type: 'Identifier',
                                                            start: 7907,
                                                            end: 7918,
                                                            name: 'displayName'
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                type: 'ReturnStatement',
                                                start: 7921,
                                                end: 7929,
                                                argument: {
                                                  type: 'Identifier',
                                                  start: 7928,
                                                  end: 7929,
                                                  name: 'k'
                                                }
                                              }
                                            ]
                                          },
                                          alternate: null
                                        },
                                        test: {
                                          type: 'LogicalExpression',
                                          start: 7936,
                                          end: 7946,
                                          operator: '&&',
                                          left: {
                                            type: 'BinaryExpression',
                                            start: 7936,
                                            end: 7940,
                                            operator: '<=',
                                            left: {
                                              type: 'Literal',
                                              start: 7936,
                                              end: 7937,
                                              raw: '1',
                                              value: 1
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 7939,
                                              end: 7940,
                                              name: 'g'
                                            }
                                          },
                                          right: {
                                            type: 'BinaryExpression',
                                            start: 7942,
                                            end: 7946,
                                            operator: '<=',
                                            left: {
                                              type: 'Literal',
                                              start: 7942,
                                              end: 7943,
                                              raw: '0',
                                              value: 0
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 7945,
                                              end: 7946,
                                              name: 'h'
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  alternate: null
                                },
                                {
                                  type: 'BreakStatement',
                                  start: 7948,
                                  end: 7953,
                                  label: null
                                }
                              ]
                            },
                            alternate: null
                          }
                        }
                      ]
                    },
                    alternate: null
                  }
                ]
              }
            },
            finalizer: {
              type: 'BlockStatement',
              start: 7963,
              end: 7996,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 7964,
                  end: 7995,
                  expression: {
                    type: 'SequenceExpression',
                    start: 7964,
                    end: 7995,
                    expressions: [
                      {
                        type: 'AssignmentExpression',
                        start: 7964,
                        end: 7969,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 7964,
                          end: 7966,
                          name: 'Na'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 7967,
                          end: 7969,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 7968,
                            end: 7969,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      },
                      {
                        type: 'AssignmentExpression',
                        start: 7970,
                        end: 7995,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 7970,
                          end: 7993,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 7970,
                            end: 7975,
                            name: 'Error'
                          },
                          property: {
                            type: 'Identifier',
                            start: 7976,
                            end: 7993,
                            name: 'prepareStackTrace'
                          }
                        },
                        right: {
                          type: 'Identifier',
                          start: 7994,
                          end: 7995,
                          name: 'c'
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            type: 'ReturnStatement',
            start: 7996,
            end: 8041,
            argument: {
              type: 'ConditionalExpression',
              start: 8002,
              end: 8041,
              test: {
                type: 'AssignmentExpression',
                start: 8003,
                end: 8031,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 8003,
                  end: 8004,
                  name: 'a'
                },
                right: {
                  type: 'ConditionalExpression',
                  start: 8005,
                  end: 8031,
                  test: {
                    type: 'Identifier',
                    start: 8005,
                    end: 8006,
                    name: 'a'
                  },
                  consequent: {
                    type: 'LogicalExpression',
                    start: 8007,
                    end: 8028,
                    operator: '||',
                    left: {
                      type: 'MemberExpression',
                      start: 8007,
                      end: 8020,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 8007,
                        end: 8008,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 8009,
                        end: 8020,
                        name: 'displayName'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 8022,
                      end: 8028,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 8022,
                        end: 8023,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 8024,
                        end: 8028,
                        name: 'name'
                      }
                    }
                  },
                  alternate: {
                    type: 'Literal',
                    start: 8029,
                    end: 8031,
                    value: '',
                    raw: '""'
                  }
                }
              },
              consequent: {
                type: 'CallExpression',
                start: 8033,
                end: 8038,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 8033,
                  end: 8035,
                  name: 'Ma'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 8036,
                    end: 8037,
                    name: 'a'
                  }
                ]
              },
              alternate: {
                type: 'Literal',
                start: 8039,
                end: 8041,
                value: '',
                raw: '""'
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 8043,
      end: 8324,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 8052, end: 8054, name: 'Pa' },
      params: [ { type: 'Identifier', start: 8055, end: 8056, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 8057,
        end: 8324,
        body: [
          {
            type: 'SwitchStatement',
            start: 8058,
            end: 8323,
            discriminant: {
              type: 'MemberExpression',
              start: 8065,
              end: 8070,
              computed: false,
              optional: false,
              object: { type: 'Identifier', start: 8065, end: 8066, name: 'a' },
              property: {
                type: 'Identifier',
                start: 8067,
                end: 8070,
                name: 'tag'
              }
            },
            cases: [
              {
                type: 'SwitchCase',
                start: 8072,
                end: 8097,
                test: {
                  type: 'Literal',
                  start: 8077,
                  end: 8078,
                  raw: '5',
                  value: 5
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8079,
                    end: 8097,
                    argument: {
                      type: 'CallExpression',
                      start: 8086,
                      end: 8096,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 8086,
                        end: 8088,
                        name: 'Ma'
                      },
                      arguments: [
                        {
                          type: 'MemberExpression',
                          start: 8089,
                          end: 8095,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8089,
                            end: 8090,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8091,
                            end: 8095,
                            name: 'type'
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8097,
                end: 8123,
                test: {
                  type: 'Literal',
                  start: 8102,
                  end: 8104,
                  raw: '16',
                  value: 16
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8105,
                    end: 8123,
                    argument: {
                      type: 'CallExpression',
                      start: 8112,
                      end: 8122,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 8112,
                        end: 8114,
                        name: 'Ma'
                      },
                      arguments: [
                        {
                          type: 'Literal',
                          start: 8115,
                          end: 8121,
                          value: 'Lazy',
                          raw: '"Lazy"'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8123,
                end: 8153,
                test: {
                  type: 'Literal',
                  start: 8128,
                  end: 8130,
                  raw: '13',
                  value: 13
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8131,
                    end: 8153,
                    argument: {
                      type: 'CallExpression',
                      start: 8138,
                      end: 8152,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 8138,
                        end: 8140,
                        name: 'Ma'
                      },
                      arguments: [
                        {
                          type: 'Literal',
                          start: 8141,
                          end: 8151,
                          value: 'Suspense',
                          raw: '"Suspense"'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8153,
                end: 8187,
                test: {
                  type: 'Literal',
                  start: 8158,
                  end: 8160,
                  raw: '19',
                  value: 19
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8161,
                    end: 8187,
                    argument: {
                      type: 'CallExpression',
                      start: 8168,
                      end: 8186,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 8168,
                        end: 8170,
                        name: 'Ma'
                      },
                      arguments: [
                        {
                          type: 'Literal',
                          start: 8171,
                          end: 8185,
                          value: 'SuspenseList',
                          raw: '"SuspenseList"'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8187,
                end: 8194,
                test: {
                  type: 'Literal',
                  start: 8192,
                  end: 8193,
                  raw: '0',
                  value: 0
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 8194,
                end: 8201,
                test: {
                  type: 'Literal',
                  start: 8199,
                  end: 8200,
                  raw: '2',
                  value: 2
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 8201,
                end: 8234,
                test: {
                  type: 'Literal',
                  start: 8206,
                  end: 8208,
                  raw: '15',
                  value: 15
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8209,
                    end: 8234,
                    argument: {
                      type: 'SequenceExpression',
                      start: 8216,
                      end: 8233,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 8216,
                          end: 8231,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 8216,
                            end: 8217,
                            name: 'a'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 8218,
                            end: 8231,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 8218,
                              end: 8220,
                              name: 'Oa'
                            },
                            arguments: [
                              {
                                type: 'MemberExpression',
                                start: 8221,
                                end: 8227,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 8221,
                                  end: 8222,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 8223,
                                  end: 8227,
                                  name: 'type'
                                }
                              },
                              {
                                type: 'UnaryExpression',
                                start: 8228,
                                end: 8230,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 8229,
                                  end: 8230,
                                  raw: '1',
                                  value: 1
                                },
                                prefix: true
                              }
                            ]
                          }
                        },
                        {
                          type: 'Identifier',
                          start: 8232,
                          end: 8233,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8234,
                end: 8274,
                test: {
                  type: 'Literal',
                  start: 8239,
                  end: 8241,
                  raw: '11',
                  value: 11
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8242,
                    end: 8274,
                    argument: {
                      type: 'SequenceExpression',
                      start: 8249,
                      end: 8273,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 8249,
                          end: 8271,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 8249,
                            end: 8250,
                            name: 'a'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 8251,
                            end: 8271,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 8251,
                              end: 8253,
                              name: 'Oa'
                            },
                            arguments: [
                              {
                                type: 'MemberExpression',
                                start: 8254,
                                end: 8267,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'MemberExpression',
                                  start: 8254,
                                  end: 8260,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 8254,
                                    end: 8255,
                                    name: 'a'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 8256,
                                    end: 8260,
                                    name: 'type'
                                  }
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 8261,
                                  end: 8267,
                                  name: 'render'
                                }
                              },
                              {
                                type: 'UnaryExpression',
                                start: 8268,
                                end: 8270,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 8269,
                                  end: 8270,
                                  raw: '1',
                                  value: 1
                                },
                                prefix: true
                              }
                            ]
                          }
                        },
                        {
                          type: 'Identifier',
                          start: 8272,
                          end: 8273,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8274,
                end: 8306,
                test: {
                  type: 'Literal',
                  start: 8279,
                  end: 8280,
                  raw: '1',
                  value: 1
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8281,
                    end: 8306,
                    argument: {
                      type: 'SequenceExpression',
                      start: 8288,
                      end: 8305,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 8288,
                          end: 8303,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 8288,
                            end: 8289,
                            name: 'a'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 8290,
                            end: 8303,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 8290,
                              end: 8292,
                              name: 'Oa'
                            },
                            arguments: [
                              {
                                type: 'MemberExpression',
                                start: 8293,
                                end: 8299,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 8293,
                                  end: 8294,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 8295,
                                  end: 8299,
                                  name: 'type'
                                }
                              },
                              {
                                type: 'UnaryExpression',
                                start: 8300,
                                end: 8302,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 8301,
                                  end: 8302,
                                  raw: '0',
                                  value: 0
                                },
                                prefix: true
                              }
                            ]
                          }
                        },
                        {
                          type: 'Identifier',
                          start: 8304,
                          end: 8305,
                          name: 'a'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8306,
                end: 8322,
                test: null,
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8314,
                    end: 8322,
                    argument: {
                      type: 'Literal',
                      start: 8320,
                      end: 8322,
                      value: '',
                      raw: '""'
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 8325,
      end: 9041,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 8334, end: 8336, name: 'Qa' },
      params: [ { type: 'Identifier', start: 8337, end: 8338, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 8339,
        end: 9041,
        body: [
          {
            type: 'IfStatement',
            start: 8340,
            end: 8363,
            test: {
              type: 'BinaryExpression',
              start: 8343,
              end: 8350,
              operator: '==',
              left: {
                type: 'Literal',
                start: 8343,
                end: 8347,
                raw: 'null',
                value: null
              },
              right: { type: 'Identifier', start: 8349, end: 8350, name: 'a' }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 8351,
              end: 8363,
              argument: {
                type: 'Literal',
                start: 8358,
                end: 8362,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 8363,
            end: 8423,
            test: {
              type: 'BinaryExpression',
              start: 8366,
              end: 8387,
              operator: '===',
              left: {
                type: 'Literal',
                start: 8366,
                end: 8376,
                value: 'function',
                raw: '"function"'
              },
              right: {
                type: 'UnaryExpression',
                start: 8379,
                end: 8387,
                operator: 'typeof',
                argument: {
                  type: 'Identifier',
                  start: 8386,
                  end: 8387,
                  name: 'a'
                },
                prefix: true
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 8388,
              end: 8423,
              argument: {
                type: 'LogicalExpression',
                start: 8395,
                end: 8422,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 8395,
                  end: 8416,
                  operator: '||',
                  left: {
                    type: 'MemberExpression',
                    start: 8395,
                    end: 8408,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 8395,
                      end: 8396,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 8397,
                      end: 8408,
                      name: 'displayName'
                    }
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 8410,
                    end: 8416,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 8410,
                      end: 8411,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 8412,
                      end: 8416,
                      name: 'name'
                    }
                  }
                },
                right: {
                  type: 'Literal',
                  start: 8418,
                  end: 8422,
                  raw: 'null',
                  value: null
                }
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 8423,
            end: 8455,
            test: {
              type: 'BinaryExpression',
              start: 8426,
              end: 8445,
              operator: '===',
              left: {
                type: 'Literal',
                start: 8426,
                end: 8434,
                value: 'string',
                raw: '"string"'
              },
              right: {
                type: 'UnaryExpression',
                start: 8437,
                end: 8445,
                operator: 'typeof',
                argument: {
                  type: 'Identifier',
                  start: 8444,
                  end: 8445,
                  name: 'a'
                },
                prefix: true
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 8446,
              end: 8455,
              argument: { type: 'Identifier', start: 8453, end: 8454, name: 'a' }
            },
            alternate: null
          },
          {
            type: 'SwitchStatement',
            start: 8455,
            end: 8619,
            discriminant: { type: 'Identifier', start: 8462, end: 8463, name: 'a' },
            cases: [
              {
                type: 'SwitchCase',
                start: 8465,
                end: 8490,
                test: {
                  type: 'Identifier',
                  start: 8470,
                  end: 8472,
                  name: 'ya'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8473,
                    end: 8490,
                    argument: {
                      type: 'Literal',
                      start: 8479,
                      end: 8489,
                      value: 'Fragment',
                      raw: '"Fragment"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8490,
                end: 8513,
                test: {
                  type: 'Identifier',
                  start: 8495,
                  end: 8497,
                  name: 'wa'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8498,
                    end: 8513,
                    argument: {
                      type: 'Literal',
                      start: 8504,
                      end: 8512,
                      value: 'Portal',
                      raw: '"Portal"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8513,
                end: 8538,
                test: {
                  type: 'Identifier',
                  start: 8518,
                  end: 8520,
                  name: 'Aa'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8521,
                    end: 8538,
                    argument: {
                      type: 'Literal',
                      start: 8527,
                      end: 8537,
                      value: 'Profiler',
                      raw: '"Profiler"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8538,
                end: 8565,
                test: {
                  type: 'Identifier',
                  start: 8543,
                  end: 8545,
                  name: 'za'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8546,
                    end: 8565,
                    argument: {
                      type: 'Literal',
                      start: 8552,
                      end: 8564,
                      value: 'StrictMode',
                      raw: '"StrictMode"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8565,
                end: 8590,
                test: {
                  type: 'Identifier',
                  start: 8570,
                  end: 8572,
                  name: 'Ea'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8573,
                    end: 8590,
                    argument: {
                      type: 'Literal',
                      start: 8579,
                      end: 8589,
                      value: 'Suspense',
                      raw: '"Suspense"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 8590,
                end: 8618,
                test: {
                  type: 'Identifier',
                  start: 8595,
                  end: 8597,
                  name: 'Fa'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 8598,
                    end: 8618,
                    argument: {
                      type: 'Literal',
                      start: 8604,
                      end: 8618,
                      value: 'SuspenseList',
                      raw: '"SuspenseList"'
                    }
                  }
                ]
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 8619,
            end: 9029,
            test: {
              type: 'BinaryExpression',
              start: 8622,
              end: 8641,
              operator: '===',
              left: {
                type: 'Literal',
                start: 8622,
                end: 8630,
                value: 'object',
                raw: '"object"'
              },
              right: {
                type: 'UnaryExpression',
                start: 8633,
                end: 8641,
                operator: 'typeof',
                argument: {
                  type: 'Identifier',
                  start: 8640,
                  end: 8641,
                  name: 'a'
                },
                prefix: true
              }
            },
            consequent: {
              type: 'SwitchStatement',
              start: 8642,
              end: 9029,
              discriminant: {
                type: 'MemberExpression',
                start: 8649,
                end: 8659,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 8649,
                  end: 8650,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 8651,
                  end: 8659,
                  name: '$$typeof'
                }
              },
              cases: [
                {
                  type: 'SwitchCase',
                  start: 8661,
                  end: 8714,
                  test: {
                    type: 'Identifier',
                    start: 8666,
                    end: 8668,
                    name: 'Ca'
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 8669,
                      end: 8714,
                      argument: {
                        type: 'BinaryExpression',
                        start: 8675,
                        end: 8713,
                        operator: '+',
                        left: {
                          type: 'LogicalExpression',
                          start: 8676,
                          end: 8700,
                          operator: '||',
                          left: {
                            type: 'MemberExpression',
                            start: 8676,
                            end: 8689,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 8676,
                              end: 8677,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 8678,
                              end: 8689,
                              name: 'displayName'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 8691,
                            end: 8700,
                            value: 'Context',
                            raw: '"Context"'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 8702,
                          end: 8713,
                          value: '.Consumer',
                          raw: '".Consumer"'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 8714,
                  end: 8776,
                  test: {
                    type: 'Identifier',
                    start: 8719,
                    end: 8721,
                    name: 'Ba'
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 8722,
                      end: 8776,
                      argument: {
                        type: 'BinaryExpression',
                        start: 8728,
                        end: 8775,
                        operator: '+',
                        left: {
                          type: 'LogicalExpression',
                          start: 8729,
                          end: 8762,
                          operator: '||',
                          left: {
                            type: 'MemberExpression',
                            start: 8729,
                            end: 8751,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'MemberExpression',
                              start: 8729,
                              end: 8739,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 8729,
                                end: 8730,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 8731,
                                end: 8739,
                                name: '_context'
                              }
                            },
                            property: {
                              type: 'Identifier',
                              start: 8740,
                              end: 8751,
                              name: 'displayName'
                            }
                          },
                          right: {
                            type: 'Literal',
                            start: 8753,
                            end: 8762,
                            value: 'Context',
                            raw: '"Context"'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 8764,
                          end: 8775,
                          value: '.Provider',
                          raw: '".Provider"'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 8776,
                  end: 8900,
                  test: {
                    type: 'Identifier',
                    start: 8781,
                    end: 8783,
                    name: 'Da'
                  },
                  consequent: [
                    {
                      type: 'VariableDeclaration',
                      start: 8784,
                      end: 8799,
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          start: 8788,
                          end: 8798,
                          id: {
                            type: 'Identifier',
                            start: 8788,
                            end: 8789,
                            name: 'b'
                          },
                          init: {
                            type: 'MemberExpression',
                            start: 8790,
                            end: 8798,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 8790,
                              end: 8791,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 8792,
                              end: 8798,
                              name: 'render'
                            }
                          }
                        }
                      ]
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 8799,
                      end: 8815,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 8799,
                        end: 8814,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 8799,
                          end: 8800,
                          name: 'a'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 8801,
                          end: 8814,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8801,
                            end: 8802,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8803,
                            end: 8814,
                            name: 'displayName'
                          }
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 8815,
                      end: 8891,
                      expression: {
                        type: 'LogicalExpression',
                        start: 8815,
                        end: 8890,
                        operator: '||',
                        left: {
                          type: 'Identifier',
                          start: 8815,
                          end: 8816,
                          name: 'a'
                        },
                        right: {
                          type: 'SequenceExpression',
                          start: 8819,
                          end: 8889,
                          expressions: [
                            {
                              type: 'AssignmentExpression',
                              start: 8819,
                              end: 8847,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 8819,
                                end: 8820,
                                name: 'a'
                              },
                              right: {
                                type: 'LogicalExpression',
                                start: 8821,
                                end: 8847,
                                operator: '||',
                                left: {
                                  type: 'LogicalExpression',
                                  start: 8821,
                                  end: 8843,
                                  operator: '||',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 8821,
                                    end: 8834,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 8821,
                                      end: 8822,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 8823,
                                      end: 8834,
                                      name: 'displayName'
                                    }
                                  },
                                  right: {
                                    type: 'MemberExpression',
                                    start: 8837,
                                    end: 8843,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 8837,
                                      end: 8838,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 8839,
                                      end: 8843,
                                      name: 'name'
                                    }
                                  }
                                },
                                right: {
                                  type: 'Literal',
                                  start: 8845,
                                  end: 8847,
                                  value: '',
                                  raw: '""'
                                }
                              }
                            },
                            {
                              type: 'AssignmentExpression',
                              start: 8848,
                              end: 8889,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 8848,
                                end: 8849,
                                name: 'a'
                              },
                              right: {
                                type: 'ConditionalExpression',
                                start: 8850,
                                end: 8889,
                                test: {
                                  type: 'BinaryExpression',
                                  start: 8850,
                                  end: 8856,
                                  operator: '!==',
                                  left: {
                                    type: 'Literal',
                                    start: 8850,
                                    end: 8852,
                                    value: '',
                                    raw: '""'
                                  },
                                  right: {
                                    type: 'Identifier',
                                    start: 8855,
                                    end: 8856,
                                    name: 'a'
                                  }
                                },
                                consequent: {
                                  type: 'BinaryExpression',
                                  start: 8857,
                                  end: 8876,
                                  operator: '+',
                                  left: {
                                    type: 'BinaryExpression',
                                    start: 8857,
                                    end: 8872,
                                    operator: '+',
                                    left: {
                                      type: 'Literal',
                                      start: 8857,
                                      end: 8870,
                                      value: 'ForwardRef(',
                                      raw: '"ForwardRef("'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 8871,
                                      end: 8872,
                                      name: 'a'
                                    }
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 8873,
                                    end: 8876,
                                    value: ')',
                                    raw: '")"'
                                  }
                                },
                                alternate: {
                                  type: 'Literal',
                                  start: 8877,
                                  end: 8889,
                                  value: 'ForwardRef',
                                  raw: '"ForwardRef"'
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      type: 'ReturnStatement',
                      start: 8891,
                      end: 8900,
                      argument: {
                        type: 'Identifier',
                        start: 8898,
                        end: 8899,
                        name: 'a'
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 8900,
                  end: 8967,
                  test: {
                    type: 'Identifier',
                    start: 8905,
                    end: 8907,
                    name: 'Ga'
                  },
                  consequent: [
                    {
                      type: 'ReturnStatement',
                      start: 8908,
                      end: 8967,
                      argument: {
                        type: 'SequenceExpression',
                        start: 8915,
                        end: 8966,
                        expressions: [
                          {
                            type: 'AssignmentExpression',
                            start: 8915,
                            end: 8936,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 8915,
                              end: 8916,
                              name: 'b'
                            },
                            right: {
                              type: 'LogicalExpression',
                              start: 8917,
                              end: 8936,
                              operator: '||',
                              left: {
                                type: 'MemberExpression',
                                start: 8917,
                                end: 8930,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 8917,
                                  end: 8918,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 8919,
                                  end: 8930,
                                  name: 'displayName'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 8932,
                                end: 8936,
                                raw: 'null',
                                value: null
                              }
                            }
                          },
                          {
                            type: 'ConditionalExpression',
                            start: 8937,
                            end: 8966,
                            test: {
                              type: 'BinaryExpression',
                              start: 8937,
                              end: 8945,
                              operator: '!==',
                              left: {
                                type: 'Literal',
                                start: 8937,
                                end: 8941,
                                raw: 'null',
                                value: null
                              },
                              right: {
                                type: 'Identifier',
                                start: 8944,
                                end: 8945,
                                name: 'b'
                              }
                            },
                            consequent: {
                              type: 'Identifier',
                              start: 8946,
                              end: 8947,
                              name: 'b'
                            },
                            alternate: {
                              type: 'LogicalExpression',
                              start: 8948,
                              end: 8966,
                              operator: '||',
                              left: {
                                type: 'CallExpression',
                                start: 8948,
                                end: 8958,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 8948,
                                  end: 8950,
                                  name: 'Qa'
                                },
                                arguments: [
                                  {
                                    type: 'MemberExpression',
                                    start: 8951,
                                    end: 8957,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 8951,
                                      end: 8952,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 8953,
                                      end: 8957,
                                      name: 'type'
                                    }
                                  }
                                ]
                              },
                              right: {
                                type: 'Literal',
                                start: 8960,
                                end: 8966,
                                value: 'Memo',
                                raw: '"Memo"'
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 8967,
                  end: 9028,
                  test: {
                    type: 'Identifier',
                    start: 8972,
                    end: 8974,
                    name: 'Ha'
                  },
                  consequent: [
                    {
                      type: 'ExpressionStatement',
                      start: 8975,
                      end: 8988,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 8975,
                        end: 8987,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 8975,
                          end: 8976,
                          name: 'b'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 8977,
                          end: 8987,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8977,
                            end: 8978,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8979,
                            end: 8987,
                            name: '_payload'
                          }
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 8988,
                      end: 8998,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 8988,
                        end: 8997,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 8988,
                          end: 8989,
                          name: 'a'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 8990,
                          end: 8997,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 8990,
                            end: 8991,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 8992,
                            end: 8997,
                            name: '_init'
                          }
                        }
                      }
                    },
                    {
                      type: 'TryStatement',
                      start: 8998,
                      end: 9028,
                      block: {
                        type: 'BlockStatement',
                        start: 9001,
                        end: 9018,
                        body: [
                          {
                            type: 'ReturnStatement',
                            start: 9002,
                            end: 9017,
                            argument: {
                              type: 'CallExpression',
                              start: 9009,
                              end: 9017,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 9009,
                                end: 9011,
                                name: 'Qa'
                              },
                              arguments: [
                                {
                                  type: 'CallExpression',
                                  start: 9012,
                                  end: 9016,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 9012,
                                    end: 9013,
                                    name: 'a'
                                  },
                                  arguments: [
                                    {
                                      type: 'Identifier',
                                      start: 9014,
                                      end: 9015,
                                      name: 'b'
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      handler: {
                        type: 'CatchClause',
                        start: 9018,
                        end: 9028,
                        param: {
                          type: 'Identifier',
                          start: 9024,
                          end: 9025,
                          name: 'c'
                        },
                        body: {
                          type: 'BlockStatement',
                          start: 9026,
                          end: 9028,
                          body: []
                        }
                      },
                      finalizer: null
                    }
                  ]
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 9029,
            end: 9040,
            argument: {
              type: 'Literal',
              start: 9036,
              end: 9040,
              raw: 'null',
              value: null
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 9042,
      end: 9837,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 9051, end: 9053, name: 'Ra' },
      params: [ { type: 'Identifier', start: 9054, end: 9055, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 9056,
        end: 9837,
        body: [
          {
            type: 'VariableDeclaration',
            start: 9057,
            end: 9070,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 9061,
                end: 9069,
                id: {
                  type: 'Identifier',
                  start: 9061,
                  end: 9062,
                  name: 'b'
                },
                init: {
                  type: 'MemberExpression',
                  start: 9063,
                  end: 9069,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 9063,
                    end: 9064,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 9065,
                    end: 9069,
                    name: 'type'
                  }
                }
              }
            ]
          },
          {
            type: 'SwitchStatement',
            start: 9070,
            end: 9825,
            discriminant: {
              type: 'MemberExpression',
              start: 9077,
              end: 9082,
              computed: false,
              optional: false,
              object: { type: 'Identifier', start: 9077, end: 9078, name: 'a' },
              property: {
                type: 'Identifier',
                start: 9079,
                end: 9082,
                name: 'tag'
              }
            },
            cases: [
              {
                type: 'SwitchCase',
                start: 9084,
                end: 9106,
                test: {
                  type: 'Literal',
                  start: 9089,
                  end: 9091,
                  raw: '24',
                  value: 24
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9092,
                    end: 9106,
                    argument: {
                      type: 'Literal',
                      start: 9098,
                      end: 9105,
                      value: 'Cache',
                      raw: '"Cache"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9106,
                end: 9158,
                test: {
                  type: 'Literal',
                  start: 9111,
                  end: 9112,
                  raw: '9',
                  value: 9
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9113,
                    end: 9158,
                    argument: {
                      type: 'BinaryExpression',
                      start: 9119,
                      end: 9157,
                      operator: '+',
                      left: {
                        type: 'LogicalExpression',
                        start: 9120,
                        end: 9144,
                        operator: '||',
                        left: {
                          type: 'MemberExpression',
                          start: 9120,
                          end: 9133,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 9120,
                            end: 9121,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 9122,
                            end: 9133,
                            name: 'displayName'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 9135,
                          end: 9144,
                          value: 'Context',
                          raw: '"Context"'
                        }
                      },
                      right: {
                        type: 'Literal',
                        start: 9146,
                        end: 9157,
                        value: '.Consumer',
                        raw: '".Consumer"'
                      }
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9158,
                end: 9220,
                test: {
                  type: 'Literal',
                  start: 9163,
                  end: 9165,
                  raw: '10',
                  value: 10
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9166,
                    end: 9220,
                    argument: {
                      type: 'BinaryExpression',
                      start: 9172,
                      end: 9219,
                      operator: '+',
                      left: {
                        type: 'LogicalExpression',
                        start: 9173,
                        end: 9206,
                        operator: '||',
                        left: {
                          type: 'MemberExpression',
                          start: 9173,
                          end: 9195,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'MemberExpression',
                            start: 9173,
                            end: 9183,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 9173,
                              end: 9174,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 9175,
                              end: 9183,
                              name: '_context'
                            }
                          },
                          property: {
                            type: 'Identifier',
                            start: 9184,
                            end: 9195,
                            name: 'displayName'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 9197,
                          end: 9206,
                          value: 'Context',
                          raw: '"Context"'
                        }
                      },
                      right: {
                        type: 'Literal',
                        start: 9208,
                        end: 9219,
                        value: '.Provider',
                        raw: '".Provider"'
                      }
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9220,
                end: 9255,
                test: {
                  type: 'Literal',
                  start: 9225,
                  end: 9227,
                  raw: '18',
                  value: 18
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9228,
                    end: 9255,
                    argument: {
                      type: 'Literal',
                      start: 9234,
                      end: 9254,
                      value: 'DehydratedFragment',
                      raw: '"DehydratedFragment"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9255,
                end: 9366,
                test: {
                  type: 'Literal',
                  start: 9260,
                  end: 9262,
                  raw: '11',
                  value: 11
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9263,
                    end: 9366,
                    argument: {
                      type: 'SequenceExpression',
                      start: 9270,
                      end: 9365,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 9270,
                          end: 9280,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 9270,
                            end: 9271,
                            name: 'a'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 9272,
                            end: 9280,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 9272,
                              end: 9273,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 9274,
                              end: 9280,
                              name: 'render'
                            }
                          }
                        },
                        {
                          type: 'AssignmentExpression',
                          start: 9281,
                          end: 9308,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 9281,
                            end: 9282,
                            name: 'a'
                          },
                          right: {
                            type: 'LogicalExpression',
                            start: 9283,
                            end: 9308,
                            operator: '||',
                            left: {
                              type: 'LogicalExpression',
                              start: 9283,
                              end: 9304,
                              operator: '||',
                              left: {
                                type: 'MemberExpression',
                                start: 9283,
                                end: 9296,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 9283,
                                  end: 9284,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 9285,
                                  end: 9296,
                                  name: 'displayName'
                                }
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 9298,
                                end: 9304,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 9298,
                                  end: 9299,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 9300,
                                  end: 9304,
                                  name: 'name'
                                }
                              }
                            },
                            right: {
                              type: 'Literal',
                              start: 9306,
                              end: 9308,
                              value: '',
                              raw: '""'
                            }
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 9309,
                          end: 9365,
                          operator: '||',
                          left: {
                            type: 'MemberExpression',
                            start: 9309,
                            end: 9322,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 9309,
                              end: 9310,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 9311,
                              end: 9322,
                              name: 'displayName'
                            }
                          },
                          right: {
                            type: 'ConditionalExpression',
                            start: 9325,
                            end: 9364,
                            test: {
                              type: 'BinaryExpression',
                              start: 9325,
                              end: 9331,
                              operator: '!==',
                              left: {
                                type: 'Literal',
                                start: 9325,
                                end: 9327,
                                value: '',
                                raw: '""'
                              },
                              right: {
                                type: 'Identifier',
                                start: 9330,
                                end: 9331,
                                name: 'a'
                              }
                            },
                            consequent: {
                              type: 'BinaryExpression',
                              start: 9332,
                              end: 9351,
                              operator: '+',
                              left: {
                                type: 'BinaryExpression',
                                start: 9332,
                                end: 9347,
                                operator: '+',
                                left: {
                                  type: 'Literal',
                                  start: 9332,
                                  end: 9345,
                                  value: 'ForwardRef(',
                                  raw: '"ForwardRef("'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 9346,
                                  end: 9347,
                                  name: 'a'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 9348,
                                end: 9351,
                                value: ')',
                                raw: '")"'
                              }
                            },
                            alternate: {
                              type: 'Literal',
                              start: 9352,
                              end: 9364,
                              value: 'ForwardRef',
                              raw: '"ForwardRef"'
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9366,
                end: 9390,
                test: {
                  type: 'Literal',
                  start: 9371,
                  end: 9372,
                  raw: '7',
                  value: 7
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9373,
                    end: 9390,
                    argument: {
                      type: 'Literal',
                      start: 9379,
                      end: 9389,
                      value: 'Fragment',
                      raw: '"Fragment"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9390,
                end: 9406,
                test: {
                  type: 'Literal',
                  start: 9395,
                  end: 9396,
                  raw: '5',
                  value: 5
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9397,
                    end: 9406,
                    argument: {
                      type: 'Identifier',
                      start: 9404,
                      end: 9405,
                      name: 'b'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9406,
                end: 9428,
                test: {
                  type: 'Literal',
                  start: 9411,
                  end: 9412,
                  raw: '4',
                  value: 4
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9413,
                    end: 9428,
                    argument: {
                      type: 'Literal',
                      start: 9419,
                      end: 9427,
                      value: 'Portal',
                      raw: '"Portal"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9428,
                end: 9448,
                test: {
                  type: 'Literal',
                  start: 9433,
                  end: 9434,
                  raw: '3',
                  value: 3
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9435,
                    end: 9448,
                    argument: {
                      type: 'Literal',
                      start: 9441,
                      end: 9447,
                      value: 'Root',
                      raw: '"Root"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9448,
                end: 9468,
                test: {
                  type: 'Literal',
                  start: 9453,
                  end: 9454,
                  raw: '6',
                  value: 6
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9455,
                    end: 9468,
                    argument: {
                      type: 'Literal',
                      start: 9461,
                      end: 9467,
                      value: 'Text',
                      raw: '"Text"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9468,
                end: 9489,
                test: {
                  type: 'Literal',
                  start: 9473,
                  end: 9475,
                  raw: '16',
                  value: 16
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9476,
                    end: 9489,
                    argument: {
                      type: 'CallExpression',
                      start: 9483,
                      end: 9488,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 9483,
                        end: 9485,
                        name: 'Qa'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 9486,
                          end: 9487,
                          name: 'b'
                        }
                      ]
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9489,
                end: 9530,
                test: {
                  type: 'Literal',
                  start: 9494,
                  end: 9495,
                  raw: '8',
                  value: 8
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9496,
                    end: 9530,
                    argument: {
                      type: 'ConditionalExpression',
                      start: 9503,
                      end: 9529,
                      test: {
                        type: 'BinaryExpression',
                        start: 9503,
                        end: 9509,
                        operator: '===',
                        left: {
                          type: 'Identifier',
                          start: 9503,
                          end: 9504,
                          name: 'b'
                        },
                        right: {
                          type: 'Identifier',
                          start: 9507,
                          end: 9509,
                          name: 'za'
                        }
                      },
                      consequent: {
                        type: 'Literal',
                        start: 9510,
                        end: 9522,
                        value: 'StrictMode',
                        raw: '"StrictMode"'
                      },
                      alternate: {
                        type: 'Literal',
                        start: 9523,
                        end: 9529,
                        value: 'Mode',
                        raw: '"Mode"'
                      }
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9530,
                end: 9556,
                test: {
                  type: 'Literal',
                  start: 9535,
                  end: 9537,
                  raw: '22',
                  value: 22
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9538,
                    end: 9556,
                    argument: {
                      type: 'Literal',
                      start: 9544,
                      end: 9555,
                      value: 'Offscreen',
                      raw: '"Offscreen"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9557,
                end: 9582,
                test: {
                  type: 'Literal',
                  start: 9562,
                  end: 9564,
                  raw: '12',
                  value: 12
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9565,
                    end: 9582,
                    argument: {
                      type: 'Literal',
                      start: 9571,
                      end: 9581,
                      value: 'Profiler',
                      raw: '"Profiler"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9582,
                end: 9604,
                test: {
                  type: 'Literal',
                  start: 9587,
                  end: 9589,
                  raw: '21',
                  value: 21
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9590,
                    end: 9604,
                    argument: {
                      type: 'Literal',
                      start: 9596,
                      end: 9603,
                      value: 'Scope',
                      raw: '"Scope"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9604,
                end: 9629,
                test: {
                  type: 'Literal',
                  start: 9609,
                  end: 9611,
                  raw: '13',
                  value: 13
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9612,
                    end: 9629,
                    argument: {
                      type: 'Literal',
                      start: 9618,
                      end: 9628,
                      value: 'Suspense',
                      raw: '"Suspense"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9629,
                end: 9658,
                test: {
                  type: 'Literal',
                  start: 9634,
                  end: 9636,
                  raw: '19',
                  value: 19
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9637,
                    end: 9658,
                    argument: {
                      type: 'Literal',
                      start: 9643,
                      end: 9657,
                      value: 'SuspenseList',
                      raw: '"SuspenseList"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9658,
                end: 9688,
                test: {
                  type: 'Literal',
                  start: 9663,
                  end: 9665,
                  raw: '25',
                  value: 25
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9666,
                    end: 9688,
                    argument: {
                      type: 'Literal',
                      start: 9672,
                      end: 9687,
                      value: 'TracingMarker',
                      raw: '"TracingMarker"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9688,
                end: 9695,
                test: {
                  type: 'Literal',
                  start: 9693,
                  end: 9694,
                  raw: '1',
                  value: 1
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9695,
                end: 9702,
                test: {
                  type: 'Literal',
                  start: 9700,
                  end: 9701,
                  raw: '0',
                  value: 0
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9702,
                end: 9710,
                test: {
                  type: 'Literal',
                  start: 9707,
                  end: 9709,
                  raw: '17',
                  value: 17
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9710,
                end: 9717,
                test: {
                  type: 'Literal',
                  start: 9715,
                  end: 9716,
                  raw: '2',
                  value: 2
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9717,
                end: 9725,
                test: {
                  type: 'Literal',
                  start: 9722,
                  end: 9724,
                  raw: '14',
                  value: 14
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9725,
                end: 9824,
                test: {
                  type: 'Literal',
                  start: 9730,
                  end: 9732,
                  raw: '15',
                  value: 15
                },
                consequent: [
                  {
                    type: 'IfStatement',
                    start: 9733,
                    end: 9793,
                    test: {
                      type: 'BinaryExpression',
                      start: 9736,
                      end: 9757,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 9736,
                        end: 9746,
                        value: 'function',
                        raw: '"function"'
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 9749,
                        end: 9757,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 9756,
                          end: 9757,
                          name: 'b'
                        },
                        prefix: true
                      }
                    },
                    consequent: {
                      type: 'ReturnStatement',
                      start: 9758,
                      end: 9793,
                      argument: {
                        type: 'LogicalExpression',
                        start: 9765,
                        end: 9792,
                        operator: '||',
                        left: {
                          type: 'LogicalExpression',
                          start: 9765,
                          end: 9786,
                          operator: '||',
                          left: {
                            type: 'MemberExpression',
                            start: 9765,
                            end: 9778,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 9765,
                              end: 9766,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 9767,
                              end: 9778,
                              name: 'displayName'
                            }
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 9780,
                            end: 9786,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 9780,
                              end: 9781,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 9782,
                              end: 9786,
                              name: 'name'
                            }
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 9788,
                          end: 9792,
                          raw: 'null',
                          value: null
                        }
                      }
                    },
                    alternate: null
                  },
                  {
                    type: 'IfStatement',
                    start: 9793,
                    end: 9824,
                    test: {
                      type: 'BinaryExpression',
                      start: 9796,
                      end: 9815,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 9796,
                        end: 9804,
                        value: 'string',
                        raw: '"string"'
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 9807,
                        end: 9815,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 9814,
                          end: 9815,
                          name: 'b'
                        },
                        prefix: true
                      }
                    },
                    consequent: {
                      type: 'ReturnStatement',
                      start: 9816,
                      end: 9824,
                      argument: {
                        type: 'Identifier',
                        start: 9823,
                        end: 9824,
                        name: 'b'
                      }
                    },
                    alternate: null
                  }
                ]
              }
            ]
          },
          {
            type: 'ReturnStatement',
            start: 9825,
            end: 9836,
            argument: {
              type: 'Literal',
              start: 9832,
              end: 9836,
              raw: 'null',
              value: null
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 9837,
      end: 9979,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 9846, end: 9848, name: 'Sa' },
      params: [ { type: 'Identifier', start: 9849, end: 9850, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 9851,
        end: 9979,
        body: [
          {
            type: 'SwitchStatement',
            start: 9852,
            end: 9978,
            discriminant: {
              type: 'UnaryExpression',
              start: 9859,
              end: 9867,
              operator: 'typeof',
              argument: { type: 'Identifier', start: 9866, end: 9867, name: 'a' },
              prefix: true
            },
            cases: [
              {
                type: 'SwitchCase',
                start: 9869,
                end: 9884,
                test: {
                  type: 'Literal',
                  start: 9874,
                  end: 9883,
                  value: 'boolean',
                  raw: '"boolean"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9884,
                end: 9898,
                test: {
                  type: 'Literal',
                  start: 9889,
                  end: 9897,
                  value: 'number',
                  raw: '"number"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9898,
                end: 9912,
                test: {
                  type: 'Literal',
                  start: 9903,
                  end: 9911,
                  value: 'string',
                  raw: '"string"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 9912,
                end: 9938,
                test: {
                  type: 'Literal',
                  start: 9917,
                  end: 9928,
                  value: 'undefined',
                  raw: '"undefined"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9929,
                    end: 9938,
                    argument: {
                      type: 'Identifier',
                      start: 9936,
                      end: 9937,
                      name: 'a'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9938,
                end: 9961,
                test: {
                  type: 'Literal',
                  start: 9943,
                  end: 9951,
                  value: 'object',
                  raw: '"object"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9952,
                    end: 9961,
                    argument: {
                      type: 'Identifier',
                      start: 9959,
                      end: 9960,
                      name: 'a'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 9961,
                end: 9977,
                test: null,
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 9969,
                    end: 9977,
                    argument: {
                      type: 'Literal',
                      start: 9975,
                      end: 9977,
                      value: '',
                      raw: '""'
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 9980,
      end: 10087,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 9989, end: 9991, name: 'Ta' },
      params: [ { type: 'Identifier', start: 9992, end: 9993, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 9994,
        end: 10087,
        body: [
          {
            type: 'VariableDeclaration',
            start: 9995,
            end: 10008,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 9999,
                end: 10007,
                id: {
                  type: 'Identifier',
                  start: 9999,
                  end: 10000,
                  name: 'b'
                },
                init: {
                  type: 'MemberExpression',
                  start: 10001,
                  end: 10007,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 10001,
                    end: 10002,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 10003,
                    end: 10007,
                    name: 'type'
                  }
                }
              }
            ]
          },
          {
            type: 'ReturnStatement',
            start: 10008,
            end: 10086,
            argument: {
              type: 'LogicalExpression',
              start: 10014,
              end: 10086,
              operator: '&&',
              left: {
                type: 'LogicalExpression',
                start: 10014,
                end: 10055,
                operator: '&&',
                left: {
                  type: 'AssignmentExpression',
                  start: 10015,
                  end: 10027,
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    start: 10015,
                    end: 10016,
                    name: 'a'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 10017,
                    end: 10027,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10017,
                      end: 10018,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10019,
                      end: 10027,
                      name: 'nodeName'
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 10030,
                  end: 10055,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 10030,
                    end: 10037,
                    value: 'input',
                    raw: '"input"'
                  },
                  right: {
                    type: 'CallExpression',
                    start: 10040,
                    end: 10055,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 10040,
                      end: 10053,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10040,
                        end: 10041,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10042,
                        end: 10053,
                        name: 'toLowerCase'
                      }
                    },
                    arguments: []
                  }
                }
              },
              right: {
                type: 'LogicalExpression',
                start: 10058,
                end: 10085,
                operator: '||',
                left: {
                  type: 'BinaryExpression',
                  start: 10058,
                  end: 10072,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 10058,
                    end: 10068,
                    value: 'checkbox',
                    raw: '"checkbox"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 10071,
                    end: 10072,
                    name: 'b'
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 10074,
                  end: 10085,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 10074,
                    end: 10081,
                    value: 'radio',
                    raw: '"radio"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 10084,
                    end: 10085,
                    name: 'b'
                  }
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 10088,
      end: 10627,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 10097, end: 10099, name: 'Ua' },
      params: [ { type: 'Identifier', start: 10100, end: 10101, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 10102,
        end: 10627,
        body: [
          {
            type: 'VariableDeclaration',
            start: 10103,
            end: 10204,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 10107,
                end: 10132,
                id: {
                  type: 'Identifier',
                  start: 10107,
                  end: 10108,
                  name: 'b'
                },
                init: {
                  type: 'ConditionalExpression',
                  start: 10109,
                  end: 10132,
                  test: {
                    type: 'CallExpression',
                    start: 10109,
                    end: 10114,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 10109,
                      end: 10111,
                      name: 'Ta'
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 10112,
                        end: 10113,
                        name: 'a'
                      }
                    ]
                  },
                  consequent: {
                    type: 'Literal',
                    start: 10115,
                    end: 10124,
                    value: 'checked',
                    raw: '"checked"'
                  },
                  alternate: {
                    type: 'Literal',
                    start: 10125,
                    end: 10132,
                    value: 'value',
                    raw: '"value"'
                  }
                }
              },
              {
                type: 'VariableDeclarator',
                start: 10133,
                end: 10193,
                id: {
                  type: 'Identifier',
                  start: 10133,
                  end: 10134,
                  name: 'c'
                },
                init: {
                  type: 'CallExpression',
                  start: 10135,
                  end: 10193,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 10135,
                    end: 10166,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10135,
                      end: 10141,
                      name: 'Object'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10142,
                      end: 10166,
                      name: 'getOwnPropertyDescriptor'
                    }
                  },
                  arguments: [
                    {
                      type: 'MemberExpression',
                      start: 10167,
                      end: 10190,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 10167,
                        end: 10180,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 10167,
                          end: 10168,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 10169,
                          end: 10180,
                          name: 'constructor'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 10181,
                        end: 10190,
                        name: 'prototype'
                      }
                    },
                    {
                      type: 'Identifier',
                      start: 10191,
                      end: 10192,
                      name: 'b'
                    }
                  ]
                }
              },
              {
                type: 'VariableDeclarator',
                start: 10194,
                end: 10203,
                id: {
                  type: 'Identifier',
                  start: 10194,
                  end: 10195,
                  name: 'd'
                },
                init: {
                  type: 'BinaryExpression',
                  start: 10196,
                  end: 10203,
                  operator: '+',
                  left: {
                    type: 'Literal',
                    start: 10196,
                    end: 10198,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 10199,
                    end: 10203,
                    computed: true,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10199,
                      end: 10200,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10201,
                      end: 10202,
                      name: 'b'
                    }
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 10204,
            end: 10626,
            test: {
              type: 'LogicalExpression',
              start: 10207,
              end: 10305,
              operator: '&&',
              left: {
                type: 'LogicalExpression',
                start: 10207,
                end: 10278,
                operator: '&&',
                left: {
                  type: 'LogicalExpression',
                  start: 10207,
                  end: 10251,
                  operator: '&&',
                  left: {
                    type: 'UnaryExpression',
                    start: 10207,
                    end: 10227,
                    operator: '!',
                    argument: {
                      type: 'CallExpression',
                      start: 10208,
                      end: 10227,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 10208,
                        end: 10224,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 10208,
                          end: 10209,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 10210,
                          end: 10224,
                          name: 'hasOwnProperty'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 10225,
                          end: 10226,
                          name: 'b'
                        }
                      ]
                    },
                    prefix: true
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 10229,
                    end: 10251,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 10229,
                      end: 10240,
                      value: 'undefined',
                      raw: '"undefined"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 10243,
                      end: 10251,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 10250,
                        end: 10251,
                        name: 'c'
                      },
                      prefix: true
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 10253,
                  end: 10278,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 10253,
                    end: 10263,
                    value: 'function',
                    raw: '"function"'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 10266,
                    end: 10278,
                    operator: 'typeof',
                    argument: {
                      type: 'MemberExpression',
                      start: 10273,
                      end: 10278,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10273,
                        end: 10274,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10275,
                        end: 10278,
                        name: 'get'
                      }
                    },
                    prefix: true
                  }
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 10280,
                end: 10305,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 10280,
                  end: 10290,
                  value: 'function',
                  raw: '"function"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 10293,
                  end: 10305,
                  operator: 'typeof',
                  argument: {
                    type: 'MemberExpression',
                    start: 10300,
                    end: 10305,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10300,
                      end: 10301,
                      name: 'c'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10302,
                      end: 10305,
                      name: 'set'
                    }
                  },
                  prefix: true
                }
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 10306,
              end: 10626,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 10307,
                  end: 10327,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 10311,
                      end: 10318,
                      id: {
                        type: 'Identifier',
                        start: 10311,
                        end: 10312,
                        name: 'e'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 10313,
                        end: 10318,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 10313,
                          end: 10314,
                          name: 'c'
                        },
                        property: {
                          type: 'Identifier',
                          start: 10315,
                          end: 10318,
                          name: 'get'
                        }
                      }
                    },
                    {
                      type: 'VariableDeclarator',
                      start: 10319,
                      end: 10326,
                      id: {
                        type: 'Identifier',
                        start: 10319,
                        end: 10320,
                        name: 'f'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 10321,
                        end: 10326,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 10321,
                          end: 10322,
                          name: 'c'
                        },
                        property: {
                          type: 'Identifier',
                          start: 10323,
                          end: 10326,
                          name: 'set'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 10327,
                  end: 10447,
                  expression: {
                    type: 'CallExpression',
                    start: 10327,
                    end: 10446,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 10327,
                      end: 10348,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10327,
                        end: 10333,
                        name: 'Object'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10334,
                        end: 10348,
                        name: 'defineProperty'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 10349,
                        end: 10350,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 10351,
                        end: 10352,
                        name: 'b'
                      },
                      {
                        type: 'ObjectExpression',
                        start: 10353,
                        end: 10445,
                        properties: [
                          {
                            type: 'Property',
                            start: 10354,
                            end: 10369,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 10354,
                              end: 10366,
                              name: 'configurable'
                            },
                            value: {
                              type: 'UnaryExpression',
                              start: 10367,
                              end: 10369,
                              operator: '!',
                              argument: {
                                type: 'Literal',
                                start: 10368,
                                end: 10369,
                                raw: '0',
                                value: 0
                              },
                              prefix: true
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 10370,
                            end: 10405,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 10370,
                              end: 10373,
                              name: 'get'
                            },
                            value: {
                              type: 'FunctionExpression',
                              start: 10374,
                              end: 10405,
                              async: false,
                              generator: false,
                              id: null,
                              params: [],
                              body: {
                                type: 'BlockStatement',
                                start: 10384,
                                end: 10405,
                                body: [
                                  {
                                    type: 'ReturnStatement',
                                    start: 10385,
                                    end: 10404,
                                    argument: {
                                      type: 'CallExpression',
                                      start: 10392,
                                      end: 10404,
                                      optional: false,
                                      callee: {
                                        type: 'MemberExpression',
                                        start: 10392,
                                        end: 10398,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 10392,
                                          end: 10393,
                                          name: 'e'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 10394,
                                          end: 10398,
                                          name: 'call'
                                        }
                                      },
                                      arguments: [
                                        {
                                          type: 'ThisExpression',
                                          start: 10399,
                                          end: 10403
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              expression: false
                            },
                            kind: 'init'
                          },
                          {
                            type: 'Property',
                            start: 10406,
                            end: 10444,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 10406,
                              end: 10409,
                              name: 'set'
                            },
                            value: {
                              type: 'FunctionExpression',
                              start: 10410,
                              end: 10444,
                              async: false,
                              generator: false,
                              id: null,
                              params: [
                                {
                                  type: 'Identifier',
                                  start: 10419,
                                  end: 10420,
                                  name: 'a'
                                }
                              ],
                              body: {
                                type: 'BlockStatement',
                                start: 10421,
                                end: 10444,
                                body: [
                                  {
                                    type: 'ExpressionStatement',
                                    start: 10422,
                                    end: 10429,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 10422,
                                      end: 10428,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 10422,
                                        end: 10423,
                                        name: 'd'
                                      },
                                      right: {
                                        type: 'BinaryExpression',
                                        start: 10424,
                                        end: 10428,
                                        operator: '+',
                                        left: {
                                          type: 'Literal',
                                          start: 10424,
                                          end: 10426,
                                          value: '',
                                          raw: '""'
                                        },
                                        right: {
                                          type: 'Identifier',
                                          start: 10427,
                                          end: 10428,
                                          name: 'a'
                                        }
                                      }
                                    }
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 10429,
                                    end: 10443,
                                    expression: {
                                      type: 'CallExpression',
                                      start: 10429,
                                      end: 10443,
                                      optional: false,
                                      callee: {
                                        type: 'MemberExpression',
                                        start: 10429,
                                        end: 10435,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 10429,
                                          end: 10430,
                                          name: 'f'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 10431,
                                          end: 10435,
                                          name: 'call'
                                        }
                                      },
                                      arguments: [
                                        {
                                          type: 'ThisExpression',
                                          start: 10436,
                                          end: 10440
                                        },
                                        {
                                          type: 'Identifier',
                                          start: 10441,
                                          end: 10442,
                                          name: 'a'
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              expression: false
                            },
                            kind: 'init'
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 10447,
                  end: 10500,
                  expression: {
                    type: 'CallExpression',
                    start: 10447,
                    end: 10499,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 10447,
                      end: 10468,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10447,
                        end: 10453,
                        name: 'Object'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10454,
                        end: 10468,
                        name: 'defineProperty'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 10469,
                        end: 10470,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 10471,
                        end: 10472,
                        name: 'b'
                      },
                      {
                        type: 'ObjectExpression',
                        start: 10473,
                        end: 10498,
                        properties: [
                          {
                            type: 'Property',
                            start: 10474,
                            end: 10497,
                            method: false,
                            shorthand: false,
                            computed: false,
                            key: {
                              type: 'Identifier',
                              start: 10474,
                              end: 10484,
                              name: 'enumerable'
                            },
                            value: {
                              type: 'MemberExpression',
                              start: 10485,
                              end: 10497,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 10485,
                                end: 10486,
                                name: 'c'
                              },
                              property: {
                                type: 'Identifier',
                                start: 10487,
                                end: 10497,
                                name: 'enumerable'
                              }
                            },
                            kind: 'init'
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  type: 'ReturnStatement',
                  start: 10500,
                  end: 10625,
                  argument: {
                    type: 'ObjectExpression',
                    start: 10506,
                    end: 10625,
                    properties: [
                      {
                        type: 'Property',
                        start: 10507,
                        end: 10536,
                        method: false,
                        shorthand: false,
                        computed: false,
                        key: {
                          type: 'Identifier',
                          start: 10507,
                          end: 10515,
                          name: 'getValue'
                        },
                        value: {
                          type: 'FunctionExpression',
                          start: 10516,
                          end: 10536,
                          async: false,
                          generator: false,
                          id: null,
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 10526,
                            end: 10536,
                            body: [
                              {
                                type: 'ReturnStatement',
                                start: 10527,
                                end: 10535,
                                argument: {
                                  type: 'Identifier',
                                  start: 10534,
                                  end: 10535,
                                  name: 'd'
                                }
                              }
                            ]
                          },
                          expression: false
                        },
                        kind: 'init'
                      },
                      {
                        type: 'Property',
                        start: 10537,
                        end: 10565,
                        method: false,
                        shorthand: false,
                        computed: false,
                        key: {
                          type: 'Identifier',
                          start: 10537,
                          end: 10545,
                          name: 'setValue'
                        },
                        value: {
                          type: 'FunctionExpression',
                          start: 10546,
                          end: 10565,
                          async: false,
                          generator: false,
                          id: null,
                          params: [
                            {
                              type: 'Identifier',
                              start: 10555,
                              end: 10556,
                              name: 'a'
                            }
                          ],
                          body: {
                            type: 'BlockStatement',
                            start: 10557,
                            end: 10565,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 10558,
                                end: 10564,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 10558,
                                  end: 10564,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 10558,
                                    end: 10559,
                                    name: 'd'
                                  },
                                  right: {
                                    type: 'BinaryExpression',
                                    start: 10560,
                                    end: 10564,
                                    operator: '+',
                                    left: {
                                      type: 'Literal',
                                      start: 10560,
                                      end: 10562,
                                      value: '',
                                      raw: '""'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 10563,
                                      end: 10564,
                                      name: 'a'
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          expression: false
                        },
                        kind: 'init'
                      },
                      {
                        type: 'Property',
                        start: 10566,
                        end: 10624,
                        method: false,
                        shorthand: false,
                        computed: false,
                        key: {
                          type: 'Identifier',
                          start: 10566,
                          end: 10578,
                          name: 'stopTracking'
                        },
                        value: {
                          type: 'FunctionExpression',
                          start: 10579,
                          end: 10624,
                          async: false,
                          generator: false,
                          id: null,
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 10589,
                            end: 10624,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 10590,
                                end: 10612,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 10590,
                                  end: 10611,
                                  operator: '=',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 10590,
                                    end: 10605,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 10590,
                                      end: 10591,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 10592,
                                      end: 10605,
                                      name: '_valueTracker'
                                    }
                                  },
                                  right: {
                                    type: 'Literal',
                                    start: 10607,
                                    end: 10611,
                                    raw: 'null',
                                    value: null
                                  }
                                }
                              },
                              {
                                type: 'ExpressionStatement',
                                start: 10612,
                                end: 10623,
                                expression: {
                                  type: 'UnaryExpression',
                                  start: 10612,
                                  end: 10623,
                                  operator: 'delete',
                                  argument: {
                                    type: 'MemberExpression',
                                    start: 10619,
                                    end: 10623,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 10619,
                                      end: 10620,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 10621,
                                      end: 10622,
                                      name: 'b'
                                    }
                                  },
                                  prefix: true
                                }
                              }
                            ]
                          },
                          expression: false
                        },
                        kind: 'init'
                      }
                    ]
                  }
                }
              ]
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 10627,
      end: 10683,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 10636, end: 10638, name: 'Va' },
      params: [ { type: 'Identifier', start: 10639, end: 10640, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 10641,
        end: 10683,
        body: [
          {
            type: 'ExpressionStatement',
            start: 10642,
            end: 10682,
            expression: {
              type: 'LogicalExpression',
              start: 10642,
              end: 10682,
              operator: '||',
              left: {
                type: 'MemberExpression',
                start: 10642,
                end: 10657,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 10642,
                  end: 10643,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 10644,
                  end: 10657,
                  name: '_valueTracker'
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 10660,
                end: 10681,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 10660,
                  end: 10675,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 10660,
                    end: 10661,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 10662,
                    end: 10675,
                    name: '_valueTracker'
                  }
                },
                right: {
                  type: 'CallExpression',
                  start: 10676,
                  end: 10681,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 10676,
                    end: 10678,
                    name: 'Ua'
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      start: 10679,
                      end: 10680,
                      name: 'a'
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 10683,
      end: 10863,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 10692, end: 10694, name: 'Wa' },
      params: [ { type: 'Identifier', start: 10695, end: 10696, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 10697,
        end: 10863,
        body: [
          {
            type: 'IfStatement',
            start: 10698,
            end: 10713,
            test: {
              type: 'UnaryExpression',
              start: 10701,
              end: 10703,
              operator: '!',
              argument: {
                type: 'Identifier',
                start: 10702,
                end: 10703,
                name: 'a'
              },
              prefix: true
            },
            consequent: {
              type: 'ReturnStatement',
              start: 10704,
              end: 10713,
              argument: {
                type: 'UnaryExpression',
                start: 10710,
                end: 10712,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 10711,
                  end: 10712,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 10713,
            end: 10735,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 10717,
                end: 10734,
                id: {
                  type: 'Identifier',
                  start: 10717,
                  end: 10718,
                  name: 'b'
                },
                init: {
                  type: 'MemberExpression',
                  start: 10719,
                  end: 10734,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 10719,
                    end: 10720,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 10721,
                    end: 10734,
                    name: '_valueTracker'
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 10735,
            end: 10750,
            test: {
              type: 'UnaryExpression',
              start: 10738,
              end: 10740,
              operator: '!',
              argument: {
                type: 'Identifier',
                start: 10739,
                end: 10740,
                name: 'b'
              },
              prefix: true
            },
            consequent: {
              type: 'ReturnStatement',
              start: 10741,
              end: 10750,
              argument: {
                type: 'UnaryExpression',
                start: 10747,
                end: 10749,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 10748,
                  end: 10749,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 10750,
            end: 10769,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 10754,
                end: 10768,
                id: {
                  type: 'Identifier',
                  start: 10754,
                  end: 10755,
                  name: 'c'
                },
                init: {
                  type: 'CallExpression',
                  start: 10756,
                  end: 10768,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 10756,
                    end: 10766,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10756,
                      end: 10757,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10758,
                      end: 10766,
                      name: 'getValue'
                    }
                  },
                  arguments: []
                }
              }
            ]
          },
          {
            type: 'VariableDeclaration',
            start: 10769,
            end: 10778,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 10773,
                end: 10777,
                id: {
                  type: 'Identifier',
                  start: 10773,
                  end: 10774,
                  name: 'd'
                },
                init: {
                  type: 'Literal',
                  start: 10775,
                  end: 10777,
                  value: '',
                  raw: '""'
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 10778,
            end: 10824,
            expression: {
              type: 'LogicalExpression',
              start: 10778,
              end: 10823,
              operator: '&&',
              left: {
                type: 'Identifier',
                start: 10778,
                end: 10779,
                name: 'a'
              },
              right: {
                type: 'AssignmentExpression',
                start: 10782,
                end: 10822,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 10782,
                  end: 10783,
                  name: 'd'
                },
                right: {
                  type: 'ConditionalExpression',
                  start: 10784,
                  end: 10822,
                  test: {
                    type: 'CallExpression',
                    start: 10784,
                    end: 10789,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 10784,
                      end: 10786,
                      name: 'Ta'
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 10787,
                        end: 10788,
                        name: 'a'
                      }
                    ]
                  },
                  consequent: {
                    type: 'ConditionalExpression',
                    start: 10790,
                    end: 10814,
                    test: {
                      type: 'MemberExpression',
                      start: 10790,
                      end: 10799,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10790,
                        end: 10791,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10792,
                        end: 10799,
                        name: 'checked'
                      }
                    },
                    consequent: {
                      type: 'Literal',
                      start: 10800,
                      end: 10806,
                      value: 'true',
                      raw: '"true"'
                    },
                    alternate: {
                      type: 'Literal',
                      start: 10807,
                      end: 10814,
                      value: 'false',
                      raw: '"false"'
                    }
                  },
                  alternate: {
                    type: 'MemberExpression',
                    start: 10815,
                    end: 10822,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 10815,
                      end: 10816,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 10817,
                      end: 10822,
                      name: 'value'
                    }
                  }
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 10824,
            end: 10828,
            expression: {
              type: 'AssignmentExpression',
              start: 10824,
              end: 10827,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 10824,
                end: 10825,
                name: 'a'
              },
              right: {
                type: 'Identifier',
                start: 10826,
                end: 10827,
                name: 'd'
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 10828,
            end: 10862,
            argument: {
              type: 'ConditionalExpression',
              start: 10835,
              end: 10862,
              test: {
                type: 'BinaryExpression',
                start: 10835,
                end: 10840,
                operator: '!==',
                left: {
                  type: 'Identifier',
                  start: 10835,
                  end: 10836,
                  name: 'a'
                },
                right: {
                  type: 'Identifier',
                  start: 10839,
                  end: 10840,
                  name: 'c'
                }
              },
              consequent: {
                type: 'SequenceExpression',
                start: 10842,
                end: 10858,
                expressions: [
                  {
                    type: 'CallExpression',
                    start: 10842,
                    end: 10855,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 10842,
                      end: 10852,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10842,
                        end: 10843,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10844,
                        end: 10852,
                        name: 'setValue'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 10853,
                        end: 10854,
                        name: 'a'
                      }
                    ]
                  },
                  {
                    type: 'UnaryExpression',
                    start: 10856,
                    end: 10858,
                    operator: '!',
                    argument: {
                      type: 'Literal',
                      start: 10857,
                      end: 10858,
                      raw: '0',
                      value: 0
                    },
                    prefix: true
                  }
                ]
              },
              alternate: {
                type: 'UnaryExpression',
                start: 10860,
                end: 10862,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 10861,
                  end: 10862,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 10863,
      end: 11028,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 10872, end: 10874, name: 'Xa' },
      params: [ { type: 'Identifier', start: 10875, end: 10876, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 10877,
        end: 11028,
        body: [
          {
            type: 'ExpressionStatement',
            start: 10878,
            end: 10931,
            expression: {
              type: 'AssignmentExpression',
              start: 10878,
              end: 10930,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 10878,
                end: 10879,
                name: 'a'
              },
              right: {
                type: 'LogicalExpression',
                start: 10880,
                end: 10930,
                operator: '||',
                left: {
                  type: 'Identifier',
                  start: 10880,
                  end: 10881,
                  name: 'a'
                },
                right: {
                  type: 'ConditionalExpression',
                  start: 10884,
                  end: 10929,
                  test: {
                    type: 'BinaryExpression',
                    start: 10884,
                    end: 10913,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 10884,
                      end: 10895,
                      value: 'undefined',
                      raw: '"undefined"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 10898,
                      end: 10913,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 10905,
                        end: 10913,
                        name: 'document'
                      },
                      prefix: true
                    }
                  },
                  consequent: {
                    type: 'Identifier',
                    start: 10914,
                    end: 10922,
                    name: 'document'
                  },
                  alternate: {
                    type: 'UnaryExpression',
                    start: 10923,
                    end: 10929,
                    operator: 'void',
                    argument: {
                      type: 'Literal',
                      start: 10928,
                      end: 10929,
                      raw: '0',
                      value: 0
                    },
                    prefix: true
                  }
                }
              }
            }
          },
          {
            type: 'IfStatement',
            start: 10931,
            end: 10969,
            test: {
              type: 'BinaryExpression',
              start: 10934,
              end: 10956,
              operator: '===',
              left: {
                type: 'Literal',
                start: 10934,
                end: 10945,
                value: 'undefined',
                raw: '"undefined"'
              },
              right: {
                type: 'UnaryExpression',
                start: 10948,
                end: 10956,
                operator: 'typeof',
                argument: {
                  type: 'Identifier',
                  start: 10955,
                  end: 10956,
                  name: 'a'
                },
                prefix: true
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 10957,
              end: 10969,
              argument: {
                type: 'Literal',
                start: 10964,
                end: 10968,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'TryStatement',
            start: 10969,
            end: 11027,
            block: {
              type: 'BlockStatement',
              start: 10972,
              end: 11004,
              body: [
                {
                  type: 'ReturnStatement',
                  start: 10973,
                  end: 11003,
                  argument: {
                    type: 'LogicalExpression',
                    start: 10980,
                    end: 11003,
                    operator: '||',
                    left: {
                      type: 'MemberExpression',
                      start: 10980,
                      end: 10995,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10980,
                        end: 10981,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10982,
                        end: 10995,
                        name: 'activeElement'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 10997,
                      end: 11003,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 10997,
                        end: 10998,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 10999,
                        end: 11003,
                        name: 'body'
                      }
                    }
                  }
                }
              ]
            },
            handler: {
              type: 'CatchClause',
              start: 11004,
              end: 11027,
              param: {
                type: 'Identifier',
                start: 11010,
                end: 11011,
                name: 'b'
              },
              body: {
                type: 'BlockStatement',
                start: 11012,
                end: 11027,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 11013,
                    end: 11026,
                    argument: {
                      type: 'MemberExpression',
                      start: 11020,
                      end: 11026,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11020,
                        end: 11021,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11022,
                        end: 11026,
                        name: 'body'
                      }
                    }
                  }
                ]
              }
            },
            finalizer: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 11029,
      end: 11183,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 11038, end: 11040, name: 'Ya' },
      params: [
        { type: 'Identifier', start: 11041, end: 11042, name: 'a' },
        { type: 'Identifier', start: 11043, end: 11044, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 11045,
        end: 11183,
        body: [
          {
            type: 'VariableDeclaration',
            start: 11046,
            end: 11062,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 11050,
                end: 11061,
                id: {
                  type: 'Identifier',
                  start: 11050,
                  end: 11051,
                  name: 'c'
                },
                init: {
                  type: 'MemberExpression',
                  start: 11052,
                  end: 11061,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11052,
                    end: 11053,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11054,
                    end: 11061,
                    name: 'checked'
                  }
                }
              }
            ]
          },
          {
            type: 'ReturnStatement',
            start: 11062,
            end: 11182,
            argument: {
              type: 'CallExpression',
              start: 11069,
              end: 11182,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 11069,
                end: 11070,
                name: 'A'
              },
              arguments: [
                {
                  type: 'ObjectExpression',
                  start: 11071,
                  end: 11073,
                  properties: []
                },
                {
                  type: 'Identifier',
                  start: 11074,
                  end: 11075,
                  name: 'b'
                },
                {
                  type: 'ObjectExpression',
                  start: 11076,
                  end: 11181,
                  properties: [
                    {
                      type: 'Property',
                      start: 11077,
                      end: 11098,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 11077,
                        end: 11091,
                        name: 'defaultChecked'
                      },
                      value: {
                        type: 'UnaryExpression',
                        start: 11092,
                        end: 11098,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 11097,
                          end: 11098,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 11099,
                      end: 11118,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 11099,
                        end: 11111,
                        name: 'defaultValue'
                      },
                      value: {
                        type: 'UnaryExpression',
                        start: 11112,
                        end: 11118,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 11117,
                          end: 11118,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 11119,
                      end: 11131,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 11119,
                        end: 11124,
                        name: 'value'
                      },
                      value: {
                        type: 'UnaryExpression',
                        start: 11125,
                        end: 11131,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 11130,
                          end: 11131,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 11132,
                      end: 11180,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 11132,
                        end: 11139,
                        name: 'checked'
                      },
                      value: {
                        type: 'ConditionalExpression',
                        start: 11140,
                        end: 11180,
                        test: {
                          type: 'BinaryExpression',
                          start: 11140,
                          end: 11147,
                          operator: '!=',
                          left: {
                            type: 'Literal',
                            start: 11140,
                            end: 11144,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 11146,
                            end: 11147,
                            name: 'c'
                          }
                        },
                        consequent: {
                          type: 'Identifier',
                          start: 11148,
                          end: 11149,
                          name: 'c'
                        },
                        alternate: {
                          type: 'MemberExpression',
                          start: 11150,
                          end: 11180,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'MemberExpression',
                            start: 11150,
                            end: 11165,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 11150,
                              end: 11151,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 11152,
                              end: 11165,
                              name: '_wrapperState'
                            }
                          },
                          property: {
                            type: 'Identifier',
                            start: 11166,
                            end: 11180,
                            name: 'initialChecked'
                          }
                        }
                      },
                      kind: 'init'
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 11183,
      end: 11449,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 11192, end: 11194, name: 'Za' },
      params: [
        { type: 'Identifier', start: 11195, end: 11196, name: 'a' },
        { type: 'Identifier', start: 11197, end: 11198, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 11199,
        end: 11449,
        body: [
          {
            type: 'VariableDeclaration',
            start: 11200,
            end: 11290,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 11204,
                end: 11244,
                id: {
                  type: 'Identifier',
                  start: 11204,
                  end: 11205,
                  name: 'c'
                },
                init: {
                  type: 'ConditionalExpression',
                  start: 11206,
                  end: 11244,
                  test: {
                    type: 'BinaryExpression',
                    start: 11206,
                    end: 11226,
                    operator: '==',
                    left: {
                      type: 'Literal',
                      start: 11206,
                      end: 11210,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 11212,
                      end: 11226,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11212,
                        end: 11213,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11214,
                        end: 11226,
                        name: 'defaultValue'
                      }
                    }
                  },
                  consequent: {
                    type: 'Literal',
                    start: 11227,
                    end: 11229,
                    value: '',
                    raw: '""'
                  },
                  alternate: {
                    type: 'MemberExpression',
                    start: 11230,
                    end: 11244,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11230,
                      end: 11231,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11232,
                      end: 11244,
                      name: 'defaultValue'
                    }
                  }
                }
              },
              {
                type: 'VariableDeclarator',
                start: 11245,
                end: 11289,
                id: {
                  type: 'Identifier',
                  start: 11245,
                  end: 11246,
                  name: 'd'
                },
                init: {
                  type: 'ConditionalExpression',
                  start: 11247,
                  end: 11289,
                  test: {
                    type: 'BinaryExpression',
                    start: 11247,
                    end: 11262,
                    operator: '!=',
                    left: {
                      type: 'Literal',
                      start: 11247,
                      end: 11251,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 11253,
                      end: 11262,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11253,
                        end: 11254,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11255,
                        end: 11262,
                        name: 'checked'
                      }
                    }
                  },
                  consequent: {
                    type: 'MemberExpression',
                    start: 11263,
                    end: 11272,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11263,
                      end: 11264,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11265,
                      end: 11272,
                      name: 'checked'
                    }
                  },
                  alternate: {
                    type: 'MemberExpression',
                    start: 11273,
                    end: 11289,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11273,
                      end: 11274,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11275,
                      end: 11289,
                      name: 'defaultChecked'
                    }
                  }
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 11290,
            end: 11320,
            expression: {
              type: 'AssignmentExpression',
              start: 11290,
              end: 11319,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 11290,
                end: 11291,
                name: 'c'
              },
              right: {
                type: 'CallExpression',
                start: 11292,
                end: 11319,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 11292,
                  end: 11294,
                  name: 'Sa'
                },
                arguments: [
                  {
                    type: 'ConditionalExpression',
                    start: 11295,
                    end: 11318,
                    test: {
                      type: 'BinaryExpression',
                      start: 11295,
                      end: 11308,
                      operator: '!=',
                      left: {
                        type: 'Literal',
                        start: 11295,
                        end: 11299,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 11301,
                        end: 11308,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 11301,
                          end: 11302,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 11303,
                          end: 11308,
                          name: 'value'
                        }
                      }
                    },
                    consequent: {
                      type: 'MemberExpression',
                      start: 11309,
                      end: 11316,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11309,
                        end: 11310,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11311,
                        end: 11316,
                        name: 'value'
                      }
                    },
                    alternate: {
                      type: 'Identifier',
                      start: 11317,
                      end: 11318,
                      name: 'c'
                    }
                  }
                ]
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 11320,
            end: 11448,
            expression: {
              type: 'AssignmentExpression',
              start: 11320,
              end: 11448,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 11320,
                end: 11335,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 11320,
                  end: 11321,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 11322,
                  end: 11335,
                  name: '_wrapperState'
                }
              },
              right: {
                type: 'ObjectExpression',
                start: 11336,
                end: 11448,
                properties: [
                  {
                    type: 'Property',
                    start: 11337,
                    end: 11353,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 11337,
                      end: 11351,
                      name: 'initialChecked'
                    },
                    value: {
                      type: 'Identifier',
                      start: 11352,
                      end: 11353,
                      name: 'd'
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 11354,
                    end: 11368,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 11354,
                      end: 11366,
                      name: 'initialValue'
                    },
                    value: {
                      type: 'Identifier',
                      start: 11367,
                      end: 11368,
                      name: 'c'
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 11369,
                    end: 11447,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 11369,
                      end: 11379,
                      name: 'controlled'
                    },
                    value: {
                      type: 'ConditionalExpression',
                      start: 11380,
                      end: 11447,
                      test: {
                        type: 'LogicalExpression',
                        start: 11380,
                        end: 11417,
                        operator: '||',
                        left: {
                          type: 'BinaryExpression',
                          start: 11380,
                          end: 11399,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 11380,
                            end: 11390,
                            value: 'checkbox',
                            raw: '"checkbox"'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 11393,
                            end: 11399,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 11393,
                              end: 11394,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 11395,
                              end: 11399,
                              name: 'type'
                            }
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 11401,
                          end: 11417,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 11401,
                            end: 11408,
                            value: 'radio',
                            raw: '"radio"'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 11411,
                            end: 11417,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 11411,
                              end: 11412,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 11413,
                              end: 11417,
                              name: 'type'
                            }
                          }
                        }
                      },
                      consequent: {
                        type: 'BinaryExpression',
                        start: 11418,
                        end: 11433,
                        operator: '!=',
                        left: {
                          type: 'Literal',
                          start: 11418,
                          end: 11422,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 11424,
                          end: 11433,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 11424,
                            end: 11425,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 11426,
                            end: 11433,
                            name: 'checked'
                          }
                        }
                      },
                      alternate: {
                        type: 'BinaryExpression',
                        start: 11434,
                        end: 11447,
                        operator: '!=',
                        left: {
                          type: 'Literal',
                          start: 11434,
                          end: 11438,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 11440,
                          end: 11447,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 11440,
                            end: 11441,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 11442,
                            end: 11447,
                            name: 'value'
                          }
                        }
                      }
                    },
                    kind: 'init'
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 11449,
      end: 11508,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 11458, end: 11460, name: 'ab' },
      params: [
        { type: 'Identifier', start: 11461, end: 11462, name: 'a' },
        { type: 'Identifier', start: 11463, end: 11464, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 11465,
        end: 11508,
        body: [
          {
            type: 'ExpressionStatement',
            start: 11466,
            end: 11478,
            expression: {
              type: 'AssignmentExpression',
              start: 11466,
              end: 11477,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 11466,
                end: 11467,
                name: 'b'
              },
              right: {
                type: 'MemberExpression',
                start: 11468,
                end: 11477,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 11468,
                  end: 11469,
                  name: 'b'
                },
                property: {
                  type: 'Identifier',
                  start: 11470,
                  end: 11477,
                  name: 'checked'
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 11478,
            end: 11507,
            expression: {
              type: 'LogicalExpression',
              start: 11478,
              end: 11507,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 11478,
                end: 11485,
                operator: '!=',
                left: {
                  type: 'Literal',
                  start: 11478,
                  end: 11482,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 11484,
                  end: 11485,
                  name: 'b'
                }
              },
              right: {
                type: 'CallExpression',
                start: 11487,
                end: 11507,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 11487,
                  end: 11489,
                  name: 'ta'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 11490,
                    end: 11491,
                    name: 'a'
                  },
                  {
                    type: 'Literal',
                    start: 11492,
                    end: 11501,
                    value: 'checked',
                    raw: '"checked"'
                  },
                  {
                    type: 'Identifier',
                    start: 11502,
                    end: 11503,
                    name: 'b'
                  },
                  {
                    type: 'UnaryExpression',
                    start: 11504,
                    end: 11506,
                    operator: '!',
                    argument: {
                      type: 'Literal',
                      start: 11505,
                      end: 11506,
                      raw: '1',
                      value: 1
                    },
                    prefix: true
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 11509,
      end: 11928,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 11518, end: 11520, name: 'bb' },
      params: [
        { type: 'Identifier', start: 11521, end: 11522, name: 'a' },
        { type: 'Identifier', start: 11523, end: 11524, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 11525,
        end: 11928,
        body: [
          {
            type: 'ExpressionStatement',
            start: 11526,
            end: 11534,
            expression: {
              type: 'CallExpression',
              start: 11526,
              end: 11533,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 11526,
                end: 11528,
                name: 'ab'
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 11529,
                  end: 11530,
                  name: 'a'
                },
                {
                  type: 'Identifier',
                  start: 11531,
                  end: 11532,
                  name: 'b'
                }
              ]
            }
          },
          {
            type: 'VariableDeclaration',
            start: 11534,
            end: 11561,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 11538,
                end: 11551,
                id: {
                  type: 'Identifier',
                  start: 11538,
                  end: 11539,
                  name: 'c'
                },
                init: {
                  type: 'CallExpression',
                  start: 11540,
                  end: 11551,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 11540,
                    end: 11542,
                    name: 'Sa'
                  },
                  arguments: [
                    {
                      type: 'MemberExpression',
                      start: 11543,
                      end: 11550,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11543,
                        end: 11544,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11545,
                        end: 11550,
                        name: 'value'
                      }
                    }
                  ]
                }
              },
              {
                type: 'VariableDeclarator',
                start: 11552,
                end: 11560,
                id: {
                  type: 'Identifier',
                  start: 11552,
                  end: 11553,
                  name: 'd'
                },
                init: {
                  type: 'MemberExpression',
                  start: 11554,
                  end: 11560,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11554,
                    end: 11555,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11556,
                    end: 11560,
                    name: 'type'
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 11561,
            end: 11742,
            test: {
              type: 'BinaryExpression',
              start: 11564,
              end: 11571,
              operator: '!=',
              left: {
                type: 'Literal',
                start: 11564,
                end: 11568,
                raw: 'null',
                value: null
              },
              right: {
                type: 'Identifier',
                start: 11570,
                end: 11571,
                name: 'c'
              }
            },
            consequent: {
              type: 'IfStatement',
              start: 11572,
              end: 11673,
              test: {
                type: 'BinaryExpression',
                start: 11575,
                end: 11587,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 11575,
                  end: 11583,
                  value: 'number',
                  raw: '"number"'
                },
                right: {
                  type: 'Identifier',
                  start: 11586,
                  end: 11587,
                  name: 'd'
                }
              },
              consequent: {
                type: 'BlockStatement',
                start: 11588,
                end: 11637,
                body: [
                  {
                    type: 'IfStatement',
                    start: 11589,
                    end: 11636,
                    test: {
                      type: 'LogicalExpression',
                      start: 11592,
                      end: 11623,
                      operator: '||',
                      left: {
                        type: 'LogicalExpression',
                        start: 11592,
                        end: 11611,
                        operator: '&&',
                        left: {
                          type: 'BinaryExpression',
                          start: 11592,
                          end: 11597,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 11592,
                            end: 11593,
                            raw: '0',
                            value: 0
                          },
                          right: {
                            type: 'Identifier',
                            start: 11596,
                            end: 11597,
                            name: 'c'
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 11599,
                          end: 11611,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 11599,
                            end: 11601,
                            value: '',
                            raw: '""'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 11604,
                            end: 11611,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 11604,
                              end: 11605,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 11606,
                              end: 11611,
                              name: 'value'
                            }
                          }
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 11613,
                        end: 11623,
                        operator: '!=',
                        left: {
                          type: 'MemberExpression',
                          start: 11613,
                          end: 11620,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 11613,
                            end: 11614,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 11615,
                            end: 11620,
                            name: 'value'
                          }
                        },
                        right: {
                          type: 'Identifier',
                          start: 11622,
                          end: 11623,
                          name: 'c'
                        }
                      }
                    },
                    consequent: {
                      type: 'ExpressionStatement',
                      start: 11624,
                      end: 11636,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 11624,
                        end: 11636,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 11624,
                          end: 11631,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 11624,
                            end: 11625,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 11626,
                            end: 11631,
                            name: 'value'
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 11632,
                          end: 11636,
                          operator: '+',
                          left: {
                            type: 'Literal',
                            start: 11632,
                            end: 11634,
                            value: '',
                            raw: '""'
                          },
                          right: {
                            type: 'Identifier',
                            start: 11635,
                            end: 11636,
                            name: 'c'
                          }
                        }
                      }
                    },
                    alternate: null
                  }
                ]
              },
              alternate: {
                type: 'ExpressionStatement',
                start: 11642,
                end: 11673,
                expression: {
                  type: 'LogicalExpression',
                  start: 11642,
                  end: 11672,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 11642,
                    end: 11656,
                    operator: '!==',
                    left: {
                      type: 'MemberExpression',
                      start: 11642,
                      end: 11649,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11642,
                        end: 11643,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11644,
                        end: 11649,
                        name: 'value'
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 11652,
                      end: 11656,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 11652,
                        end: 11654,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 11655,
                        end: 11656,
                        name: 'c'
                      }
                    }
                  },
                  right: {
                    type: 'AssignmentExpression',
                    start: 11659,
                    end: 11671,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 11659,
                      end: 11666,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11659,
                        end: 11660,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11661,
                        end: 11666,
                        name: 'value'
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 11667,
                      end: 11671,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 11667,
                        end: 11669,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 11670,
                        end: 11671,
                        name: 'c'
                      }
                    }
                  }
                }
              }
            },
            alternate: {
              type: 'IfStatement',
              start: 11678,
              end: 11742,
              test: {
                type: 'LogicalExpression',
                start: 11681,
                end: 11706,
                operator: '||',
                left: {
                  type: 'BinaryExpression',
                  start: 11681,
                  end: 11693,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 11681,
                    end: 11689,
                    value: 'submit',
                    raw: '"submit"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 11692,
                    end: 11693,
                    name: 'd'
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 11695,
                  end: 11706,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 11695,
                    end: 11702,
                    value: 'reset',
                    raw: '"reset"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 11705,
                    end: 11706,
                    name: 'd'
                  }
                }
              },
              consequent: {
                type: 'BlockStatement',
                start: 11707,
                end: 11742,
                body: [
                  {
                    type: 'ExpressionStatement',
                    start: 11708,
                    end: 11735,
                    expression: {
                      type: 'CallExpression',
                      start: 11708,
                      end: 11734,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 11708,
                        end: 11725,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 11708,
                          end: 11709,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 11710,
                          end: 11725,
                          name: 'removeAttribute'
                        }
                      },
                      arguments: [
                        {
                          type: 'Literal',
                          start: 11726,
                          end: 11733,
                          value: 'value',
                          raw: '"value"'
                        }
                      ]
                    }
                  },
                  {
                    type: 'ReturnStatement',
                    start: 11735,
                    end: 11741,
                    argument: null
                  }
                ]
              },
              alternate: null
            }
          },
          {
            type: 'ExpressionStatement',
            start: 11742,
            end: 11849,
            expression: {
              type: 'ConditionalExpression',
              start: 11742,
              end: 11848,
              test: {
                type: 'CallExpression',
                start: 11742,
                end: 11767,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 11742,
                  end: 11758,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11742,
                    end: 11743,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11744,
                    end: 11758,
                    name: 'hasOwnProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 11759,
                    end: 11766,
                    value: 'value',
                    raw: '"value"'
                  }
                ]
              },
              consequent: {
                type: 'CallExpression',
                start: 11768,
                end: 11782,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 11768,
                  end: 11770,
                  name: 'cb'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 11771,
                    end: 11772,
                    name: 'a'
                  },
                  {
                    type: 'MemberExpression',
                    start: 11773,
                    end: 11779,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11773,
                      end: 11774,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11775,
                      end: 11779,
                      name: 'type'
                    }
                  },
                  {
                    type: 'Identifier',
                    start: 11780,
                    end: 11781,
                    name: 'c'
                  }
                ]
              },
              alternate: {
                type: 'LogicalExpression',
                start: 11783,
                end: 11848,
                operator: '&&',
                left: {
                  type: 'CallExpression',
                  start: 11783,
                  end: 11815,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 11783,
                    end: 11799,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11783,
                      end: 11784,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11785,
                      end: 11799,
                      name: 'hasOwnProperty'
                    }
                  },
                  arguments: [
                    {
                      type: 'Literal',
                      start: 11800,
                      end: 11814,
                      value: 'defaultValue',
                      raw: '"defaultValue"'
                    }
                  ]
                },
                right: {
                  type: 'CallExpression',
                  start: 11817,
                  end: 11848,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 11817,
                    end: 11819,
                    name: 'cb'
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      start: 11820,
                      end: 11821,
                      name: 'a'
                    },
                    {
                      type: 'MemberExpression',
                      start: 11822,
                      end: 11828,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11822,
                        end: 11823,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11824,
                        end: 11828,
                        name: 'type'
                      }
                    },
                    {
                      type: 'CallExpression',
                      start: 11829,
                      end: 11847,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 11829,
                        end: 11831,
                        name: 'Sa'
                      },
                      arguments: [
                        {
                          type: 'MemberExpression',
                          start: 11832,
                          end: 11846,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 11832,
                            end: 11833,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 11834,
                            end: 11846,
                            name: 'defaultValue'
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 11849,
            end: 11927,
            expression: {
              type: 'LogicalExpression',
              start: 11849,
              end: 11927,
              operator: '&&',
              left: {
                type: 'LogicalExpression',
                start: 11849,
                end: 11888,
                operator: '&&',
                left: {
                  type: 'BinaryExpression',
                  start: 11849,
                  end: 11864,
                  operator: '==',
                  left: {
                    type: 'Literal',
                    start: 11849,
                    end: 11853,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 11855,
                    end: 11864,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11855,
                      end: 11856,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11857,
                      end: 11864,
                      name: 'checked'
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 11866,
                  end: 11888,
                  operator: '!=',
                  left: {
                    type: 'Literal',
                    start: 11866,
                    end: 11870,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 11872,
                    end: 11888,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 11872,
                      end: 11873,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 11874,
                      end: 11888,
                      name: 'defaultChecked'
                    }
                  }
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 11891,
                end: 11926,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 11891,
                  end: 11907,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11891,
                    end: 11892,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11893,
                    end: 11907,
                    name: 'defaultChecked'
                  }
                },
                right: {
                  type: 'UnaryExpression',
                  start: 11908,
                  end: 11926,
                  operator: '!',
                  argument: {
                    type: 'UnaryExpression',
                    start: 11909,
                    end: 11926,
                    operator: '!',
                    argument: {
                      type: 'MemberExpression',
                      start: 11910,
                      end: 11926,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 11910,
                        end: 11911,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 11912,
                        end: 11926,
                        name: 'defaultChecked'
                      }
                    },
                    prefix: true
                  },
                  prefix: true
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 11929,
      end: 12275,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 11938, end: 11940, name: 'db' },
      params: [
        { type: 'Identifier', start: 11941, end: 11942, name: 'a' },
        { type: 'Identifier', start: 11943, end: 11944, name: 'b' },
        { type: 'Identifier', start: 11945, end: 11946, name: 'c' }
      ],
      body: {
        type: 'BlockStatement',
        start: 11947,
        end: 12275,
        body: [
          {
            type: 'IfStatement',
            start: 11948,
            end: 12177,
            test: {
              type: 'LogicalExpression',
              start: 11951,
              end: 12010,
              operator: '||',
              left: {
                type: 'CallExpression',
                start: 11951,
                end: 11976,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 11951,
                  end: 11967,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11951,
                    end: 11952,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11953,
                    end: 11967,
                    name: 'hasOwnProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 11968,
                    end: 11975,
                    value: 'value',
                    raw: '"value"'
                  }
                ]
              },
              right: {
                type: 'CallExpression',
                start: 11978,
                end: 12010,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 11978,
                  end: 11994,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 11978,
                    end: 11979,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 11980,
                    end: 11994,
                    name: 'hasOwnProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 11995,
                    end: 12009,
                    value: 'defaultValue',
                    raw: '"defaultValue"'
                  }
                ]
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 12011,
              end: 12177,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 12012,
                  end: 12025,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 12016,
                      end: 12024,
                      id: {
                        type: 'Identifier',
                        start: 12016,
                        end: 12017,
                        name: 'd'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 12018,
                        end: 12024,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 12018,
                          end: 12019,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 12020,
                          end: 12024,
                          name: 'type'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'IfStatement',
                  start: 12025,
                  end: 12098,
                  test: {
                    type: 'UnaryExpression',
                    start: 12028,
                    end: 12090,
                    operator: '!',
                    argument: {
                      type: 'LogicalExpression',
                      start: 12030,
                      end: 12089,
                      operator: '||',
                      left: {
                        type: 'LogicalExpression',
                        start: 12030,
                        end: 12055,
                        operator: '&&',
                        left: {
                          type: 'BinaryExpression',
                          start: 12030,
                          end: 12042,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 12030,
                            end: 12038,
                            value: 'submit',
                            raw: '"submit"'
                          },
                          right: {
                            type: 'Identifier',
                            start: 12041,
                            end: 12042,
                            name: 'd'
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 12044,
                          end: 12055,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 12044,
                            end: 12051,
                            value: 'reset',
                            raw: '"reset"'
                          },
                          right: {
                            type: 'Identifier',
                            start: 12054,
                            end: 12055,
                            name: 'd'
                          }
                        }
                      },
                      right: {
                        type: 'LogicalExpression',
                        start: 12057,
                        end: 12089,
                        operator: '&&',
                        left: {
                          type: 'BinaryExpression',
                          start: 12057,
                          end: 12073,
                          operator: '!==',
                          left: {
                            type: 'UnaryExpression',
                            start: 12057,
                            end: 12063,
                            operator: 'void',
                            argument: {
                              type: 'Literal',
                              start: 12062,
                              end: 12063,
                              raw: '0',
                              value: 0
                            },
                            prefix: true
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 12066,
                            end: 12073,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 12066,
                              end: 12067,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 12068,
                              end: 12073,
                              name: 'value'
                            }
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 12075,
                          end: 12089,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 12075,
                            end: 12079,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 12082,
                            end: 12089,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 12082,
                              end: 12083,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 12084,
                              end: 12089,
                              name: 'value'
                            }
                          }
                        }
                      }
                    },
                    prefix: true
                  },
                  consequent: {
                    type: 'ReturnStatement',
                    start: 12091,
                    end: 12098,
                    argument: null
                  },
                  alternate: null
                },
                {
                  type: 'ExpressionStatement',
                  start: 12098,
                  end: 12132,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 12098,
                    end: 12131,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12098,
                      end: 12099,
                      name: 'b'
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 12100,
                      end: 12131,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 12100,
                        end: 12102,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 12103,
                        end: 12131,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'MemberExpression',
                          start: 12103,
                          end: 12118,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 12103,
                            end: 12104,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 12105,
                            end: 12118,
                            name: '_wrapperState'
                          }
                        },
                        property: {
                          type: 'Identifier',
                          start: 12119,
                          end: 12131,
                          name: 'initialValue'
                        }
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 12132,
                  end: 12160,
                  expression: {
                    type: 'LogicalExpression',
                    start: 12132,
                    end: 12159,
                    operator: '||',
                    left: {
                      type: 'LogicalExpression',
                      start: 12132,
                      end: 12146,
                      operator: '||',
                      left: {
                        type: 'Identifier',
                        start: 12132,
                        end: 12133,
                        name: 'c'
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 12135,
                        end: 12146,
                        operator: '===',
                        left: {
                          type: 'Identifier',
                          start: 12135,
                          end: 12136,
                          name: 'b'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 12139,
                          end: 12146,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 12139,
                            end: 12140,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 12141,
                            end: 12146,
                            name: 'value'
                          }
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 12149,
                      end: 12158,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 12149,
                        end: 12156,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 12149,
                          end: 12150,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 12151,
                          end: 12156,
                          name: 'value'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 12157,
                        end: 12158,
                        name: 'b'
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 12160,
                  end: 12176,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 12160,
                    end: 12176,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 12160,
                      end: 12174,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12160,
                        end: 12161,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12162,
                        end: 12174,
                        name: 'defaultValue'
                      }
                    },
                    right: {
                      type: 'Identifier',
                      start: 12175,
                      end: 12176,
                      name: 'b'
                    }
                  }
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 12177,
            end: 12186,
            expression: {
              type: 'AssignmentExpression',
              start: 12177,
              end: 12185,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 12177,
                end: 12178,
                name: 'c'
              },
              right: {
                type: 'MemberExpression',
                start: 12179,
                end: 12185,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 12179,
                  end: 12180,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 12181,
                  end: 12185,
                  name: 'name'
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 12186,
            end: 12206,
            expression: {
              type: 'LogicalExpression',
              start: 12186,
              end: 12205,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 12186,
                end: 12192,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 12186,
                  end: 12188,
                  value: '',
                  raw: '""'
                },
                right: {
                  type: 'Identifier',
                  start: 12191,
                  end: 12192,
                  name: 'c'
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 12195,
                end: 12204,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 12195,
                  end: 12201,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 12195,
                    end: 12196,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 12197,
                    end: 12201,
                    name: 'name'
                  }
                },
                right: {
                  type: 'Literal',
                  start: 12202,
                  end: 12204,
                  value: '',
                  raw: '""'
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 12206,
            end: 12256,
            expression: {
              type: 'AssignmentExpression',
              start: 12206,
              end: 12255,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 12206,
                end: 12222,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 12206,
                  end: 12207,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 12208,
                  end: 12222,
                  name: 'defaultChecked'
                }
              },
              right: {
                type: 'UnaryExpression',
                start: 12223,
                end: 12255,
                operator: '!',
                argument: {
                  type: 'UnaryExpression',
                  start: 12224,
                  end: 12255,
                  operator: '!',
                  argument: {
                    type: 'MemberExpression',
                    start: 12225,
                    end: 12255,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'MemberExpression',
                      start: 12225,
                      end: 12240,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12225,
                        end: 12226,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12227,
                        end: 12240,
                        name: '_wrapperState'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 12241,
                      end: 12255,
                      name: 'initialChecked'
                    }
                  },
                  prefix: true
                },
                prefix: true
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 12256,
            end: 12274,
            expression: {
              type: 'LogicalExpression',
              start: 12256,
              end: 12274,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 12256,
                end: 12262,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 12256,
                  end: 12258,
                  value: '',
                  raw: '""'
                },
                right: {
                  type: 'Identifier',
                  start: 12261,
                  end: 12262,
                  name: 'c'
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 12265,
                end: 12273,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 12265,
                  end: 12271,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 12265,
                    end: 12266,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 12267,
                    end: 12271,
                    name: 'name'
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 12272,
                  end: 12273,
                  name: 'c'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 12276,
      end: 12436,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 12285, end: 12287, name: 'cb' },
      params: [
        { type: 'Identifier', start: 12288, end: 12289, name: 'a' },
        { type: 'Identifier', start: 12290, end: 12291, name: 'b' },
        { type: 'Identifier', start: 12292, end: 12293, name: 'c' }
      ],
      body: {
        type: 'BlockStatement',
        start: 12294,
        end: 12436,
        body: [
          {
            type: 'IfStatement',
            start: 12295,
            end: 12435,
            test: {
              type: 'LogicalExpression',
              start: 12298,
              end: 12335,
              operator: '||',
              left: {
                type: 'BinaryExpression',
                start: 12298,
                end: 12310,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 12298,
                  end: 12306,
                  value: 'number',
                  raw: '"number"'
                },
                right: {
                  type: 'Identifier',
                  start: 12309,
                  end: 12310,
                  name: 'b'
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 12312,
                end: 12335,
                operator: '!==',
                left: {
                  type: 'CallExpression',
                  start: 12312,
                  end: 12331,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 12312,
                    end: 12314,
                    name: 'Xa'
                  },
                  arguments: [
                    {
                      type: 'MemberExpression',
                      start: 12315,
                      end: 12330,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12315,
                        end: 12316,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12317,
                        end: 12330,
                        name: 'ownerDocument'
                      }
                    }
                  ]
                },
                right: {
                  type: 'Identifier',
                  start: 12334,
                  end: 12335,
                  name: 'a'
                }
              }
            },
            consequent: {
              type: 'ExpressionStatement',
              start: 12336,
              end: 12435,
              expression: {
                type: 'ConditionalExpression',
                start: 12336,
                end: 12435,
                test: {
                  type: 'BinaryExpression',
                  start: 12336,
                  end: 12343,
                  operator: '==',
                  left: {
                    type: 'Literal',
                    start: 12336,
                    end: 12340,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'Identifier',
                    start: 12342,
                    end: 12343,
                    name: 'c'
                  }
                },
                consequent: {
                  type: 'AssignmentExpression',
                  start: 12344,
                  end: 12390,
                  operator: '=',
                  left: {
                    type: 'MemberExpression',
                    start: 12344,
                    end: 12358,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 12344,
                      end: 12345,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 12346,
                      end: 12358,
                      name: 'defaultValue'
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 12359,
                    end: 12390,
                    operator: '+',
                    left: {
                      type: 'Literal',
                      start: 12359,
                      end: 12361,
                      value: '',
                      raw: '""'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 12362,
                      end: 12390,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 12362,
                        end: 12377,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 12362,
                          end: 12363,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 12364,
                          end: 12377,
                          name: '_wrapperState'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 12378,
                        end: 12390,
                        name: 'initialValue'
                      }
                    }
                  }
                },
                alternate: {
                  type: 'LogicalExpression',
                  start: 12391,
                  end: 12435,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 12391,
                    end: 12412,
                    operator: '!==',
                    left: {
                      type: 'MemberExpression',
                      start: 12391,
                      end: 12405,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12391,
                        end: 12392,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12393,
                        end: 12405,
                        name: 'defaultValue'
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 12408,
                      end: 12412,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 12408,
                        end: 12410,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 12411,
                        end: 12412,
                        name: 'c'
                      }
                    }
                  },
                  right: {
                    type: 'AssignmentExpression',
                    start: 12415,
                    end: 12434,
                    operator: '=',
                    left: {
                      type: 'MemberExpression',
                      start: 12415,
                      end: 12429,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12415,
                        end: 12416,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12417,
                        end: 12429,
                        name: 'defaultValue'
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 12430,
                      end: 12434,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 12430,
                        end: 12432,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 12433,
                        end: 12434,
                        name: 'c'
                      }
                    }
                  }
                }
              }
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 12436,
      end: 12457,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 12440,
          end: 12456,
          id: { type: 'Identifier', start: 12440, end: 12442, name: 'eb' },
          init: {
            type: 'MemberExpression',
            start: 12443,
            end: 12456,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 12443,
              end: 12448,
              name: 'Array'
            },
            property: {
              type: 'Identifier',
              start: 12449,
              end: 12456,
              name: 'isArray'
            }
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 12458,
      end: 12851,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 12467, end: 12469, name: 'fb' },
      params: [
        { type: 'Identifier', start: 12470, end: 12471, name: 'a' },
        { type: 'Identifier', start: 12472, end: 12473, name: 'b' },
        { type: 'Identifier', start: 12474, end: 12475, name: 'c' },
        { type: 'Identifier', start: 12476, end: 12477, name: 'd' }
      ],
      body: {
        type: 'BlockStatement',
        start: 12478,
        end: 12851,
        body: [
          {
            type: 'ExpressionStatement',
            start: 12479,
            end: 12491,
            expression: {
              type: 'AssignmentExpression',
              start: 12479,
              end: 12490,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 12479,
                end: 12480,
                name: 'a'
              },
              right: {
                type: 'MemberExpression',
                start: 12481,
                end: 12490,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 12481,
                  end: 12482,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 12483,
                  end: 12490,
                  name: 'options'
                }
              }
            }
          },
          {
            type: 'IfStatement',
            start: 12491,
            end: 12850,
            test: { type: 'Identifier', start: 12494, end: 12495, name: 'b' },
            consequent: {
              type: 'BlockStatement',
              start: 12496,
              end: 12671,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 12497,
                  end: 12502,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 12497,
                    end: 12501,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12497,
                      end: 12498,
                      name: 'b'
                    },
                    right: {
                      type: 'ObjectExpression',
                      start: 12499,
                      end: 12501,
                      properties: []
                    }
                  }
                },
                {
                  type: 'ForStatement',
                  start: 12502,
                  end: 12544,
                  init: {
                    type: 'VariableDeclaration',
                    start: 12506,
                    end: 12513,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 12510,
                        end: 12513,
                        id: {
                          type: 'Identifier',
                          start: 12510,
                          end: 12511,
                          name: 'e'
                        },
                        init: {
                          type: 'Literal',
                          start: 12512,
                          end: 12513,
                          raw: '0',
                          value: 0
                        }
                      }
                    ]
                  },
                  test: {
                    type: 'BinaryExpression',
                    start: 12514,
                    end: 12524,
                    operator: '<',
                    left: {
                      type: 'Identifier',
                      start: 12514,
                      end: 12515,
                      name: 'e'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 12516,
                      end: 12524,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12516,
                        end: 12517,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12518,
                        end: 12524,
                        name: 'length'
                      }
                    }
                  },
                  update: {
                    type: 'UpdateExpression',
                    start: 12525,
                    end: 12528,
                    prefix: false,
                    operator: '++',
                    argument: {
                      type: 'Identifier',
                      start: 12525,
                      end: 12526,
                      name: 'e'
                    }
                  },
                  body: {
                    type: 'ExpressionStatement',
                    start: 12529,
                    end: 12544,
                    expression: {
                      type: 'AssignmentExpression',
                      start: 12529,
                      end: 12543,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 12529,
                        end: 12540,
                        computed: true,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 12529,
                          end: 12530,
                          name: 'b'
                        },
                        property: {
                          type: 'BinaryExpression',
                          start: 12531,
                          end: 12539,
                          operator: '+',
                          left: {
                            type: 'Literal',
                            start: 12531,
                            end: 12534,
                            value: '$',
                            raw: '"$"'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 12535,
                            end: 12539,
                            computed: true,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 12535,
                              end: 12536,
                              name: 'c'
                            },
                            property: {
                              type: 'Identifier',
                              start: 12537,
                              end: 12538,
                              name: 'e'
                            }
                          }
                        }
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 12541,
                        end: 12543,
                        operator: '!',
                        argument: {
                          type: 'Literal',
                          start: 12542,
                          end: 12543,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      }
                    }
                  }
                },
                {
                  type: 'ForStatement',
                  start: 12544,
                  end: 12670,
                  init: {
                    type: 'AssignmentExpression',
                    start: 12548,
                    end: 12551,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12548,
                      end: 12549,
                      name: 'c'
                    },
                    right: {
                      type: 'Literal',
                      start: 12550,
                      end: 12551,
                      raw: '0',
                      value: 0
                    }
                  },
                  test: {
                    type: 'BinaryExpression',
                    start: 12552,
                    end: 12562,
                    operator: '<',
                    left: {
                      type: 'Identifier',
                      start: 12552,
                      end: 12553,
                      name: 'c'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 12554,
                      end: 12562,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12554,
                        end: 12555,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12556,
                        end: 12562,
                        name: 'length'
                      }
                    }
                  },
                  update: {
                    type: 'UpdateExpression',
                    start: 12563,
                    end: 12566,
                    prefix: false,
                    operator: '++',
                    argument: {
                      type: 'Identifier',
                      start: 12563,
                      end: 12564,
                      name: 'c'
                    }
                  },
                  body: {
                    type: 'ExpressionStatement',
                    start: 12567,
                    end: 12670,
                    expression: {
                      type: 'SequenceExpression',
                      start: 12567,
                      end: 12670,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 12567,
                          end: 12601,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 12567,
                            end: 12568,
                            name: 'e'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 12569,
                            end: 12601,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 12569,
                              end: 12585,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 12569,
                                end: 12570,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 12571,
                                end: 12585,
                                name: 'hasOwnProperty'
                              }
                            },
                            arguments: [
                              {
                                type: 'BinaryExpression',
                                start: 12586,
                                end: 12600,
                                operator: '+',
                                left: {
                                  type: 'Literal',
                                  start: 12586,
                                  end: 12589,
                                  value: '$',
                                  raw: '"$"'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 12590,
                                  end: 12600,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'MemberExpression',
                                    start: 12590,
                                    end: 12594,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 12590,
                                      end: 12591,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 12592,
                                      end: 12593,
                                      name: 'c'
                                    }
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 12595,
                                    end: 12600,
                                    name: 'value'
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 12602,
                          end: 12638,
                          operator: '&&',
                          left: {
                            type: 'BinaryExpression',
                            start: 12602,
                            end: 12619,
                            operator: '!==',
                            left: {
                              type: 'MemberExpression',
                              start: 12602,
                              end: 12615,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'MemberExpression',
                                start: 12602,
                                end: 12606,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 12602,
                                  end: 12603,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 12604,
                                  end: 12605,
                                  name: 'c'
                                }
                              },
                              property: {
                                type: 'Identifier',
                                start: 12607,
                                end: 12615,
                                name: 'selected'
                              }
                            },
                            right: {
                              type: 'Identifier',
                              start: 12618,
                              end: 12619,
                              name: 'e'
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 12622,
                            end: 12637,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 12622,
                              end: 12635,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'MemberExpression',
                                start: 12622,
                                end: 12626,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 12622,
                                  end: 12623,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 12624,
                                  end: 12625,
                                  name: 'c'
                                }
                              },
                              property: {
                                type: 'Identifier',
                                start: 12627,
                                end: 12635,
                                name: 'selected'
                              }
                            },
                            right: {
                              type: 'Identifier',
                              start: 12636,
                              end: 12637,
                              name: 'e'
                            }
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 12639,
                          end: 12670,
                          operator: '&&',
                          left: {
                            type: 'LogicalExpression',
                            start: 12639,
                            end: 12643,
                            operator: '&&',
                            left: {
                              type: 'Identifier',
                              start: 12639,
                              end: 12640,
                              name: 'e'
                            },
                            right: {
                              type: 'Identifier',
                              start: 12642,
                              end: 12643,
                              name: 'd'
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 12646,
                            end: 12669,
                            operator: '=',
                            left: {
                              type: 'MemberExpression',
                              start: 12646,
                              end: 12666,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'MemberExpression',
                                start: 12646,
                                end: 12650,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 12646,
                                  end: 12647,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 12648,
                                  end: 12649,
                                  name: 'c'
                                }
                              },
                              property: {
                                type: 'Identifier',
                                start: 12651,
                                end: 12666,
                                name: 'defaultSelected'
                              }
                            },
                            right: {
                              type: 'UnaryExpression',
                              start: 12667,
                              end: 12669,
                              operator: '!',
                              argument: {
                                type: 'Literal',
                                start: 12668,
                                end: 12669,
                                raw: '0',
                                value: 0
                              },
                              prefix: true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            alternate: {
              type: 'BlockStatement',
              start: 12675,
              end: 12850,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 12676,
                  end: 12687,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 12676,
                    end: 12686,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12676,
                      end: 12677,
                      name: 'c'
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 12678,
                      end: 12686,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 12678,
                        end: 12680,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'CallExpression',
                        start: 12681,
                        end: 12686,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 12681,
                          end: 12683,
                          name: 'Sa'
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 12684,
                            end: 12685,
                            name: 'c'
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 12687,
                  end: 12694,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 12687,
                    end: 12693,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12687,
                      end: 12688,
                      name: 'b'
                    },
                    right: {
                      type: 'Literal',
                      start: 12689,
                      end: 12693,
                      raw: 'null',
                      value: null
                    }
                  }
                },
                {
                  type: 'ForStatement',
                  start: 12694,
                  end: 12824,
                  init: {
                    type: 'AssignmentExpression',
                    start: 12698,
                    end: 12701,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 12698,
                      end: 12699,
                      name: 'e'
                    },
                    right: {
                      type: 'Literal',
                      start: 12700,
                      end: 12701,
                      raw: '0',
                      value: 0
                    }
                  },
                  test: {
                    type: 'BinaryExpression',
                    start: 12702,
                    end: 12712,
                    operator: '<',
                    left: {
                      type: 'Identifier',
                      start: 12702,
                      end: 12703,
                      name: 'e'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 12704,
                      end: 12712,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 12704,
                        end: 12705,
                        name: 'a'
                      },
                      property: {
                        type: 'Identifier',
                        start: 12706,
                        end: 12712,
                        name: 'length'
                      }
                    }
                  },
                  update: {
                    type: 'UpdateExpression',
                    start: 12713,
                    end: 12716,
                    prefix: false,
                    operator: '++',
                    argument: {
                      type: 'Identifier',
                      start: 12713,
                      end: 12714,
                      name: 'e'
                    }
                  },
                  body: {
                    type: 'BlockStatement',
                    start: 12717,
                    end: 12824,
                    body: [
                      {
                        type: 'IfStatement',
                        start: 12718,
                        end: 12790,
                        test: {
                          type: 'BinaryExpression',
                          start: 12721,
                          end: 12735,
                          operator: '===',
                          left: {
                            type: 'MemberExpression',
                            start: 12721,
                            end: 12731,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'MemberExpression',
                              start: 12721,
                              end: 12725,
                              computed: true,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 12721,
                                end: 12722,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 12723,
                                end: 12724,
                                name: 'e'
                              }
                            },
                            property: {
                              type: 'Identifier',
                              start: 12726,
                              end: 12731,
                              name: 'value'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 12734,
                            end: 12735,
                            name: 'c'
                          }
                        },
                        consequent: {
                          type: 'BlockStatement',
                          start: 12736,
                          end: 12790,
                          body: [
                            {
                              type: 'ExpressionStatement',
                              start: 12737,
                              end: 12754,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 12737,
                                end: 12753,
                                operator: '=',
                                left: {
                                  type: 'MemberExpression',
                                  start: 12737,
                                  end: 12750,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'MemberExpression',
                                    start: 12737,
                                    end: 12741,
                                    computed: true,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 12737,
                                      end: 12738,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 12739,
                                      end: 12740,
                                      name: 'e'
                                    }
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 12742,
                                    end: 12750,
                                    name: 'selected'
                                  }
                                },
                                right: {
                                  type: 'UnaryExpression',
                                  start: 12751,
                                  end: 12753,
                                  operator: '!',
                                  argument: {
                                    type: 'Literal',
                                    start: 12752,
                                    end: 12753,
                                    raw: '0',
                                    value: 0
                                  },
                                  prefix: true
                                }
                              }
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 12754,
                              end: 12783,
                              expression: {
                                type: 'LogicalExpression',
                                start: 12754,
                                end: 12782,
                                operator: '&&',
                                left: {
                                  type: 'Identifier',
                                  start: 12754,
                                  end: 12755,
                                  name: 'd'
                                },
                                right: {
                                  type: 'AssignmentExpression',
                                  start: 12758,
                                  end: 12781,
                                  operator: '=',
                                  left: {
                                    type: 'MemberExpression',
                                    start: 12758,
                                    end: 12778,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'MemberExpression',
                                      start: 12758,
                                      end: 12762,
                                      computed: true,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 12758,
                                        end: 12759,
                                        name: 'a'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 12760,
                                        end: 12761,
                                        name: 'e'
                                      }
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 12763,
                                      end: 12778,
                                      name: 'defaultSelected'
                                    }
                                  },
                                  right: {
                                    type: 'UnaryExpression',
                                    start: 12779,
                                    end: 12781,
                                    operator: '!',
                                    argument: {
                                      type: 'Literal',
                                      start: 12780,
                                      end: 12781,
                                      raw: '0',
                                      value: 0
                                    },
                                    prefix: true
                                  }
                                }
                              }
                            },
                            {
                              type: 'ReturnStatement',
                              start: 12783,
                              end: 12789,
                              argument: null
                            }
                          ]
                        },
                        alternate: null
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 12790,
                        end: 12823,
                        expression: {
                          type: 'LogicalExpression',
                          start: 12790,
                          end: 12823,
                          operator: '||',
                          left: {
                            type: 'LogicalExpression',
                            start: 12790,
                            end: 12813,
                            operator: '||',
                            left: {
                              type: 'BinaryExpression',
                              start: 12790,
                              end: 12798,
                              operator: '!==',
                              left: {
                                type: 'Literal',
                                start: 12790,
                                end: 12794,
                                raw: 'null',
                                value: null
                              },
                              right: {
                                type: 'Identifier',
                                start: 12797,
                                end: 12798,
                                name: 'b'
                              }
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 12800,
                              end: 12813,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'MemberExpression',
                                start: 12800,
                                end: 12804,
                                computed: true,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 12800,
                                  end: 12801,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 12802,
                                  end: 12803,
                                  name: 'e'
                                }
                              },
                              property: {
                                type: 'Identifier',
                                start: 12805,
                                end: 12813,
                                name: 'disabled'
                              }
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 12816,
                            end: 12822,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 12816,
                              end: 12817,
                              name: 'b'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 12818,
                              end: 12822,
                              computed: true,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 12818,
                                end: 12819,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 12820,
                                end: 12821,
                                name: 'e'
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 12824,
                  end: 12849,
                  expression: {
                    type: 'LogicalExpression',
                    start: 12824,
                    end: 12849,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 12824,
                      end: 12832,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 12824,
                        end: 12828,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'Identifier',
                        start: 12831,
                        end: 12832,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 12835,
                      end: 12848,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 12835,
                        end: 12845,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 12835,
                          end: 12836,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 12837,
                          end: 12845,
                          name: 'selected'
                        }
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 12846,
                        end: 12848,
                        operator: '!',
                        argument: {
                          type: 'Literal',
                          start: 12847,
                          end: 12848,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 12852,
      end: 13014,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 12861, end: 12863, name: 'gb' },
      params: [
        { type: 'Identifier', start: 12864, end: 12865, name: 'a' },
        { type: 'Identifier', start: 12866, end: 12867, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 12868,
        end: 13014,
        body: [
          {
            type: 'IfStatement',
            start: 12869,
            end: 12923,
            test: {
              type: 'BinaryExpression',
              start: 12872,
              end: 12903,
              operator: '!=',
              left: {
                type: 'Literal',
                start: 12872,
                end: 12876,
                raw: 'null',
                value: null
              },
              right: {
                type: 'MemberExpression',
                start: 12878,
                end: 12903,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 12878,
                  end: 12879,
                  name: 'b'
                },
                property: {
                  type: 'Identifier',
                  start: 12880,
                  end: 12903,
                  name: 'dangerouslySetInnerHTML'
                }
              }
            },
            consequent: {
              type: 'ThrowStatement',
              start: 12904,
              end: 12923,
              argument: {
                type: 'CallExpression',
                start: 12910,
                end: 12922,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 12910,
                  end: 12915,
                  name: 'Error'
                },
                arguments: [
                  {
                    type: 'CallExpression',
                    start: 12916,
                    end: 12921,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 12916,
                      end: 12917,
                      name: 'p'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 12918,
                        end: 12920,
                        raw: '91',
                        value: 91
                      }
                    ]
                  }
                ]
              }
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 12923,
            end: 13013,
            argument: {
              type: 'CallExpression',
              start: 12930,
              end: 13013,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 12930,
                end: 12931,
                name: 'A'
              },
              arguments: [
                {
                  type: 'ObjectExpression',
                  start: 12932,
                  end: 12934,
                  properties: []
                },
                {
                  type: 'Identifier',
                  start: 12935,
                  end: 12936,
                  name: 'b'
                },
                {
                  type: 'ObjectExpression',
                  start: 12937,
                  end: 13012,
                  properties: [
                    {
                      type: 'Property',
                      start: 12938,
                      end: 12950,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 12938,
                        end: 12943,
                        name: 'value'
                      },
                      value: {
                        type: 'UnaryExpression',
                        start: 12944,
                        end: 12950,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 12949,
                          end: 12950,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 12951,
                      end: 12970,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 12951,
                        end: 12963,
                        name: 'defaultValue'
                      },
                      value: {
                        type: 'UnaryExpression',
                        start: 12964,
                        end: 12970,
                        operator: 'void',
                        argument: {
                          type: 'Literal',
                          start: 12969,
                          end: 12970,
                          raw: '0',
                          value: 0
                        },
                        prefix: true
                      },
                      kind: 'init'
                    },
                    {
                      type: 'Property',
                      start: 12971,
                      end: 13011,
                      method: false,
                      shorthand: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        start: 12971,
                        end: 12979,
                        name: 'children'
                      },
                      value: {
                        type: 'BinaryExpression',
                        start: 12980,
                        end: 13011,
                        operator: '+',
                        left: {
                          type: 'Literal',
                          start: 12980,
                          end: 12982,
                          value: '',
                          raw: '""'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 12983,
                          end: 13011,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'MemberExpression',
                            start: 12983,
                            end: 12998,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 12983,
                              end: 12984,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 12985,
                              end: 12998,
                              name: '_wrapperState'
                            }
                          },
                          property: {
                            type: 'Identifier',
                            start: 12999,
                            end: 13011,
                            name: 'initialValue'
                          }
                        }
                      },
                      kind: 'init'
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 13014,
      end: 13240,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 13023, end: 13025, name: 'hb' },
      params: [
        { type: 'Identifier', start: 13026, end: 13027, name: 'a' },
        { type: 'Identifier', start: 13028, end: 13029, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 13030,
        end: 13240,
        body: [
          {
            type: 'VariableDeclaration',
            start: 13031,
            end: 13045,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 13035,
                end: 13044,
                id: {
                  type: 'Identifier',
                  start: 13035,
                  end: 13036,
                  name: 'c'
                },
                init: {
                  type: 'MemberExpression',
                  start: 13037,
                  end: 13044,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 13037,
                    end: 13038,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 13039,
                    end: 13044,
                    name: 'value'
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 13045,
            end: 13203,
            test: {
              type: 'BinaryExpression',
              start: 13048,
              end: 13055,
              operator: '==',
              left: {
                type: 'Literal',
                start: 13048,
                end: 13052,
                raw: 'null',
                value: null
              },
              right: {
                type: 'Identifier',
                start: 13054,
                end: 13055,
                name: 'c'
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 13056,
              end: 13203,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 13057,
                  end: 13070,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 13057,
                    end: 13069,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 13057,
                      end: 13058,
                      name: 'c'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 13059,
                      end: 13069,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 13059,
                        end: 13060,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 13061,
                        end: 13069,
                        name: 'children'
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 13070,
                  end: 13087,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 13070,
                    end: 13086,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 13070,
                      end: 13071,
                      name: 'b'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 13072,
                      end: 13086,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 13072,
                        end: 13073,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 13074,
                        end: 13086,
                        name: 'defaultValue'
                      }
                    }
                  }
                },
                {
                  type: 'IfStatement',
                  start: 13087,
                  end: 13183,
                  test: {
                    type: 'BinaryExpression',
                    start: 13090,
                    end: 13097,
                    operator: '!=',
                    left: {
                      type: 'Literal',
                      start: 13090,
                      end: 13094,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 13096,
                      end: 13097,
                      name: 'c'
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 13098,
                    end: 13183,
                    body: [
                      {
                        type: 'IfStatement',
                        start: 13099,
                        end: 13129,
                        test: {
                          type: 'BinaryExpression',
                          start: 13102,
                          end: 13109,
                          operator: '!=',
                          left: {
                            type: 'Literal',
                            start: 13102,
                            end: 13106,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 13108,
                            end: 13109,
                            name: 'b'
                          }
                        },
                        consequent: {
                          type: 'ThrowStatement',
                          start: 13110,
                          end: 13129,
                          argument: {
                            type: 'CallExpression',
                            start: 13116,
                            end: 13128,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 13116,
                              end: 13121,
                              name: 'Error'
                            },
                            arguments: [
                              {
                                type: 'CallExpression',
                                start: 13122,
                                end: 13127,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 13122,
                                  end: 13123,
                                  name: 'p'
                                },
                                arguments: [
                                  {
                                    type: 'Literal',
                                    start: 13124,
                                    end: 13126,
                                    raw: '92',
                                    value: 92
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        alternate: null
                      },
                      {
                        type: 'IfStatement',
                        start: 13129,
                        end: 13179,
                        test: {
                          type: 'CallExpression',
                          start: 13132,
                          end: 13137,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 13132,
                            end: 13134,
                            name: 'eb'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 13135,
                              end: 13136,
                              name: 'c'
                            }
                          ]
                        },
                        consequent: {
                          type: 'BlockStatement',
                          start: 13138,
                          end: 13179,
                          body: [
                            {
                              type: 'IfStatement',
                              start: 13139,
                              end: 13172,
                              test: {
                                type: 'BinaryExpression',
                                start: 13142,
                                end: 13152,
                                operator: '<',
                                left: {
                                  type: 'Literal',
                                  start: 13142,
                                  end: 13143,
                                  raw: '1',
                                  value: 1
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 13144,
                                  end: 13152,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 13144,
                                    end: 13145,
                                    name: 'c'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 13146,
                                    end: 13152,
                                    name: 'length'
                                  }
                                }
                              },
                              consequent: {
                                type: 'ThrowStatement',
                                start: 13153,
                                end: 13172,
                                argument: {
                                  type: 'CallExpression',
                                  start: 13159,
                                  end: 13171,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 13159,
                                    end: 13164,
                                    name: 'Error'
                                  },
                                  arguments: [
                                    {
                                      type: 'CallExpression',
                                      start: 13165,
                                      end: 13170,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 13165,
                                        end: 13166,
                                        name: 'p'
                                      },
                                      arguments: [
                                        {
                                          type: 'Literal',
                                          start: 13167,
                                          end: 13169,
                                          raw: '93',
                                          value: 93
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 13172,
                              end: 13178,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 13172,
                                end: 13178,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 13172,
                                  end: 13173,
                                  name: 'c'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 13174,
                                  end: 13178,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 13174,
                                    end: 13175,
                                    name: 'c'
                                  },
                                  property: {
                                    type: 'Literal',
                                    start: 13176,
                                    end: 13177,
                                    raw: '0',
                                    value: 0
                                  }
                                }
                              }
                            }
                          ]
                        },
                        alternate: null
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 13179,
                        end: 13182,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 13179,
                          end: 13182,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 13179,
                            end: 13180,
                            name: 'b'
                          },
                          right: {
                            type: 'Identifier',
                            start: 13181,
                            end: 13182,
                            name: 'c'
                          }
                        }
                      }
                    ]
                  },
                  alternate: null
                },
                {
                  type: 'ExpressionStatement',
                  start: 13183,
                  end: 13199,
                  expression: {
                    type: 'LogicalExpression',
                    start: 13183,
                    end: 13198,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 13183,
                      end: 13190,
                      operator: '==',
                      left: {
                        type: 'Literal',
                        start: 13183,
                        end: 13187,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'Identifier',
                        start: 13189,
                        end: 13190,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 13193,
                      end: 13197,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 13193,
                        end: 13194,
                        name: 'b'
                      },
                      right: {
                        type: 'Literal',
                        start: 13195,
                        end: 13197,
                        value: '',
                        raw: '""'
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 13199,
                  end: 13202,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 13199,
                    end: 13202,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 13199,
                      end: 13200,
                      name: 'c'
                    },
                    right: {
                      type: 'Identifier',
                      start: 13201,
                      end: 13202,
                      name: 'b'
                    }
                  }
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 13203,
            end: 13239,
            expression: {
              type: 'AssignmentExpression',
              start: 13203,
              end: 13239,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 13203,
                end: 13218,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 13203,
                  end: 13204,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 13205,
                  end: 13218,
                  name: '_wrapperState'
                }
              },
              right: {
                type: 'ObjectExpression',
                start: 13219,
                end: 13239,
                properties: [
                  {
                    type: 'Property',
                    start: 13220,
                    end: 13238,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 13220,
                      end: 13232,
                      name: 'initialValue'
                    },
                    value: {
                      type: 'CallExpression',
                      start: 13233,
                      end: 13238,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 13233,
                        end: 13235,
                        name: 'Sa'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 13236,
                          end: 13237,
                          name: 'c'
                        }
                      ]
                    },
                    kind: 'init'
                  }
                ]
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 13241,
      end: 13432,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 13250, end: 13252, name: 'ib' },
      params: [
        { type: 'Identifier', start: 13253, end: 13254, name: 'a' },
        { type: 'Identifier', start: 13255, end: 13256, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 13257,
        end: 13432,
        body: [
          {
            type: 'VariableDeclaration',
            start: 13258,
            end: 13297,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 13262,
                end: 13275,
                id: {
                  type: 'Identifier',
                  start: 13262,
                  end: 13263,
                  name: 'c'
                },
                init: {
                  type: 'CallExpression',
                  start: 13264,
                  end: 13275,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 13264,
                    end: 13266,
                    name: 'Sa'
                  },
                  arguments: [
                    {
                      type: 'MemberExpression',
                      start: 13267,
                      end: 13274,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 13267,
                        end: 13268,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 13269,
                        end: 13274,
                        name: 'value'
                      }
                    }
                  ]
                }
              },
              {
                type: 'VariableDeclarator',
                start: 13276,
                end: 13296,
                id: {
                  type: 'Identifier',
                  start: 13276,
                  end: 13277,
                  name: 'd'
                },
                init: {
                  type: 'CallExpression',
                  start: 13278,
                  end: 13296,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 13278,
                    end: 13280,
                    name: 'Sa'
                  },
                  arguments: [
                    {
                      type: 'MemberExpression',
                      start: 13281,
                      end: 13295,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 13281,
                        end: 13282,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 13283,
                        end: 13295,
                        name: 'defaultValue'
                      }
                    }
                  ]
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 13297,
            end: 13401,
            expression: {
              type: 'LogicalExpression',
              start: 13297,
              end: 13400,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 13297,
                end: 13304,
                operator: '!=',
                left: {
                  type: 'Literal',
                  start: 13297,
                  end: 13301,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 13303,
                  end: 13304,
                  name: 'c'
                }
              },
              right: {
                type: 'SequenceExpression',
                start: 13307,
                end: 13399,
                expressions: [
                  {
                    type: 'AssignmentExpression',
                    start: 13307,
                    end: 13313,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 13307,
                      end: 13308,
                      name: 'c'
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 13309,
                      end: 13313,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 13309,
                        end: 13311,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 13312,
                        end: 13313,
                        name: 'c'
                      }
                    }
                  },
                  {
                    type: 'LogicalExpression',
                    start: 13314,
                    end: 13338,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 13314,
                      end: 13325,
                      operator: '!==',
                      left: {
                        type: 'Identifier',
                        start: 13314,
                        end: 13315,
                        name: 'c'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 13318,
                        end: 13325,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 13318,
                          end: 13319,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 13320,
                          end: 13325,
                          name: 'value'
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 13328,
                      end: 13337,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 13328,
                        end: 13335,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 13328,
                          end: 13329,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 13330,
                          end: 13335,
                          name: 'value'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 13336,
                        end: 13337,
                        name: 'c'
                      }
                    }
                  },
                  {
                    type: 'LogicalExpression',
                    start: 13339,
                    end: 13399,
                    operator: '&&',
                    left: {
                      type: 'LogicalExpression',
                      start: 13339,
                      end: 13379,
                      operator: '&&',
                      left: {
                        type: 'BinaryExpression',
                        start: 13339,
                        end: 13359,
                        operator: '==',
                        left: {
                          type: 'Literal',
                          start: 13339,
                          end: 13343,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 13345,
                          end: 13359,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 13345,
                            end: 13346,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 13347,
                            end: 13359,
                            name: 'defaultValue'
                          }
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 13361,
                        end: 13379,
                        operator: '!==',
                        left: {
                          type: 'MemberExpression',
                          start: 13361,
                          end: 13375,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 13361,
                            end: 13362,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 13363,
                            end: 13375,
                            name: 'defaultValue'
                          }
                        },
                        right: {
                          type: 'Identifier',
                          start: 13378,
                          end: 13379,
                          name: 'c'
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 13382,
                      end: 13398,
                      operator: '=',
                      left: {
                        type: 'MemberExpression',
                        start: 13382,
                        end: 13396,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 13382,
                          end: 13383,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 13384,
                          end: 13396,
                          name: 'defaultValue'
                        }
                      },
                      right: {
                        type: 'Identifier',
                        start: 13397,
                        end: 13398,
                        name: 'c'
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 13401,
            end: 13431,
            expression: {
              type: 'LogicalExpression',
              start: 13401,
              end: 13431,
              operator: '&&',
              left: {
                type: 'BinaryExpression',
                start: 13401,
                end: 13408,
                operator: '!=',
                left: {
                  type: 'Literal',
                  start: 13401,
                  end: 13405,
                  raw: 'null',
                  value: null
                },
                right: {
                  type: 'Identifier',
                  start: 13407,
                  end: 13408,
                  name: 'd'
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 13411,
                end: 13430,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 13411,
                  end: 13425,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 13411,
                    end: 13412,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 13413,
                    end: 13425,
                    name: 'defaultValue'
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 13426,
                  end: 13430,
                  operator: '+',
                  left: {
                    type: 'Literal',
                    start: 13426,
                    end: 13428,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'Identifier',
                    start: 13429,
                    end: 13430,
                    name: 'd'
                  }
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 13432,
      end: 13531,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 13441, end: 13443, name: 'jb' },
      params: [ { type: 'Identifier', start: 13444, end: 13445, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 13446,
        end: 13531,
        body: [
          {
            type: 'VariableDeclaration',
            start: 13447,
            end: 13467,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 13451,
                end: 13466,
                id: {
                  type: 'Identifier',
                  start: 13451,
                  end: 13452,
                  name: 'b'
                },
                init: {
                  type: 'MemberExpression',
                  start: 13453,
                  end: 13466,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 13453,
                    end: 13454,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 13455,
                    end: 13466,
                    name: 'textContent'
                  }
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 13467,
            end: 13530,
            expression: {
              type: 'LogicalExpression',
              start: 13467,
              end: 13530,
              operator: '&&',
              left: {
                type: 'LogicalExpression',
                start: 13467,
                end: 13517,
                operator: '&&',
                left: {
                  type: 'LogicalExpression',
                  start: 13467,
                  end: 13507,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 13467,
                    end: 13499,
                    operator: '===',
                    left: {
                      type: 'Identifier',
                      start: 13467,
                      end: 13468,
                      name: 'b'
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 13471,
                      end: 13499,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 13471,
                        end: 13486,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 13471,
                          end: 13472,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 13473,
                          end: 13486,
                          name: '_wrapperState'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 13487,
                        end: 13499,
                        name: 'initialValue'
                      }
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 13501,
                    end: 13507,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 13501,
                      end: 13503,
                      value: '',
                      raw: '""'
                    },
                    right: {
                      type: 'Identifier',
                      start: 13506,
                      end: 13507,
                      name: 'b'
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 13509,
                  end: 13517,
                  operator: '!==',
                  left: {
                    type: 'Literal',
                    start: 13509,
                    end: 13513,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'Identifier',
                    start: 13516,
                    end: 13517,
                    name: 'b'
                  }
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 13520,
                end: 13529,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 13520,
                  end: 13527,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 13520,
                    end: 13521,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 13522,
                    end: 13527,
                    name: 'value'
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 13528,
                  end: 13529,
                  name: 'b'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 13531,
      end: 13703,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 13540, end: 13542, name: 'kb' },
      params: [ { type: 'Identifier', start: 13543, end: 13544, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 13545,
        end: 13703,
        body: [
          {
            type: 'SwitchStatement',
            start: 13546,
            end: 13702,
            discriminant: { type: 'Identifier', start: 13553, end: 13554, name: 'a' },
            cases: [
              {
                type: 'SwitchCase',
                start: 13556,
                end: 13602,
                test: {
                  type: 'Literal',
                  start: 13561,
                  end: 13566,
                  value: 'svg',
                  raw: '"svg"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 13567,
                    end: 13602,
                    argument: {
                      type: 'Literal',
                      start: 13573,
                      end: 13601,
                      value: 'http://www.w3.org/2000/svg',
                      raw: '"http://www.w3.org/2000/svg"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 13602,
                end: 13657,
                test: {
                  type: 'Literal',
                  start: 13607,
                  end: 13613,
                  value: 'math',
                  raw: '"math"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 13614,
                    end: 13657,
                    argument: {
                      type: 'Literal',
                      start: 13620,
                      end: 13656,
                      value: 'http://www.w3.org/1998/Math/MathML',
                      raw: '"http://www.w3.org/1998/Math/MathML"'
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 13657,
                end: 13701,
                test: null,
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 13665,
                    end: 13701,
                    argument: {
                      type: 'Literal',
                      start: 13671,
                      end: 13701,
                      value: 'http://www.w3.org/1999/xhtml',
                      raw: '"http://www.w3.org/1999/xhtml"'
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 13704,
      end: 13865,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 13713, end: 13715, name: 'lb' },
      params: [
        { type: 'Identifier', start: 13716, end: 13717, name: 'a' },
        { type: 'Identifier', start: 13718, end: 13719, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 13720,
        end: 13865,
        body: [
          {
            type: 'ReturnStatement',
            start: 13721,
            end: 13864,
            argument: {
              type: 'ConditionalExpression',
              start: 13728,
              end: 13864,
              test: {
                type: 'LogicalExpression',
                start: 13728,
                end: 13771,
                operator: '||',
                left: {
                  type: 'BinaryExpression',
                  start: 13728,
                  end: 13735,
                  operator: '==',
                  left: {
                    type: 'Literal',
                    start: 13728,
                    end: 13732,
                    raw: 'null',
                    value: null
                  },
                  right: {
                    type: 'Identifier',
                    start: 13734,
                    end: 13735,
                    name: 'a'
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 13737,
                  end: 13771,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 13737,
                    end: 13767,
                    value: 'http://www.w3.org/1999/xhtml',
                    raw: '"http://www.w3.org/1999/xhtml"'
                  },
                  right: {
                    type: 'Identifier',
                    start: 13770,
                    end: 13771,
                    name: 'a'
                  }
                }
              },
              consequent: {
                type: 'CallExpression',
                start: 13772,
                end: 13777,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 13772,
                  end: 13774,
                  name: 'kb'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 13775,
                    end: 13776,
                    name: 'b'
                  }
                ]
              },
              alternate: {
                type: 'ConditionalExpression',
                start: 13778,
                end: 13864,
                test: {
                  type: 'LogicalExpression',
                  start: 13778,
                  end: 13831,
                  operator: '&&',
                  left: {
                    type: 'BinaryExpression',
                    start: 13778,
                    end: 13810,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 13778,
                      end: 13806,
                      value: 'http://www.w3.org/2000/svg',
                      raw: '"http://www.w3.org/2000/svg"'
                    },
                    right: {
                      type: 'Identifier',
                      start: 13809,
                      end: 13810,
                      name: 'a'
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 13812,
                    end: 13831,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 13812,
                      end: 13827,
                      value: 'foreignObject',
                      raw: '"foreignObject"'
                    },
                    right: {
                      type: 'Identifier',
                      start: 13830,
                      end: 13831,
                      name: 'b'
                    }
                  }
                },
                consequent: {
                  type: 'Literal',
                  start: 13832,
                  end: 13862,
                  value: 'http://www.w3.org/1999/xhtml',
                  raw: '"http://www.w3.org/1999/xhtml"'
                },
                alternate: {
                  type: 'Identifier',
                  start: 13863,
                  end: 13864,
                  name: 'a'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 13866,
      end: 14336,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 13870,
          end: 13872,
          id: { type: 'Identifier', start: 13870, end: 13872, name: 'mb' },
          init: null
        },
        {
          type: 'VariableDeclarator',
          start: 13873,
          end: 14335,
          id: { type: 'Identifier', start: 13873, end: 13875, name: 'nb' },
          init: {
            type: 'CallExpression',
            start: 13876,
            end: 14335,
            optional: false,
            callee: {
              type: 'FunctionExpression',
              start: 13876,
              end: 14034,
              async: false,
              generator: false,
              id: null,
              params: [
                {
                  type: 'Identifier',
                  start: 13885,
                  end: 13886,
                  name: 'a'
                }
              ],
              body: {
                type: 'BlockStatement',
                start: 13887,
                end: 14034,
                body: [
                  {
                    type: 'ReturnStatement',
                    start: 13888,
                    end: 14033,
                    argument: {
                      type: 'ConditionalExpression',
                      start: 13894,
                      end: 14033,
                      test: {
                        type: 'LogicalExpression',
                        start: 13894,
                        end: 13951,
                        operator: '&&',
                        left: {
                          type: 'BinaryExpression',
                          start: 13894,
                          end: 13920,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 13894,
                            end: 13905,
                            value: 'undefined',
                            raw: '"undefined"'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 13908,
                            end: 13920,
                            operator: 'typeof',
                            argument: {
                              type: 'Identifier',
                              start: 13915,
                              end: 13920,
                              name: 'MSApp'
                            },
                            prefix: true
                          }
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 13922,
                          end: 13951,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 13922,
                            end: 13927,
                            name: 'MSApp'
                          },
                          property: {
                            type: 'Identifier',
                            start: 13928,
                            end: 13951,
                            name: 'execUnsafeLocalFunction'
                          }
                        }
                      },
                      consequent: {
                        type: 'FunctionExpression',
                        start: 13952,
                        end: 14031,
                        async: false,
                        generator: false,
                        id: null,
                        params: [
                          {
                            type: 'Identifier',
                            start: 13961,
                            end: 13962,
                            name: 'b'
                          },
                          {
                            type: 'Identifier',
                            start: 13963,
                            end: 13964,
                            name: 'c'
                          },
                          {
                            type: 'Identifier',
                            start: 13965,
                            end: 13966,
                            name: 'd'
                          },
                          {
                            type: 'Identifier',
                            start: 13967,
                            end: 13968,
                            name: 'e'
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          start: 13969,
                          end: 14031,
                          body: [
                            {
                              type: 'ExpressionStatement',
                              start: 13970,
                              end: 14030,
                              expression: {
                                type: 'CallExpression',
                                start: 13970,
                                end: 14030,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 13970,
                                  end: 13999,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 13970,
                                    end: 13975,
                                    name: 'MSApp'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 13976,
                                    end: 13999,
                                    name: 'execUnsafeLocalFunction'
                                  }
                                },
                                arguments: [
                                  {
                                    type: 'FunctionExpression',
                                    start: 14000,
                                    end: 14029,
                                    async: false,
                                    generator: false,
                                    id: null,
                                    params: [],
                                    body: {
                                      type: 'BlockStatement',
                                      start: 14010,
                                      end: 14029,
                                      body: [
                                        {
                                          type: 'ReturnStatement',
                                          start: 14011,
                                          end: 14028,
                                          argument: {
                                            type: 'CallExpression',
                                            start: 14018,
                                            end: 14028,
                                            optional: false,
                                            callee: {
                                              type: 'Identifier',
                                              start: 14018,
                                              end: 14019,
                                              name: 'a'
                                            },
                                            arguments: [
                                              {
                                                type: 'Identifier',
                                                start: 14020,
                                                end: 14021,
                                                name: 'b'
                                              },
                                              {
                                                type: 'Identifier',
                                                start: 14022,
                                                end: 14023,
                                                name: 'c'
                                              },
                                              {
                                                type: 'Identifier',
                                                start: 14024,
                                                end: 14025,
                                                name: 'd'
                                              },
                                              {
                                                type: 'Identifier',
                                                start: 14026,
                                                end: 14027,
                                                name: 'e'
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    expression: false
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        expression: false
                      },
                      alternate: {
                        type: 'Identifier',
                        start: 14032,
                        end: 14033,
                        name: 'a'
                      }
                    }
                  }
                ]
              },
              expression: false
            },
            arguments: [
              {
                type: 'FunctionExpression',
                start: 14035,
                end: 14334,
                async: false,
                generator: false,
                id: null,
                params: [
                  {
                    type: 'Identifier',
                    start: 14044,
                    end: 14045,
                    name: 'a'
                  },
                  {
                    type: 'Identifier',
                    start: 14046,
                    end: 14047,
                    name: 'b'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 14048,
                  end: 14334,
                  body: [
                    {
                      type: 'IfStatement',
                      start: 14049,
                      end: 14333,
                      test: {
                        type: 'LogicalExpression',
                        start: 14052,
                        end: 14114,
                        operator: '||',
                        left: {
                          type: 'BinaryExpression',
                          start: 14052,
                          end: 14097,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 14052,
                            end: 14080,
                            value: 'http://www.w3.org/2000/svg',
                            raw: '"http://www.w3.org/2000/svg"'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 14083,
                            end: 14097,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 14083,
                              end: 14084,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 14085,
                              end: 14097,
                              name: 'namespaceURI'
                            }
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 14099,
                          end: 14114,
                          operator: 'in',
                          left: {
                            type: 'Literal',
                            start: 14099,
                            end: 14110,
                            value: 'innerHTML',
                            raw: '"innerHTML"'
                          },
                          right: {
                            type: 'Identifier',
                            start: 14113,
                            end: 14114,
                            name: 'a'
                          }
                        }
                      },
                      consequent: {
                        type: 'ExpressionStatement',
                        start: 14115,
                        end: 14129,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 14115,
                          end: 14128,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 14115,
                            end: 14126,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 14115,
                              end: 14116,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 14117,
                              end: 14126,
                              name: 'innerHTML'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 14127,
                            end: 14128,
                            name: 'b'
                          }
                        }
                      },
                      alternate: {
                        type: 'BlockStatement',
                        start: 14133,
                        end: 14333,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 14134,
                            end: 14171,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 14134,
                              end: 14170,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 14134,
                                end: 14136,
                                name: 'mb'
                              },
                              right: {
                                type: 'LogicalExpression',
                                start: 14137,
                                end: 14170,
                                operator: '||',
                                left: {
                                  type: 'Identifier',
                                  start: 14137,
                                  end: 14139,
                                  name: 'mb'
                                },
                                right: {
                                  type: 'CallExpression',
                                  start: 14141,
                                  end: 14170,
                                  optional: false,
                                  callee: {
                                    type: 'MemberExpression',
                                    start: 14141,
                                    end: 14163,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 14141,
                                      end: 14149,
                                      name: 'document'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 14150,
                                      end: 14163,
                                      name: 'createElement'
                                    }
                                  },
                                  arguments: [
                                    {
                                      type: 'Literal',
                                      start: 14164,
                                      end: 14169,
                                      value: 'div',
                                      raw: '"div"'
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          {
                            type: 'ExpressionStatement',
                            start: 14171,
                            end: 14224,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 14171,
                              end: 14223,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 14171,
                                end: 14183,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 14171,
                                  end: 14173,
                                  name: 'mb'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 14174,
                                  end: 14183,
                                  name: 'innerHTML'
                                }
                              },
                              right: {
                                type: 'BinaryExpression',
                                start: 14184,
                                end: 14223,
                                operator: '+',
                                left: {
                                  type: 'BinaryExpression',
                                  start: 14184,
                                  end: 14214,
                                  operator: '+',
                                  left: {
                                    type: 'Literal',
                                    start: 14184,
                                    end: 14191,
                                    value: '<svg>',
                                    raw: '"<svg>"'
                                  },
                                  right: {
                                    type: 'CallExpression',
                                    start: 14192,
                                    end: 14214,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 14192,
                                      end: 14212,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'CallExpression',
                                        start: 14192,
                                        end: 14203,
                                        optional: false,
                                        callee: {
                                          type: 'MemberExpression',
                                          start: 14192,
                                          end: 14201,
                                          computed: false,
                                          optional: false,
                                          object: {
                                            type: 'Identifier',
                                            start: 14192,
                                            end: 14193,
                                            name: 'b'
                                          },
                                          property: {
                                            type: 'Identifier',
                                            start: 14194,
                                            end: 14201,
                                            name: 'valueOf'
                                          }
                                        },
                                        arguments: []
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 14204,
                                        end: 14212,
                                        name: 'toString'
                                      }
                                    },
                                    arguments: []
                                  }
                                },
                                right: {
                                  type: 'Literal',
                                  start: 14215,
                                  end: 14223,
                                  value: '</svg>',
                                  raw: '"</svg>"'
                                }
                              }
                            }
                          },
                          {
                            type: 'ForStatement',
                            start: 14224,
                            end: 14286,
                            init: {
                              type: 'AssignmentExpression',
                              start: 14228,
                              end: 14243,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 14228,
                                end: 14229,
                                name: 'b'
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 14230,
                                end: 14243,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 14230,
                                  end: 14232,
                                  name: 'mb'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 14233,
                                  end: 14243,
                                  name: 'firstChild'
                                }
                              }
                            },
                            test: {
                              type: 'MemberExpression',
                              start: 14244,
                              end: 14256,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 14244,
                                end: 14245,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 14246,
                                end: 14256,
                                name: 'firstChild'
                              }
                            },
                            update: null,
                            body: {
                              type: 'ExpressionStatement',
                              start: 14258,
                              end: 14286,
                              expression: {
                                type: 'CallExpression',
                                start: 14258,
                                end: 14285,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 14258,
                                  end: 14271,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 14258,
                                    end: 14259,
                                    name: 'a'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 14260,
                                    end: 14271,
                                    name: 'removeChild'
                                  }
                                },
                                arguments: [
                                  {
                                    type: 'MemberExpression',
                                    start: 14272,
                                    end: 14284,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 14272,
                                      end: 14273,
                                      name: 'a'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 14274,
                                      end: 14284,
                                      name: 'firstChild'
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            type: 'ForStatement',
                            start: 14286,
                            end: 14332,
                            init: null,
                            test: {
                              type: 'MemberExpression',
                              start: 14291,
                              end: 14303,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 14291,
                                end: 14292,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 14293,
                                end: 14303,
                                name: 'firstChild'
                              }
                            },
                            update: null,
                            body: {
                              type: 'ExpressionStatement',
                              start: 14305,
                              end: 14332,
                              expression: {
                                type: 'CallExpression',
                                start: 14305,
                                end: 14332,
                                optional: false,
                                callee: {
                                  type: 'MemberExpression',
                                  start: 14305,
                                  end: 14318,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 14305,
                                    end: 14306,
                                    name: 'a'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 14307,
                                    end: 14318,
                                    name: 'appendChild'
                                  }
                                },
                                arguments: [
                                  {
                                    type: 'MemberExpression',
                                    start: 14319,
                                    end: 14331,
                                    computed: false,
                                    optional: false,
                                    object: {
                                      type: 'Identifier',
                                      start: 14319,
                                      end: 14320,
                                      name: 'b'
                                    },
                                    property: {
                                      type: 'Identifier',
                                      start: 14321,
                                      end: 14331,
                                      name: 'firstChild'
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                expression: false
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 14337,
      end: 14456,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 14346, end: 14348, name: 'ob' },
      params: [
        { type: 'Identifier', start: 14349, end: 14350, name: 'a' },
        { type: 'Identifier', start: 14351, end: 14352, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 14353,
        end: 14456,
        body: [
          {
            type: 'IfStatement',
            start: 14354,
            end: 14440,
            test: { type: 'Identifier', start: 14357, end: 14358, name: 'b' },
            consequent: {
              type: 'BlockStatement',
              start: 14359,
              end: 14440,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 14360,
                  end: 14379,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 14364,
                      end: 14378,
                      id: {
                        type: 'Identifier',
                        start: 14364,
                        end: 14365,
                        name: 'c'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 14366,
                        end: 14378,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 14366,
                          end: 14367,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 14368,
                          end: 14378,
                          name: 'firstChild'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'IfStatement',
                  start: 14379,
                  end: 14439,
                  test: {
                    type: 'LogicalExpression',
                    start: 14382,
                    end: 14416,
                    operator: '&&',
                    left: {
                      type: 'LogicalExpression',
                      start: 14382,
                      end: 14400,
                      operator: '&&',
                      left: {
                        type: 'Identifier',
                        start: 14382,
                        end: 14383,
                        name: 'c'
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 14385,
                        end: 14400,
                        operator: '===',
                        left: {
                          type: 'Identifier',
                          start: 14385,
                          end: 14386,
                          name: 'c'
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 14389,
                          end: 14400,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 14389,
                            end: 14390,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 14391,
                            end: 14400,
                            name: 'lastChild'
                          }
                        }
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 14402,
                      end: 14416,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 14402,
                        end: 14403,
                        raw: '3',
                        value: 3
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 14406,
                        end: 14416,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 14406,
                          end: 14407,
                          name: 'c'
                        },
                        property: {
                          type: 'Identifier',
                          start: 14408,
                          end: 14416,
                          name: 'nodeType'
                        }
                      }
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 14417,
                    end: 14439,
                    body: [
                      {
                        type: 'ExpressionStatement',
                        start: 14418,
                        end: 14432,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 14418,
                          end: 14431,
                          operator: '=',
                          left: {
                            type: 'MemberExpression',
                            start: 14418,
                            end: 14429,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 14418,
                              end: 14419,
                              name: 'c'
                            },
                            property: {
                              type: 'Identifier',
                              start: 14420,
                              end: 14429,
                              name: 'nodeValue'
                            }
                          },
                          right: {
                            type: 'Identifier',
                            start: 14430,
                            end: 14431,
                            name: 'b'
                          }
                        }
                      },
                      {
                        type: 'ReturnStatement',
                        start: 14432,
                        end: 14438,
                        argument: null
                      }
                    ]
                  },
                  alternate: null
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 14440,
            end: 14455,
            expression: {
              type: 'AssignmentExpression',
              start: 14440,
              end: 14455,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 14440,
                end: 14453,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 14440,
                  end: 14441,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 14442,
                  end: 14453,
                  name: 'textContent'
                }
              },
              right: {
                type: 'Identifier',
                start: 14454,
                end: 14455,
                name: 'b'
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 14457,
      end: 15134,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 14461,
          end: 15104,
          id: { type: 'Identifier', start: 14461, end: 14463, name: 'pb' },
          init: {
            type: 'ObjectExpression',
            start: 14464,
            end: 15104,
            properties: [
              {
                type: 'Property',
                start: 14465,
                end: 14491,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14465,
                  end: 14488,
                  name: 'animationIterationCount'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14489,
                  end: 14491,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14490,
                    end: 14491,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14492,
                end: 14506,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14492,
                  end: 14503,
                  name: 'aspectRatio'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14504,
                  end: 14506,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14505,
                    end: 14506,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14507,
                end: 14527,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14507,
                  end: 14524,
                  name: 'borderImageOutset'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14525,
                  end: 14527,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14526,
                    end: 14527,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14528,
                end: 14547,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14528,
                  end: 14544,
                  name: 'borderImageSlice'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14545,
                  end: 14547,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14546,
                    end: 14547,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14548,
                end: 14567,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14548,
                  end: 14564,
                  name: 'borderImageWidth'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14565,
                  end: 14567,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14566,
                    end: 14567,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14568,
                end: 14578,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14568,
                  end: 14575,
                  name: 'boxFlex'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14576,
                  end: 14578,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14577,
                    end: 14578,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14579,
                end: 14594,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14579,
                  end: 14591,
                  name: 'boxFlexGroup'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14592,
                  end: 14594,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14593,
                    end: 14594,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14595,
                end: 14613,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14595,
                  end: 14610,
                  name: 'boxOrdinalGroup'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14611,
                  end: 14613,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14612,
                    end: 14613,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14614,
                end: 14628,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14614,
                  end: 14625,
                  name: 'columnCount'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14626,
                  end: 14628,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14627,
                    end: 14628,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14629,
                end: 14639,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14629,
                  end: 14636,
                  name: 'columns'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14637,
                  end: 14639,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14638,
                    end: 14639,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14640,
                end: 14647,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14640,
                  end: 14644,
                  name: 'flex'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14645,
                  end: 14647,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14646,
                    end: 14647,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14648,
                end: 14659,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14648,
                  end: 14656,
                  name: 'flexGrow'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14657,
                  end: 14659,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14658,
                    end: 14659,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14660,
                end: 14675,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14660,
                  end: 14672,
                  name: 'flexPositive'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14673,
                  end: 14675,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14674,
                    end: 14675,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14676,
                end: 14689,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14676,
                  end: 14686,
                  name: 'flexShrink'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14687,
                  end: 14689,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14688,
                    end: 14689,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14690,
                end: 14705,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14690,
                  end: 14702,
                  name: 'flexNegative'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14703,
                  end: 14705,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14704,
                    end: 14705,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14706,
                end: 14718,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14706,
                  end: 14715,
                  name: 'flexOrder'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14716,
                  end: 14718,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14717,
                    end: 14718,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14719,
                end: 14730,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14719,
                  end: 14727,
                  name: 'gridArea'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14728,
                  end: 14730,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14729,
                    end: 14730,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14731,
                end: 14741,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14731,
                  end: 14738,
                  name: 'gridRow'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14739,
                  end: 14741,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14740,
                    end: 14741,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14742,
                end: 14755,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14742,
                  end: 14752,
                  name: 'gridRowEnd'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14753,
                  end: 14755,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14754,
                    end: 14755,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14756,
                end: 14770,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14756,
                  end: 14767,
                  name: 'gridRowSpan'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14768,
                  end: 14770,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14769,
                    end: 14770,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14771,
                end: 14786,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14771,
                  end: 14783,
                  name: 'gridRowStart'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14784,
                  end: 14786,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14785,
                    end: 14786,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14787,
                end: 14800,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14787,
                  end: 14797,
                  name: 'gridColumn'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14798,
                  end: 14800,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14799,
                    end: 14800,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14801,
                end: 14817,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14801,
                  end: 14814,
                  name: 'gridColumnEnd'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14815,
                  end: 14817,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14816,
                    end: 14817,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14818,
                end: 14835,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14818,
                  end: 14832,
                  name: 'gridColumnSpan'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14833,
                  end: 14835,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14834,
                    end: 14835,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14836,
                end: 14854,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14836,
                  end: 14851,
                  name: 'gridColumnStart'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14852,
                  end: 14854,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14853,
                    end: 14854,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14855,
                end: 14868,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14855,
                  end: 14865,
                  name: 'fontWeight'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14866,
                  end: 14868,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14867,
                    end: 14868,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14869,
                end: 14881,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14869,
                  end: 14878,
                  name: 'lineClamp'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14879,
                  end: 14881,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14880,
                    end: 14881,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14882,
                end: 14895,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14882,
                  end: 14892,
                  name: 'lineHeight'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14893,
                  end: 14895,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14894,
                    end: 14895,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14896,
                end: 14906,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14896,
                  end: 14903,
                  name: 'opacity'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14904,
                  end: 14906,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14905,
                    end: 14906,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14907,
                end: 14915,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14907,
                  end: 14912,
                  name: 'order'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14913,
                  end: 14915,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14914,
                    end: 14915,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14916,
                end: 14926,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14916,
                  end: 14923,
                  name: 'orphans'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14924,
                  end: 14926,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14925,
                    end: 14926,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14927,
                end: 14937,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14927,
                  end: 14934,
                  name: 'tabSize'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14935,
                  end: 14937,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14936,
                    end: 14937,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14938,
                end: 14947,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14938,
                  end: 14944,
                  name: 'widows'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14945,
                  end: 14947,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14946,
                    end: 14947,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14948,
                end: 14957,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14948,
                  end: 14954,
                  name: 'zIndex'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14955,
                  end: 14957,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14956,
                    end: 14957,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14959,
                end: 14966,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14959,
                  end: 14963,
                  name: 'zoom'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14964,
                  end: 14966,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14965,
                    end: 14966,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14967,
                end: 14981,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14967,
                  end: 14978,
                  name: 'fillOpacity'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14979,
                  end: 14981,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14980,
                    end: 14981,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14982,
                end: 14997,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14982,
                  end: 14994,
                  name: 'floodOpacity'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 14995,
                  end: 14997,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 14996,
                    end: 14997,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 14998,
                end: 15012,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 14998,
                  end: 15009,
                  name: 'stopOpacity'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15010,
                  end: 15012,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15011,
                    end: 15012,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 15013,
                end: 15031,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 15013,
                  end: 15028,
                  name: 'strokeDasharray'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15029,
                  end: 15031,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15030,
                    end: 15031,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 15032,
                end: 15051,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 15032,
                  end: 15048,
                  name: 'strokeDashoffset'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15049,
                  end: 15051,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15050,
                    end: 15051,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 15052,
                end: 15071,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 15052,
                  end: 15068,
                  name: 'strokeMiterlimit'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15069,
                  end: 15071,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15070,
                    end: 15071,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 15072,
                end: 15088,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 15072,
                  end: 15085,
                  name: 'strokeOpacity'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15086,
                  end: 15088,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15087,
                    end: 15088,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              },
              {
                type: 'Property',
                start: 15089,
                end: 15103,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 15089,
                  end: 15100,
                  name: 'strokeWidth'
                },
                value: {
                  type: 'UnaryExpression',
                  start: 15101,
                  end: 15103,
                  operator: '!',
                  argument: {
                    type: 'Literal',
                    start: 15102,
                    end: 15103,
                    raw: '0',
                    value: 0
                  },
                  prefix: true
                },
                kind: 'init'
              }
            ]
          }
        },
        {
          type: 'VariableDeclarator',
          start: 15105,
          end: 15133,
          id: { type: 'Identifier', start: 15105, end: 15107, name: 'qb' },
          init: {
            type: 'ArrayExpression',
            start: 15108,
            end: 15133,
            elements: [
              {
                type: 'Literal',
                start: 15109,
                end: 15117,
                value: 'Webkit',
                raw: '"Webkit"'
              },
              {
                type: 'Literal',
                start: 15118,
                end: 15122,
                value: 'ms',
                raw: '"ms"'
              },
              {
                type: 'Literal',
                start: 15123,
                end: 15128,
                value: 'Moz',
                raw: '"Moz"'
              },
              {
                type: 'Literal',
                start: 15129,
                end: 15132,
                value: 'O',
                raw: '"O"'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 15134,
      end: 15254,
      expression: {
        type: 'CallExpression',
        start: 15134,
        end: 15253,
        optional: false,
        callee: {
          type: 'MemberExpression',
          start: 15134,
          end: 15157,
          computed: false,
          optional: false,
          object: {
            type: 'CallExpression',
            start: 15134,
            end: 15149,
            optional: false,
            callee: {
              type: 'MemberExpression',
              start: 15134,
              end: 15145,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 15134,
                end: 15140,
                name: 'Object'
              },
              property: {
                type: 'Identifier',
                start: 15141,
                end: 15145,
                name: 'keys'
              }
            },
            arguments: [
              {
                type: 'Identifier',
                start: 15146,
                end: 15148,
                name: 'pb'
              }
            ]
          },
          property: {
            type: 'Identifier',
            start: 15150,
            end: 15157,
            name: 'forEach'
          }
        },
        arguments: [
          {
            type: 'FunctionExpression',
            start: 15158,
            end: 15252,
            async: false,
            generator: false,
            id: null,
            params: [
              {
                type: 'Identifier',
                start: 15167,
                end: 15168,
                name: 'a'
              }
            ],
            body: {
              type: 'BlockStatement',
              start: 15169,
              end: 15252,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 15170,
                  end: 15251,
                  expression: {
                    type: 'CallExpression',
                    start: 15170,
                    end: 15251,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 15170,
                      end: 15180,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 15170,
                        end: 15172,
                        name: 'qb'
                      },
                      property: {
                        type: 'Identifier',
                        start: 15173,
                        end: 15180,
                        name: 'forEach'
                      }
                    },
                    arguments: [
                      {
                        type: 'FunctionExpression',
                        start: 15181,
                        end: 15250,
                        async: false,
                        generator: false,
                        id: null,
                        params: [
                          {
                            type: 'Identifier',
                            start: 15190,
                            end: 15191,
                            name: 'b'
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          start: 15192,
                          end: 15250,
                          body: [
                            {
                              type: 'ExpressionStatement',
                              start: 15193,
                              end: 15238,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 15193,
                                end: 15237,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 15193,
                                  end: 15194,
                                  name: 'b'
                                },
                                right: {
                                  type: 'BinaryExpression',
                                  start: 15195,
                                  end: 15237,
                                  operator: '+',
                                  left: {
                                    type: 'BinaryExpression',
                                    start: 15195,
                                    end: 15222,
                                    operator: '+',
                                    left: {
                                      type: 'Identifier',
                                      start: 15195,
                                      end: 15196,
                                      name: 'b'
                                    },
                                    right: {
                                      type: 'CallExpression',
                                      start: 15197,
                                      end: 15222,
                                      optional: false,
                                      callee: {
                                        type: 'MemberExpression',
                                        start: 15197,
                                        end: 15220,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'CallExpression',
                                          start: 15197,
                                          end: 15208,
                                          optional: false,
                                          callee: {
                                            type: 'MemberExpression',
                                            start: 15197,
                                            end: 15205,
                                            computed: false,
                                            optional: false,
                                            object: {
                                              type: 'Identifier',
                                              start: 15197,
                                              end: 15198,
                                              name: 'a'
                                            },
                                            property: {
                                              type: 'Identifier',
                                              start: 15199,
                                              end: 15205,
                                              name: 'charAt'
                                            }
                                          },
                                          arguments: [
                                            {
                                              type: 'Literal',
                                              start: 15206,
                                              end: 15207,
                                              raw: '0',
                                              value: 0
                                            }
                                          ]
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 15209,
                                          end: 15220,
                                          name: 'toUpperCase'
                                        }
                                      },
                                      arguments: []
                                    }
                                  },
                                  right: {
                                    type: 'CallExpression',
                                    start: 15223,
                                    end: 15237,
                                    optional: false,
                                    callee: {
                                      type: 'MemberExpression',
                                      start: 15223,
                                      end: 15234,
                                      computed: false,
                                      optional: false,
                                      object: {
                                        type: 'Identifier',
                                        start: 15223,
                                        end: 15224,
                                        name: 'a'
                                      },
                                      property: {
                                        type: 'Identifier',
                                        start: 15225,
                                        end: 15234,
                                        name: 'substring'
                                      }
                                    },
                                    arguments: [
                                      {
                                        type: 'Literal',
                                        start: 15235,
                                        end: 15236,
                                        raw: '1',
                                        value: 1
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 15238,
                              end: 15249,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 15238,
                                end: 15249,
                                operator: '=',
                                left: {
                                  type: 'MemberExpression',
                                  start: 15238,
                                  end: 15243,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 15238,
                                    end: 15240,
                                    name: 'pb'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 15241,
                                    end: 15242,
                                    name: 'b'
                                  }
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 15244,
                                  end: 15249,
                                  computed: true,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 15244,
                                    end: 15246,
                                    name: 'pb'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 15247,
                                    end: 15248,
                                    name: 'a'
                                  }
                                }
                              }
                            }
                          ]
                        },
                        expression: false
                      }
                    ]
                  }
                }
              ]
            },
            expression: false
          }
        ]
      }
    },
    {
      type: 'FunctionDeclaration',
      start: 15254,
      end: 15401,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 15263, end: 15265, name: 'rb' },
      params: [
        { type: 'Identifier', start: 15266, end: 15267, name: 'a' },
        { type: 'Identifier', start: 15268, end: 15269, name: 'b' },
        { type: 'Identifier', start: 15270, end: 15271, name: 'c' }
      ],
      body: {
        type: 'BlockStatement',
        start: 15272,
        end: 15401,
        body: [
          {
            type: 'ReturnStatement',
            start: 15273,
            end: 15400,
            argument: {
              type: 'ConditionalExpression',
              start: 15280,
              end: 15400,
              test: {
                type: 'LogicalExpression',
                start: 15280,
                end: 15317,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 15280,
                  end: 15309,
                  operator: '||',
                  left: {
                    type: 'BinaryExpression',
                    start: 15280,
                    end: 15287,
                    operator: '==',
                    left: {
                      type: 'Literal',
                      start: 15280,
                      end: 15284,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 15286,
                      end: 15287,
                      name: 'b'
                    }
                  },
                  right: {
                    type: 'BinaryExpression',
                    start: 15289,
                    end: 15309,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 15289,
                      end: 15298,
                      value: 'boolean',
                      raw: '"boolean"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 15301,
                      end: 15309,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 15308,
                        end: 15309,
                        name: 'b'
                      },
                      prefix: true
                    }
                  }
                },
                right: {
                  type: 'BinaryExpression',
                  start: 15311,
                  end: 15317,
                  operator: '===',
                  left: {
                    type: 'Literal',
                    start: 15311,
                    end: 15313,
                    value: '',
                    raw: '""'
                  },
                  right: {
                    type: 'Identifier',
                    start: 15316,
                    end: 15317,
                    name: 'b'
                  }
                }
              },
              consequent: {
                type: 'Literal',
                start: 15318,
                end: 15320,
                value: '',
                raw: '""'
              },
              alternate: {
                type: 'ConditionalExpression',
                start: 15321,
                end: 15400,
                test: {
                  type: 'LogicalExpression',
                  start: 15321,
                  end: 15379,
                  operator: '||',
                  left: {
                    type: 'LogicalExpression',
                    start: 15321,
                    end: 15350,
                    operator: '||',
                    left: {
                      type: 'LogicalExpression',
                      start: 15321,
                      end: 15343,
                      operator: '||',
                      left: {
                        type: 'Identifier',
                        start: 15321,
                        end: 15322,
                        name: 'c'
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 15324,
                        end: 15343,
                        operator: '!==',
                        left: {
                          type: 'Literal',
                          start: 15324,
                          end: 15332,
                          value: 'number',
                          raw: '"number"'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 15335,
                          end: 15343,
                          operator: 'typeof',
                          argument: {
                            type: 'Identifier',
                            start: 15342,
                            end: 15343,
                            name: 'b'
                          },
                          prefix: true
                        }
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 15345,
                      end: 15350,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 15345,
                        end: 15346,
                        raw: '0',
                        value: 0
                      },
                      right: {
                        type: 'Identifier',
                        start: 15349,
                        end: 15350,
                        name: 'b'
                      }
                    }
                  },
                  right: {
                    type: 'LogicalExpression',
                    start: 15352,
                    end: 15379,
                    operator: '&&',
                    left: {
                      type: 'CallExpression',
                      start: 15352,
                      end: 15372,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 15352,
                        end: 15369,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 15352,
                          end: 15354,
                          name: 'pb'
                        },
                        property: {
                          type: 'Identifier',
                          start: 15355,
                          end: 15369,
                          name: 'hasOwnProperty'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 15370,
                          end: 15371,
                          name: 'a'
                        }
                      ]
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 15374,
                      end: 15379,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 15374,
                        end: 15376,
                        name: 'pb'
                      },
                      property: {
                        type: 'Identifier',
                        start: 15377,
                        end: 15378,
                        name: 'a'
                      }
                    }
                  }
                },
                consequent: {
                  type: 'CallExpression',
                  start: 15380,
                  end: 15393,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 15380,
                    end: 15391,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'BinaryExpression',
                      start: 15381,
                      end: 15385,
                      operator: '+',
                      left: {
                        type: 'Literal',
                        start: 15381,
                        end: 15383,
                        value: '',
                        raw: '""'
                      },
                      right: {
                        type: 'Identifier',
                        start: 15384,
                        end: 15385,
                        name: 'b'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 15387,
                      end: 15391,
                      name: 'trim'
                    }
                  },
                  arguments: []
                },
                alternate: {
                  type: 'BinaryExpression',
                  start: 15394,
                  end: 15400,
                  operator: '+',
                  left: {
                    type: 'Identifier',
                    start: 15394,
                    end: 15395,
                    name: 'b'
                  },
                  right: {
                    type: 'Literal',
                    start: 15396,
                    end: 15400,
                    value: 'px',
                    raw: '"px"'
                  }
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 15402,
      end: 15566,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 15411, end: 15413, name: 'sb' },
      params: [
        { type: 'Identifier', start: 15414, end: 15415, name: 'a' },
        { type: 'Identifier', start: 15416, end: 15417, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 15418,
        end: 15566,
        body: [
          {
            type: 'ExpressionStatement',
            start: 15419,
            end: 15429,
            expression: {
              type: 'AssignmentExpression',
              start: 15419,
              end: 15428,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 15419,
                end: 15420,
                name: 'a'
              },
              right: {
                type: 'MemberExpression',
                start: 15421,
                end: 15428,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 15421,
                  end: 15422,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 15423,
                  end: 15428,
                  name: 'style'
                }
              }
            }
          },
          {
            type: 'ForInStatement',
            start: 15429,
            end: 15565,
            left: {
              type: 'VariableDeclaration',
              start: 15433,
              end: 15438,
              kind: 'var',
              declarations: [
                {
                  type: 'VariableDeclarator',
                  start: 15437,
                  end: 15438,
                  id: {
                    type: 'Identifier',
                    start: 15437,
                    end: 15438,
                    name: 'c'
                  },
                  init: null
                }
              ]
            },
            right: { type: 'Identifier', start: 15442, end: 15443, name: 'b' },
            body: {
              type: 'IfStatement',
              start: 15444,
              end: 15565,
              test: {
                type: 'CallExpression',
                start: 15447,
                end: 15466,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 15447,
                  end: 15463,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 15447,
                    end: 15448,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 15449,
                    end: 15463,
                    name: 'hasOwnProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 15464,
                    end: 15465,
                    name: 'c'
                  }
                ]
              },
              consequent: {
                type: 'BlockStatement',
                start: 15467,
                end: 15565,
                body: [
                  {
                    type: 'VariableDeclaration',
                    start: 15468,
                    end: 15509,
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        start: 15472,
                        end: 15493,
                        id: {
                          type: 'Identifier',
                          start: 15472,
                          end: 15473,
                          name: 'd'
                        },
                        init: {
                          type: 'BinaryExpression',
                          start: 15474,
                          end: 15493,
                          operator: '===',
                          left: {
                            type: 'Literal',
                            start: 15474,
                            end: 15475,
                            raw: '0',
                            value: 0
                          },
                          right: {
                            type: 'CallExpression',
                            start: 15478,
                            end: 15493,
                            optional: false,
                            callee: {
                              type: 'MemberExpression',
                              start: 15478,
                              end: 15487,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 15478,
                                end: 15479,
                                name: 'c'
                              },
                              property: {
                                type: 'Identifier',
                                start: 15480,
                                end: 15487,
                                name: 'indexOf'
                              }
                            },
                            arguments: [
                              {
                                type: 'Literal',
                                start: 15488,
                                end: 15492,
                                value: '--',
                                raw: '"--"'
                              }
                            ]
                          }
                        }
                      },
                      {
                        type: 'VariableDeclarator',
                        start: 15494,
                        end: 15508,
                        id: {
                          type: 'Identifier',
                          start: 15494,
                          end: 15495,
                          name: 'e'
                        },
                        init: {
                          type: 'CallExpression',
                          start: 15496,
                          end: 15508,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 15496,
                            end: 15498,
                            name: 'rb'
                          },
                          arguments: [
                            {
                              type: 'Identifier',
                              start: 15499,
                              end: 15500,
                              name: 'c'
                            },
                            {
                              type: 'MemberExpression',
                              start: 15501,
                              end: 15505,
                              computed: true,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 15501,
                                end: 15502,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 15503,
                                end: 15504,
                                name: 'c'
                              }
                            },
                            {
                              type: 'Identifier',
                              start: 15506,
                              end: 15507,
                              name: 'd'
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 15509,
                    end: 15537,
                    expression: {
                      type: 'LogicalExpression',
                      start: 15509,
                      end: 15536,
                      operator: '&&',
                      left: {
                        type: 'BinaryExpression',
                        start: 15509,
                        end: 15520,
                        operator: '===',
                        left: {
                          type: 'Literal',
                          start: 15509,
                          end: 15516,
                          value: 'float',
                          raw: '"float"'
                        },
                        right: {
                          type: 'Identifier',
                          start: 15519,
                          end: 15520,
                          name: 'c'
                        }
                      },
                      right: {
                        type: 'AssignmentExpression',
                        start: 15523,
                        end: 15535,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 15523,
                          end: 15524,
                          name: 'c'
                        },
                        right: {
                          type: 'Literal',
                          start: 15525,
                          end: 15535,
                          value: 'cssFloat',
                          raw: '"cssFloat"'
                        }
                      }
                    }
                  },
                  {
                    type: 'ExpressionStatement',
                    start: 15537,
                    end: 15564,
                    expression: {
                      type: 'ConditionalExpression',
                      start: 15537,
                      end: 15564,
                      test: {
                        type: 'Identifier',
                        start: 15537,
                        end: 15538,
                        name: 'd'
                      },
                      consequent: {
                        type: 'CallExpression',
                        start: 15539,
                        end: 15557,
                        optional: false,
                        callee: {
                          type: 'MemberExpression',
                          start: 15539,
                          end: 15552,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 15539,
                            end: 15540,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 15541,
                            end: 15552,
                            name: 'setProperty'
                          }
                        },
                        arguments: [
                          {
                            type: 'Identifier',
                            start: 15553,
                            end: 15554,
                            name: 'c'
                          },
                          {
                            type: 'Identifier',
                            start: 15555,
                            end: 15556,
                            name: 'e'
                          }
                        ]
                      },
                      alternate: {
                        type: 'AssignmentExpression',
                        start: 15558,
                        end: 15564,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 15558,
                          end: 15562,
                          computed: true,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 15558,
                            end: 15559,
                            name: 'a'
                          },
                          property: {
                            type: 'Identifier',
                            start: 15560,
                            end: 15561,
                            name: 'c'
                          }
                        },
                        right: {
                          type: 'Identifier',
                          start: 15563,
                          end: 15564,
                          name: 'e'
                        }
                      }
                    }
                  }
                ]
              },
              alternate: null
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 15566,
      end: 15713,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 15570,
          end: 15712,
          id: { type: 'Identifier', start: 15570, end: 15572, name: 'tb' },
          init: {
            type: 'CallExpression',
            start: 15573,
            end: 15712,
            optional: false,
            callee: { type: 'Identifier', start: 15573, end: 15574, name: 'A' },
            arguments: [
              {
                type: 'ObjectExpression',
                start: 15575,
                end: 15588,
                properties: [
                  {
                    type: 'Property',
                    start: 15576,
                    end: 15587,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15576,
                      end: 15584,
                      name: 'menuitem'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15585,
                      end: 15587,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15586,
                        end: 15587,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  }
                ]
              },
              {
                type: 'ObjectExpression',
                start: 15589,
                end: 15711,
                properties: [
                  {
                    type: 'Property',
                    start: 15590,
                    end: 15597,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15590,
                      end: 15594,
                      name: 'area'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15595,
                      end: 15597,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15596,
                        end: 15597,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15598,
                    end: 15605,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15598,
                      end: 15602,
                      name: 'base'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15603,
                      end: 15605,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15604,
                        end: 15605,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15606,
                    end: 15611,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15606,
                      end: 15608,
                      name: 'br'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15609,
                      end: 15611,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15610,
                        end: 15611,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15612,
                    end: 15618,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15612,
                      end: 15615,
                      name: 'col'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15616,
                      end: 15618,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15617,
                        end: 15618,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15619,
                    end: 15627,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15619,
                      end: 15624,
                      name: 'embed'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15625,
                      end: 15627,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15626,
                        end: 15627,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15628,
                    end: 15633,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15628,
                      end: 15630,
                      name: 'hr'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15631,
                      end: 15633,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15632,
                        end: 15633,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15634,
                    end: 15640,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15634,
                      end: 15637,
                      name: 'img'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15638,
                      end: 15640,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15639,
                        end: 15640,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15641,
                    end: 15649,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15641,
                      end: 15646,
                      name: 'input'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15647,
                      end: 15649,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15648,
                        end: 15649,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15650,
                    end: 15659,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15650,
                      end: 15656,
                      name: 'keygen'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15657,
                      end: 15659,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15658,
                        end: 15659,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15660,
                    end: 15667,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15660,
                      end: 15664,
                      name: 'link'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15665,
                      end: 15667,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15666,
                        end: 15667,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15668,
                    end: 15675,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15668,
                      end: 15672,
                      name: 'meta'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15673,
                      end: 15675,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15674,
                        end: 15675,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15676,
                    end: 15684,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15676,
                      end: 15681,
                      name: 'param'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15682,
                      end: 15684,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15683,
                        end: 15684,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15685,
                    end: 15694,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15685,
                      end: 15691,
                      name: 'source'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15692,
                      end: 15694,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15693,
                        end: 15694,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15695,
                    end: 15703,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15695,
                      end: 15700,
                      name: 'track'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15701,
                      end: 15703,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15702,
                        end: 15703,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  },
                  {
                    type: 'Property',
                    start: 15704,
                    end: 15710,
                    method: false,
                    shorthand: false,
                    computed: false,
                    key: {
                      type: 'Identifier',
                      start: 15704,
                      end: 15707,
                      name: 'wbr'
                    },
                    value: {
                      type: 'UnaryExpression',
                      start: 15708,
                      end: 15710,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 15709,
                        end: 15710,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    },
                    kind: 'init'
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 15714,
      end: 16069,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 15723, end: 15725, name: 'ub' },
      params: [
        { type: 'Identifier', start: 15726, end: 15727, name: 'a' },
        { type: 'Identifier', start: 15728, end: 15729, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 15730,
        end: 16069,
        body: [
          {
            type: 'IfStatement',
            start: 15731,
            end: 16068,
            test: { type: 'Identifier', start: 15734, end: 15735, name: 'b' },
            consequent: {
              type: 'BlockStatement',
              start: 15736,
              end: 16068,
              body: [
                {
                  type: 'IfStatement',
                  start: 15737,
                  end: 15821,
                  test: {
                    type: 'LogicalExpression',
                    start: 15740,
                    end: 15798,
                    operator: '&&',
                    left: {
                      type: 'MemberExpression',
                      start: 15740,
                      end: 15745,
                      computed: true,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 15740,
                        end: 15742,
                        name: 'tb'
                      },
                      property: {
                        type: 'Identifier',
                        start: 15743,
                        end: 15744,
                        name: 'a'
                      }
                    },
                    right: {
                      type: 'LogicalExpression',
                      start: 15748,
                      end: 15797,
                      operator: '||',
                      left: {
                        type: 'BinaryExpression',
                        start: 15748,
                        end: 15764,
                        operator: '!=',
                        left: {
                          type: 'Literal',
                          start: 15748,
                          end: 15752,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 15754,
                          end: 15764,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 15754,
                            end: 15755,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 15756,
                            end: 15764,
                            name: 'children'
                          }
                        }
                      },
                      right: {
                        type: 'BinaryExpression',
                        start: 15766,
                        end: 15797,
                        operator: '!=',
                        left: {
                          type: 'Literal',
                          start: 15766,
                          end: 15770,
                          raw: 'null',
                          value: null
                        },
                        right: {
                          type: 'MemberExpression',
                          start: 15772,
                          end: 15797,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 15772,
                            end: 15773,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 15774,
                            end: 15797,
                            name: 'dangerouslySetInnerHTML'
                          }
                        }
                      }
                    }
                  },
                  consequent: {
                    type: 'ThrowStatement',
                    start: 15799,
                    end: 15821,
                    argument: {
                      type: 'CallExpression',
                      start: 15805,
                      end: 15820,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 15805,
                        end: 15810,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 15811,
                          end: 15819,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 15811,
                            end: 15812,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 15813,
                              end: 15816,
                              raw: '137',
                              value: 137
                            },
                            {
                              type: 'Identifier',
                              start: 15817,
                              end: 15818,
                              name: 'a'
                            }
                          ]
                        }
                      ]
                    }
                  },
                  alternate: null
                },
                {
                  type: 'IfStatement',
                  start: 15821,
                  end: 16004,
                  test: {
                    type: 'BinaryExpression',
                    start: 15824,
                    end: 15855,
                    operator: '!=',
                    left: {
                      type: 'Literal',
                      start: 15824,
                      end: 15828,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 15830,
                      end: 15855,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 15830,
                        end: 15831,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 15832,
                        end: 15855,
                        name: 'dangerouslySetInnerHTML'
                      }
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 15856,
                    end: 16004,
                    body: [
                      {
                        type: 'IfStatement',
                        start: 15857,
                        end: 15896,
                        test: {
                          type: 'BinaryExpression',
                          start: 15860,
                          end: 15876,
                          operator: '!=',
                          left: {
                            type: 'Literal',
                            start: 15860,
                            end: 15864,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 15866,
                            end: 15876,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 15866,
                              end: 15867,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 15868,
                              end: 15876,
                              name: 'children'
                            }
                          }
                        },
                        consequent: {
                          type: 'ThrowStatement',
                          start: 15877,
                          end: 15896,
                          argument: {
                            type: 'CallExpression',
                            start: 15883,
                            end: 15895,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 15883,
                              end: 15888,
                              name: 'Error'
                            },
                            arguments: [
                              {
                                type: 'CallExpression',
                                start: 15889,
                                end: 15894,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 15889,
                                  end: 15890,
                                  name: 'p'
                                },
                                arguments: [
                                  {
                                    type: 'Literal',
                                    start: 15891,
                                    end: 15893,
                                    raw: '60',
                                    value: 60
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        alternate: null
                      },
                      {
                        type: 'IfStatement',
                        start: 15896,
                        end: 16003,
                        test: {
                          type: 'LogicalExpression',
                          start: 15899,
                          end: 15983,
                          operator: '||',
                          left: {
                            type: 'BinaryExpression',
                            start: 15899,
                            end: 15942,
                            operator: '!==',
                            left: {
                              type: 'Literal',
                              start: 15899,
                              end: 15907,
                              value: 'object',
                              raw: '"object"'
                            },
                            right: {
                              type: 'UnaryExpression',
                              start: 15910,
                              end: 15942,
                              operator: 'typeof',
                              argument: {
                                type: 'MemberExpression',
                                start: 15917,
                                end: 15942,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 15917,
                                  end: 15918,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 15919,
                                  end: 15942,
                                  name: 'dangerouslySetInnerHTML'
                                }
                              },
                              prefix: true
                            }
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 15944,
                            end: 15983,
                            operator: '!',
                            argument: {
                              type: 'BinaryExpression',
                              start: 15946,
                              end: 15982,
                              operator: 'in',
                              left: {
                                type: 'Literal',
                                start: 15946,
                                end: 15954,
                                value: '__html',
                                raw: '"__html"'
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 15957,
                                end: 15982,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 15957,
                                  end: 15958,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 15959,
                                  end: 15982,
                                  name: 'dangerouslySetInnerHTML'
                                }
                              }
                            },
                            prefix: true
                          }
                        },
                        consequent: {
                          type: 'ThrowStatement',
                          start: 15984,
                          end: 16003,
                          argument: {
                            type: 'CallExpression',
                            start: 15990,
                            end: 16002,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 15990,
                              end: 15995,
                              name: 'Error'
                            },
                            arguments: [
                              {
                                type: 'CallExpression',
                                start: 15996,
                                end: 16001,
                                optional: false,
                                callee: {
                                  type: 'Identifier',
                                  start: 15996,
                                  end: 15997,
                                  name: 'p'
                                },
                                arguments: [
                                  {
                                    type: 'Literal',
                                    start: 15998,
                                    end: 16000,
                                    raw: '61',
                                    value: 61
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        alternate: null
                      }
                    ]
                  },
                  alternate: null
                },
                {
                  type: 'IfStatement',
                  start: 16004,
                  end: 16067,
                  test: {
                    type: 'LogicalExpression',
                    start: 16007,
                    end: 16047,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 16007,
                      end: 16020,
                      operator: '!=',
                      left: {
                        type: 'Literal',
                        start: 16007,
                        end: 16011,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 16013,
                        end: 16020,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 16013,
                          end: 16014,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 16015,
                          end: 16020,
                          name: 'style'
                        }
                      }
                    },
                    right: {
                      type: 'BinaryExpression',
                      start: 16022,
                      end: 16047,
                      operator: '!==',
                      left: {
                        type: 'Literal',
                        start: 16022,
                        end: 16030,
                        value: 'object',
                        raw: '"object"'
                      },
                      right: {
                        type: 'UnaryExpression',
                        start: 16033,
                        end: 16047,
                        operator: 'typeof',
                        argument: {
                          type: 'MemberExpression',
                          start: 16040,
                          end: 16047,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 16040,
                            end: 16041,
                            name: 'b'
                          },
                          property: {
                            type: 'Identifier',
                            start: 16042,
                            end: 16047,
                            name: 'style'
                          }
                        },
                        prefix: true
                      }
                    }
                  },
                  consequent: {
                    type: 'ThrowStatement',
                    start: 16048,
                    end: 16067,
                    argument: {
                      type: 'CallExpression',
                      start: 16054,
                      end: 16066,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 16054,
                        end: 16059,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 16060,
                          end: 16065,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 16060,
                            end: 16061,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 16062,
                              end: 16064,
                              raw: '62',
                              value: 62
                            }
                          ]
                        }
                      ]
                    }
                  },
                  alternate: null
                }
              ]
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16070,
      end: 16345,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16079, end: 16081, name: 'vb' },
      params: [
        { type: 'Identifier', start: 16082, end: 16083, name: 'a' },
        { type: 'Identifier', start: 16084, end: 16085, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 16086,
        end: 16345,
        body: [
          {
            type: 'IfStatement',
            start: 16087,
            end: 16139,
            test: {
              type: 'BinaryExpression',
              start: 16090,
              end: 16109,
              operator: '===',
              left: {
                type: 'UnaryExpression',
                start: 16090,
                end: 16092,
                operator: '-',
                argument: {
                  type: 'Literal',
                  start: 16091,
                  end: 16092,
                  raw: '1',
                  value: 1
                },
                prefix: true
              },
              right: {
                type: 'CallExpression',
                start: 16095,
                end: 16109,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 16095,
                  end: 16104,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 16095,
                    end: 16096,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 16097,
                    end: 16104,
                    name: 'indexOf'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 16105,
                    end: 16108,
                    value: '-',
                    raw: '"-"'
                  }
                ]
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 16110,
              end: 16139,
              argument: {
                type: 'BinaryExpression',
                start: 16116,
                end: 16138,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 16116,
                  end: 16124,
                  value: 'string',
                  raw: '"string"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 16127,
                  end: 16138,
                  operator: 'typeof',
                  argument: {
                    type: 'MemberExpression',
                    start: 16134,
                    end: 16138,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 16134,
                      end: 16135,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 16136,
                      end: 16138,
                      name: 'is'
                    }
                  },
                  prefix: true
                }
              }
            },
            alternate: null
          },
          {
            type: 'SwitchStatement',
            start: 16139,
            end: 16344,
            discriminant: { type: 'Identifier', start: 16146, end: 16147, name: 'a' },
            cases: [
              {
                type: 'SwitchCase',
                start: 16149,
                end: 16171,
                test: {
                  type: 'Literal',
                  start: 16154,
                  end: 16170,
                  value: 'annotation-xml',
                  raw: '"annotation-xml"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16171,
                end: 16192,
                test: {
                  type: 'Literal',
                  start: 16176,
                  end: 16191,
                  value: 'color-profile',
                  raw: '"color-profile"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16192,
                end: 16209,
                test: {
                  type: 'Literal',
                  start: 16197,
                  end: 16208,
                  value: 'font-face',
                  raw: '"font-face"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16209,
                end: 16230,
                test: {
                  type: 'Literal',
                  start: 16214,
                  end: 16229,
                  value: 'font-face-src',
                  raw: '"font-face-src"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16230,
                end: 16251,
                test: {
                  type: 'Literal',
                  start: 16235,
                  end: 16250,
                  value: 'font-face-uri',
                  raw: '"font-face-uri"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16251,
                end: 16275,
                test: {
                  type: 'Literal',
                  start: 16256,
                  end: 16274,
                  value: 'font-face-format',
                  raw: '"font-face-format"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16275,
                end: 16297,
                test: {
                  type: 'Literal',
                  start: 16280,
                  end: 16296,
                  value: 'font-face-name',
                  raw: '"font-face-name"'
                },
                consequent: []
              },
              {
                type: 'SwitchCase',
                start: 16297,
                end: 16327,
                test: {
                  type: 'Literal',
                  start: 16302,
                  end: 16317,
                  value: 'missing-glyph',
                  raw: '"missing-glyph"'
                },
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 16318,
                    end: 16327,
                    argument: {
                      type: 'UnaryExpression',
                      start: 16324,
                      end: 16326,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 16325,
                        end: 16326,
                        raw: '1',
                        value: 1
                      },
                      prefix: true
                    }
                  }
                ]
              },
              {
                type: 'SwitchCase',
                start: 16327,
                end: 16343,
                test: null,
                consequent: [
                  {
                    type: 'ReturnStatement',
                    start: 16335,
                    end: 16343,
                    argument: {
                      type: 'UnaryExpression',
                      start: 16341,
                      end: 16343,
                      operator: '!',
                      argument: {
                        type: 'Literal',
                        start: 16342,
                        end: 16343,
                        raw: '0',
                        value: 0
                      },
                      prefix: true
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 16345,
      end: 16357,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 16349,
          end: 16356,
          id: { type: 'Identifier', start: 16349, end: 16351, name: 'wb' },
          init: {
            type: 'Literal',
            start: 16352,
            end: 16356,
            raw: 'null',
            value: null
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 16357,
      end: 16499,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16366, end: 16368, name: 'xb' },
      params: [ { type: 'Identifier', start: 16369, end: 16370, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 16371,
        end: 16499,
        body: [
          {
            type: 'ExpressionStatement',
            start: 16372,
            end: 16405,
            expression: {
              type: 'AssignmentExpression',
              start: 16372,
              end: 16404,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 16372,
                end: 16373,
                name: 'a'
              },
              right: {
                type: 'LogicalExpression',
                start: 16374,
                end: 16404,
                operator: '||',
                left: {
                  type: 'LogicalExpression',
                  start: 16374,
                  end: 16396,
                  operator: '||',
                  left: {
                    type: 'MemberExpression',
                    start: 16374,
                    end: 16382,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 16374,
                      end: 16375,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 16376,
                      end: 16382,
                      name: 'target'
                    }
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 16384,
                    end: 16396,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 16384,
                      end: 16385,
                      name: 'a'
                    },
                    property: {
                      type: 'Identifier',
                      start: 16386,
                      end: 16396,
                      name: 'srcElement'
                    }
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 16398,
                  end: 16404,
                  name: 'window'
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 16405,
            end: 16462,
            expression: {
              type: 'LogicalExpression',
              start: 16405,
              end: 16461,
              operator: '&&',
              left: {
                type: 'MemberExpression',
                start: 16405,
                end: 16430,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 16405,
                  end: 16406,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 16407,
                  end: 16430,
                  name: 'correspondingUseElement'
                }
              },
              right: {
                type: 'AssignmentExpression',
                start: 16433,
                end: 16460,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 16433,
                  end: 16434,
                  name: 'a'
                },
                right: {
                  type: 'MemberExpression',
                  start: 16435,
                  end: 16460,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 16435,
                    end: 16436,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 16437,
                    end: 16460,
                    name: 'correspondingUseElement'
                  }
                }
              }
            }
          },
          {
            type: 'ReturnStatement',
            start: 16462,
            end: 16498,
            argument: {
              type: 'ConditionalExpression',
              start: 16469,
              end: 16498,
              test: {
                type: 'BinaryExpression',
                start: 16469,
                end: 16483,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 16469,
                  end: 16470,
                  raw: '3',
                  value: 3
                },
                right: {
                  type: 'MemberExpression',
                  start: 16473,
                  end: 16483,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 16473,
                    end: 16474,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 16475,
                    end: 16483,
                    name: 'nodeType'
                  }
                }
              },
              consequent: {
                type: 'MemberExpression',
                start: 16484,
                end: 16496,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 16484,
                  end: 16485,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 16486,
                  end: 16496,
                  name: 'parentNode'
                }
              },
              alternate: {
                type: 'Identifier',
                start: 16497,
                end: 16498,
                name: 'a'
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 16499,
      end: 16527,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 16503,
          end: 16510,
          id: { type: 'Identifier', start: 16503, end: 16505, name: 'yb' },
          init: {
            type: 'Literal',
            start: 16506,
            end: 16510,
            raw: 'null',
            value: null
          }
        },
        {
          type: 'VariableDeclarator',
          start: 16511,
          end: 16518,
          id: { type: 'Identifier', start: 16511, end: 16513, name: 'zb' },
          init: {
            type: 'Literal',
            start: 16514,
            end: 16518,
            raw: 'null',
            value: null
          }
        },
        {
          type: 'VariableDeclarator',
          start: 16519,
          end: 16526,
          id: { type: 'Identifier', start: 16519, end: 16521, name: 'Ab' },
          init: {
            type: 'Literal',
            start: 16522,
            end: 16526,
            raw: 'null',
            value: null
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 16528,
      end: 16658,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16537, end: 16539, name: 'Bb' },
      params: [ { type: 'Identifier', start: 16540, end: 16541, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 16542,
        end: 16658,
        body: [
          {
            type: 'IfStatement',
            start: 16543,
            end: 16657,
            test: {
              type: 'AssignmentExpression',
              start: 16546,
              end: 16553,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 16546,
                end: 16547,
                name: 'a'
              },
              right: {
                type: 'CallExpression',
                start: 16548,
                end: 16553,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 16548,
                  end: 16550,
                  name: 'Cb'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 16551,
                    end: 16552,
                    name: 'a'
                  }
                ]
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 16554,
              end: 16657,
              body: [
                {
                  type: 'IfStatement',
                  start: 16555,
                  end: 16601,
                  test: {
                    type: 'BinaryExpression',
                    start: 16558,
                    end: 16580,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 16558,
                      end: 16568,
                      value: 'function',
                      raw: '"function"'
                    },
                    right: {
                      type: 'UnaryExpression',
                      start: 16571,
                      end: 16580,
                      operator: 'typeof',
                      argument: {
                        type: 'Identifier',
                        start: 16578,
                        end: 16580,
                        name: 'yb'
                      },
                      prefix: true
                    }
                  },
                  consequent: {
                    type: 'ThrowStatement',
                    start: 16581,
                    end: 16601,
                    argument: {
                      type: 'CallExpression',
                      start: 16587,
                      end: 16600,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 16587,
                        end: 16592,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 16593,
                          end: 16599,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 16593,
                            end: 16594,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 16595,
                              end: 16598,
                              raw: '280',
                              value: 280
                            }
                          ]
                        }
                      ]
                    }
                  },
                  alternate: null
                },
                {
                  type: 'VariableDeclaration',
                  start: 16601,
                  end: 16619,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 16605,
                      end: 16618,
                      id: {
                        type: 'Identifier',
                        start: 16605,
                        end: 16606,
                        name: 'b'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 16607,
                        end: 16618,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 16607,
                          end: 16608,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 16609,
                          end: 16618,
                          name: 'stateNode'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 16619,
                  end: 16656,
                  expression: {
                    type: 'LogicalExpression',
                    start: 16619,
                    end: 16656,
                    operator: '&&',
                    left: {
                      type: 'Identifier',
                      start: 16619,
                      end: 16620,
                      name: 'b'
                    },
                    right: {
                      type: 'SequenceExpression',
                      start: 16623,
                      end: 16655,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 16623,
                          end: 16630,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 16623,
                            end: 16624,
                            name: 'b'
                          },
                          right: {
                            type: 'CallExpression',
                            start: 16625,
                            end: 16630,
                            optional: false,
                            callee: {
                              type: 'Identifier',
                              start: 16625,
                              end: 16627,
                              name: 'Db'
                            },
                            arguments: [
                              {
                                type: 'Identifier',
                                start: 16628,
                                end: 16629,
                                name: 'b'
                              }
                            ]
                          }
                        },
                        {
                          type: 'CallExpression',
                          start: 16631,
                          end: 16655,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 16631,
                            end: 16633,
                            name: 'yb'
                          },
                          arguments: [
                            {
                              type: 'MemberExpression',
                              start: 16634,
                              end: 16645,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 16634,
                                end: 16635,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 16636,
                                end: 16645,
                                name: 'stateNode'
                              }
                            },
                            {
                              type: 'MemberExpression',
                              start: 16646,
                              end: 16652,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 16646,
                                end: 16647,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 16648,
                                end: 16652,
                                name: 'type'
                              }
                            },
                            {
                              type: 'Identifier',
                              start: 16653,
                              end: 16654,
                              name: 'b'
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16658,
      end: 16702,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16667, end: 16669, name: 'Eb' },
      params: [ { type: 'Identifier', start: 16670, end: 16671, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 16672,
        end: 16702,
        body: [
          {
            type: 'ExpressionStatement',
            start: 16673,
            end: 16701,
            expression: {
              type: 'ConditionalExpression',
              start: 16673,
              end: 16701,
              test: {
                type: 'Identifier',
                start: 16673,
                end: 16675,
                name: 'zb'
              },
              consequent: {
                type: 'ConditionalExpression',
                start: 16676,
                end: 16696,
                test: {
                  type: 'Identifier',
                  start: 16676,
                  end: 16678,
                  name: 'Ab'
                },
                consequent: {
                  type: 'CallExpression',
                  start: 16679,
                  end: 16689,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 16679,
                    end: 16686,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 16679,
                      end: 16681,
                      name: 'Ab'
                    },
                    property: {
                      type: 'Identifier',
                      start: 16682,
                      end: 16686,
                      name: 'push'
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      start: 16687,
                      end: 16688,
                      name: 'a'
                    }
                  ]
                },
                alternate: {
                  type: 'AssignmentExpression',
                  start: 16690,
                  end: 16696,
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    start: 16690,
                    end: 16692,
                    name: 'Ab'
                  },
                  right: {
                    type: 'ArrayExpression',
                    start: 16693,
                    end: 16696,
                    elements: [
                      {
                        type: 'Identifier',
                        start: 16694,
                        end: 16695,
                        name: 'a'
                      }
                    ]
                  }
                }
              },
              alternate: {
                type: 'AssignmentExpression',
                start: 16697,
                end: 16701,
                operator: '=',
                left: {
                  type: 'Identifier',
                  start: 16697,
                  end: 16699,
                  name: 'zb'
                },
                right: {
                  type: 'Identifier',
                  start: 16700,
                  end: 16701,
                  name: 'a'
                }
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16702,
      end: 16792,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16711, end: 16713, name: 'Fb' },
      params: [],
      body: {
        type: 'BlockStatement',
        start: 16715,
        end: 16792,
        body: [
          {
            type: 'IfStatement',
            start: 16716,
            end: 16791,
            test: {
              type: 'Identifier',
              start: 16719,
              end: 16721,
              name: 'zb'
            },
            consequent: {
              type: 'BlockStatement',
              start: 16722,
              end: 16791,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 16723,
                  end: 16737,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 16727,
                      end: 16731,
                      id: {
                        type: 'Identifier',
                        start: 16727,
                        end: 16728,
                        name: 'a'
                      },
                      init: {
                        type: 'Identifier',
                        start: 16729,
                        end: 16731,
                        name: 'zb'
                      }
                    },
                    {
                      type: 'VariableDeclarator',
                      start: 16732,
                      end: 16736,
                      id: {
                        type: 'Identifier',
                        start: 16732,
                        end: 16733,
                        name: 'b'
                      },
                      init: {
                        type: 'Identifier',
                        start: 16734,
                        end: 16736,
                        name: 'Ab'
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 16737,
                  end: 16748,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 16737,
                    end: 16747,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 16737,
                      end: 16739,
                      name: 'Ab'
                    },
                    right: {
                      type: 'AssignmentExpression',
                      start: 16740,
                      end: 16747,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 16740,
                        end: 16742,
                        name: 'zb'
                      },
                      right: {
                        type: 'Literal',
                        start: 16743,
                        end: 16747,
                        raw: 'null',
                        value: null
                      }
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 16748,
                  end: 16754,
                  expression: {
                    type: 'CallExpression',
                    start: 16748,
                    end: 16753,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 16748,
                      end: 16750,
                      name: 'Bb'
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 16751,
                        end: 16752,
                        name: 'a'
                      }
                    ]
                  }
                },
                {
                  type: 'IfStatement',
                  start: 16754,
                  end: 16790,
                  test: {
                    type: 'Identifier',
                    start: 16757,
                    end: 16758,
                    name: 'b'
                  },
                  consequent: {
                    type: 'ForStatement',
                    start: 16759,
                    end: 16790,
                    init: {
                      type: 'AssignmentExpression',
                      start: 16763,
                      end: 16766,
                      operator: '=',
                      left: {
                        type: 'Identifier',
                        start: 16763,
                        end: 16764,
                        name: 'a'
                      },
                      right: {
                        type: 'Literal',
                        start: 16765,
                        end: 16766,
                        raw: '0',
                        value: 0
                      }
                    },
                    test: {
                      type: 'BinaryExpression',
                      start: 16767,
                      end: 16777,
                      operator: '<',
                      left: {
                        type: 'Identifier',
                        start: 16767,
                        end: 16768,
                        name: 'a'
                      },
                      right: {
                        type: 'MemberExpression',
                        start: 16769,
                        end: 16777,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 16769,
                          end: 16770,
                          name: 'b'
                        },
                        property: {
                          type: 'Identifier',
                          start: 16771,
                          end: 16777,
                          name: 'length'
                        }
                      }
                    },
                    update: {
                      type: 'UpdateExpression',
                      start: 16778,
                      end: 16781,
                      prefix: false,
                      operator: '++',
                      argument: {
                        type: 'Identifier',
                        start: 16778,
                        end: 16779,
                        name: 'a'
                      }
                    },
                    body: {
                      type: 'ExpressionStatement',
                      start: 16782,
                      end: 16790,
                      expression: {
                        type: 'CallExpression',
                        start: 16782,
                        end: 16790,
                        optional: false,
                        callee: {
                          type: 'Identifier',
                          start: 16782,
                          end: 16784,
                          name: 'Bb'
                        },
                        arguments: [
                          {
                            type: 'MemberExpression',
                            start: 16785,
                            end: 16789,
                            computed: true,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 16785,
                              end: 16786,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 16787,
                              end: 16788,
                              name: 'a'
                            }
                          }
                        ]
                      }
                    }
                  },
                  alternate: null
                }
              ]
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16792,
      end: 16821,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16801, end: 16803, name: 'Gb' },
      params: [
        { type: 'Identifier', start: 16804, end: 16805, name: 'a' },
        { type: 'Identifier', start: 16806, end: 16807, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 16808,
        end: 16821,
        body: [
          {
            type: 'ReturnStatement',
            start: 16809,
            end: 16820,
            argument: {
              type: 'CallExpression',
              start: 16816,
              end: 16820,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 16816,
                end: 16817,
                name: 'a'
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 16818,
                  end: 16819,
                  name: 'b'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16821,
      end: 16836,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16830, end: 16832, name: 'Hb' },
      params: [],
      body: { type: 'BlockStatement', start: 16834, end: 16836, body: [] },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 16836,
      end: 16846,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 16840,
          end: 16845,
          id: { type: 'Identifier', start: 16840, end: 16842, name: 'Ib' },
          init: {
            type: 'UnaryExpression',
            start: 16843,
            end: 16845,
            operator: '!',
            argument: {
              type: 'Literal',
              start: 16844,
              end: 16845,
              raw: '1',
              value: 1
            },
            prefix: true
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 16846,
      end: 16961,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16855, end: 16857, name: 'Jb' },
      params: [
        { type: 'Identifier', start: 16858, end: 16859, name: 'a' },
        { type: 'Identifier', start: 16860, end: 16861, name: 'b' },
        { type: 'Identifier', start: 16862, end: 16863, name: 'c' }
      ],
      body: {
        type: 'BlockStatement',
        start: 16864,
        end: 16961,
        body: [
          {
            type: 'IfStatement',
            start: 16865,
            end: 16885,
            test: {
              type: 'Identifier',
              start: 16868,
              end: 16870,
              name: 'Ib'
            },
            consequent: {
              type: 'ReturnStatement',
              start: 16871,
              end: 16885,
              argument: {
                type: 'CallExpression',
                start: 16878,
                end: 16884,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 16878,
                  end: 16879,
                  name: 'a'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 16880,
                    end: 16881,
                    name: 'b'
                  },
                  {
                    type: 'Identifier',
                    start: 16882,
                    end: 16883,
                    name: 'c'
                  }
                ]
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 16885,
            end: 16891,
            expression: {
              type: 'AssignmentExpression',
              start: 16885,
              end: 16890,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 16885,
                end: 16887,
                name: 'Ib'
              },
              right: {
                type: 'UnaryExpression',
                start: 16888,
                end: 16890,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 16889,
                  end: 16890,
                  raw: '0',
                  value: 0
                },
                prefix: true
              }
            }
          },
          {
            type: 'TryStatement',
            start: 16891,
            end: 16960,
            block: {
              type: 'BlockStatement',
              start: 16894,
              end: 16912,
              body: [
                {
                  type: 'ReturnStatement',
                  start: 16895,
                  end: 16911,
                  argument: {
                    type: 'CallExpression',
                    start: 16902,
                    end: 16911,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 16902,
                      end: 16904,
                      name: 'Gb'
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 16905,
                        end: 16906,
                        name: 'a'
                      },
                      {
                        type: 'Identifier',
                        start: 16907,
                        end: 16908,
                        name: 'b'
                      },
                      {
                        type: 'Identifier',
                        start: 16909,
                        end: 16910,
                        name: 'c'
                      }
                    ]
                  }
                }
              ]
            },
            handler: null,
            finalizer: {
              type: 'BlockStatement',
              start: 16919,
              end: 16960,
              body: [
                {
                  type: 'IfStatement',
                  start: 16920,
                  end: 16959,
                  test: {
                    type: 'SequenceExpression',
                    start: 16923,
                    end: 16949,
                    expressions: [
                      {
                        type: 'AssignmentExpression',
                        start: 16923,
                        end: 16928,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 16923,
                          end: 16925,
                          name: 'Ib'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 16926,
                          end: 16928,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 16927,
                            end: 16928,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      },
                      {
                        type: 'LogicalExpression',
                        start: 16929,
                        end: 16949,
                        operator: '||',
                        left: {
                          type: 'BinaryExpression',
                          start: 16929,
                          end: 16938,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 16929,
                            end: 16933,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 16936,
                            end: 16938,
                            name: 'zb'
                          }
                        },
                        right: {
                          type: 'BinaryExpression',
                          start: 16940,
                          end: 16949,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 16940,
                            end: 16944,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 16947,
                            end: 16949,
                            name: 'Ab'
                          }
                        }
                      }
                    ]
                  },
                  consequent: {
                    type: 'ExpressionStatement',
                    start: 16950,
                    end: 16959,
                    expression: {
                      type: 'SequenceExpression',
                      start: 16950,
                      end: 16959,
                      expressions: [
                        {
                          type: 'CallExpression',
                          start: 16950,
                          end: 16954,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 16950,
                            end: 16952,
                            name: 'Hb'
                          },
                          arguments: []
                        },
                        {
                          type: 'CallExpression',
                          start: 16955,
                          end: 16959,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 16955,
                            end: 16957,
                            name: 'Fb'
                          },
                          arguments: []
                        }
                      ]
                    }
                  },
                  alternate: null
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 16962,
      end: 17514,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 16971, end: 16973, name: 'Kb' },
      params: [
        { type: 'Identifier', start: 16974, end: 16975, name: 'a' },
        { type: 'Identifier', start: 16976, end: 16977, name: 'b' }
      ],
      body: {
        type: 'BlockStatement',
        start: 16978,
        end: 17514,
        body: [
          {
            type: 'VariableDeclaration',
            start: 16979,
            end: 16997,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 16983,
                end: 16996,
                id: {
                  type: 'Identifier',
                  start: 16983,
                  end: 16984,
                  name: 'c'
                },
                init: {
                  type: 'MemberExpression',
                  start: 16985,
                  end: 16996,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 16985,
                    end: 16986,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 16987,
                    end: 16996,
                    name: 'stateNode'
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 16997,
            end: 17021,
            test: {
              type: 'BinaryExpression',
              start: 17000,
              end: 17008,
              operator: '===',
              left: {
                type: 'Literal',
                start: 17000,
                end: 17004,
                raw: 'null',
                value: null
              },
              right: {
                type: 'Identifier',
                start: 17007,
                end: 17008,
                name: 'c'
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 17009,
              end: 17021,
              argument: {
                type: 'Literal',
                start: 17016,
                end: 17020,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'VariableDeclaration',
            start: 17021,
            end: 17033,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 17025,
                end: 17032,
                id: {
                  type: 'Identifier',
                  start: 17025,
                  end: 17026,
                  name: 'd'
                },
                init: {
                  type: 'CallExpression',
                  start: 17027,
                  end: 17032,
                  optional: false,
                  callee: {
                    type: 'Identifier',
                    start: 17027,
                    end: 17029,
                    name: 'Db'
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      start: 17030,
                      end: 17031,
                      name: 'c'
                    }
                  ]
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 17033,
            end: 17057,
            test: {
              type: 'BinaryExpression',
              start: 17036,
              end: 17044,
              operator: '===',
              left: {
                type: 'Literal',
                start: 17036,
                end: 17040,
                raw: 'null',
                value: null
              },
              right: {
                type: 'Identifier',
                start: 17043,
                end: 17044,
                name: 'd'
              }
            },
            consequent: {
              type: 'ReturnStatement',
              start: 17045,
              end: 17057,
              argument: {
                type: 'Literal',
                start: 17052,
                end: 17056,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'ExpressionStatement',
            start: 17057,
            end: 17064,
            expression: {
              type: 'AssignmentExpression',
              start: 17057,
              end: 17063,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 17057,
                end: 17058,
                name: 'c'
              },
              right: {
                type: 'MemberExpression',
                start: 17059,
                end: 17063,
                computed: true,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 17059,
                  end: 17060,
                  name: 'd'
                },
                property: {
                  type: 'Identifier',
                  start: 17061,
                  end: 17062,
                  name: 'b'
                }
              }
            }
          },
          {
            type: 'LabeledStatement',
            start: 17064,
            end: 17428,
            label: { type: 'Identifier', start: 17064, end: 17065, name: 'a' },
            body: {
              type: 'SwitchStatement',
              start: 17066,
              end: 17428,
              discriminant: {
                type: 'Identifier',
                start: 17073,
                end: 17074,
                name: 'b'
              },
              cases: [
                {
                  type: 'SwitchCase',
                  start: 17076,
                  end: 17091,
                  test: {
                    type: 'Literal',
                    start: 17081,
                    end: 17090,
                    value: 'onClick',
                    raw: '"onClick"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17091,
                  end: 17113,
                  test: {
                    type: 'Literal',
                    start: 17096,
                    end: 17112,
                    value: 'onClickCapture',
                    raw: '"onClickCapture"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17113,
                  end: 17134,
                  test: {
                    type: 'Literal',
                    start: 17118,
                    end: 17133,
                    value: 'onDoubleClick',
                    raw: '"onDoubleClick"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17134,
                  end: 17162,
                  test: {
                    type: 'Literal',
                    start: 17139,
                    end: 17161,
                    value: 'onDoubleClickCapture',
                    raw: '"onDoubleClickCapture"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17162,
                  end: 17181,
                  test: {
                    type: 'Literal',
                    start: 17167,
                    end: 17180,
                    value: 'onMouseDown',
                    raw: '"onMouseDown"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17181,
                  end: 17207,
                  test: {
                    type: 'Literal',
                    start: 17186,
                    end: 17206,
                    value: 'onMouseDownCapture',
                    raw: '"onMouseDownCapture"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17207,
                  end: 17226,
                  test: {
                    type: 'Literal',
                    start: 17212,
                    end: 17225,
                    value: 'onMouseMove',
                    raw: '"onMouseMove"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17226,
                  end: 17252,
                  test: {
                    type: 'Literal',
                    start: 17231,
                    end: 17251,
                    value: 'onMouseMoveCapture',
                    raw: '"onMouseMoveCapture"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17252,
                  end: 17269,
                  test: {
                    type: 'Literal',
                    start: 17257,
                    end: 17268,
                    value: 'onMouseUp',
                    raw: '"onMouseUp"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17269,
                  end: 17293,
                  test: {
                    type: 'Literal',
                    start: 17274,
                    end: 17292,
                    value: 'onMouseUpCapture',
                    raw: '"onMouseUpCapture"'
                  },
                  consequent: []
                },
                {
                  type: 'SwitchCase',
                  start: 17293,
                  end: 17415,
                  test: {
                    type: 'Literal',
                    start: 17298,
                    end: 17312,
                    value: 'onMouseEnter',
                    raw: '"onMouseEnter"'
                  },
                  consequent: [
                    {
                      type: 'ExpressionStatement',
                      start: 17313,
                      end: 17402,
                      expression: {
                        type: 'LogicalExpression',
                        start: 17313,
                        end: 17401,
                        operator: '||',
                        left: {
                          type: 'AssignmentExpression',
                          start: 17314,
                          end: 17327,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 17314,
                            end: 17315,
                            name: 'd'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 17316,
                            end: 17327,
                            operator: '!',
                            argument: {
                              type: 'MemberExpression',
                              start: 17317,
                              end: 17327,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 17317,
                                end: 17318,
                                name: 'd'
                              },
                              property: {
                                type: 'Identifier',
                                start: 17319,
                                end: 17327,
                                name: 'disabled'
                              }
                            },
                            prefix: true
                          }
                        },
                        right: {
                          type: 'SequenceExpression',
                          start: 17331,
                          end: 17400,
                          expressions: [
                            {
                              type: 'AssignmentExpression',
                              start: 17331,
                              end: 17339,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 17331,
                                end: 17332,
                                name: 'a'
                              },
                              right: {
                                type: 'MemberExpression',
                                start: 17333,
                                end: 17339,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 17333,
                                  end: 17334,
                                  name: 'a'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 17335,
                                  end: 17339,
                                  name: 'type'
                                }
                              }
                            },
                            {
                              type: 'AssignmentExpression',
                              start: 17340,
                              end: 17400,
                              operator: '=',
                              left: {
                                type: 'Identifier',
                                start: 17340,
                                end: 17341,
                                name: 'd'
                              },
                              right: {
                                type: 'UnaryExpression',
                                start: 17342,
                                end: 17400,
                                operator: '!',
                                argument: {
                                  type: 'LogicalExpression',
                                  start: 17344,
                                  end: 17399,
                                  operator: '||',
                                  left: {
                                    type: 'LogicalExpression',
                                    start: 17344,
                                    end: 17383,
                                    operator: '||',
                                    left: {
                                      type: 'LogicalExpression',
                                      start: 17344,
                                      end: 17369,
                                      operator: '||',
                                      left: {
                                        type: 'BinaryExpression',
                                        start: 17344,
                                        end: 17356,
                                        operator: '===',
                                        left: {
                                          type: 'Literal',
                                          start: 17344,
                                          end: 17352,
                                          value: 'button',
                                          raw: '"button"'
                                        },
                                        right: {
                                          type: 'Identifier',
                                          start: 17355,
                                          end: 17356,
                                          name: 'a'
                                        }
                                      },
                                      right: {
                                        type: 'BinaryExpression',
                                        start: 17358,
                                        end: 17369,
                                        operator: '===',
                                        left: {
                                          type: 'Literal',
                                          start: 17358,
                                          end: 17365,
                                          value: 'input',
                                          raw: '"input"'
                                        },
                                        right: {
                                          type: 'Identifier',
                                          start: 17368,
                                          end: 17369,
                                          name: 'a'
                                        }
                                      }
                                    },
                                    right: {
                                      type: 'BinaryExpression',
                                      start: 17371,
                                      end: 17383,
                                      operator: '===',
                                      left: {
                                        type: 'Literal',
                                        start: 17371,
                                        end: 17379,
                                        value: 'select',
                                        raw: '"select"'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 17382,
                                        end: 17383,
                                        name: 'a'
                                      }
                                    }
                                  },
                                  right: {
                                    type: 'BinaryExpression',
                                    start: 17385,
                                    end: 17399,
                                    operator: '===',
                                    left: {
                                      type: 'Literal',
                                      start: 17385,
                                      end: 17395,
                                      value: 'textarea',
                                      raw: '"textarea"'
                                    },
                                    right: {
                                      type: 'Identifier',
                                      start: 17398,
                                      end: 17399,
                                      name: 'a'
                                    }
                                  }
                                },
                                prefix: true
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      type: 'ExpressionStatement',
                      start: 17402,
                      end: 17407,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 17402,
                        end: 17406,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 17402,
                          end: 17403,
                          name: 'a'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 17404,
                          end: 17406,
                          operator: '!',
                          argument: {
                            type: 'Identifier',
                            start: 17405,
                            end: 17406,
                            name: 'd'
                          },
                          prefix: true
                        }
                      }
                    },
                    {
                      type: 'BreakStatement',
                      start: 17407,
                      end: 17415,
                      label: {
                        type: 'Identifier',
                        start: 17413,
                        end: 17414,
                        name: 'a'
                      }
                    }
                  ]
                },
                {
                  type: 'SwitchCase',
                  start: 17415,
                  end: 17427,
                  test: null,
                  consequent: [
                    {
                      type: 'ExpressionStatement',
                      start: 17423,
                      end: 17427,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 17423,
                        end: 17427,
                        operator: '=',
                        left: {
                          type: 'Identifier',
                          start: 17423,
                          end: 17424,
                          name: 'a'
                        },
                        right: {
                          type: 'UnaryExpression',
                          start: 17425,
                          end: 17427,
                          operator: '!',
                          argument: {
                            type: 'Literal',
                            start: 17426,
                            end: 17427,
                            raw: '1',
                            value: 1
                          },
                          prefix: true
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            type: 'IfStatement',
            start: 17428,
            end: 17445,
            test: { type: 'Identifier', start: 17431, end: 17432, name: 'a' },
            consequent: {
              type: 'ReturnStatement',
              start: 17433,
              end: 17445,
              argument: {
                type: 'Literal',
                start: 17440,
                end: 17444,
                raw: 'null',
                value: null
              }
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 17445,
            end: 17505,
            test: {
              type: 'LogicalExpression',
              start: 17448,
              end: 17473,
              operator: '&&',
              left: {
                type: 'Identifier',
                start: 17448,
                end: 17449,
                name: 'c'
              },
              right: {
                type: 'BinaryExpression',
                start: 17451,
                end: 17473,
                operator: '!==',
                left: {
                  type: 'Literal',
                  start: 17451,
                  end: 17461,
                  value: 'function',
                  raw: '"function"'
                },
                right: {
                  type: 'UnaryExpression',
                  start: 17465,
                  end: 17473,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 17472,
                    end: 17473,
                    name: 'c'
                  },
                  prefix: true
                }
              }
            },
            consequent: {
              type: 'ThrowStatement',
              start: 17474,
              end: 17505,
              argument: {
                type: 'CallExpression',
                start: 17480,
                end: 17504,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 17480,
                  end: 17485,
                  name: 'Error'
                },
                arguments: [
                  {
                    type: 'CallExpression',
                    start: 17486,
                    end: 17503,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 17486,
                      end: 17487,
                      name: 'p'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 17488,
                        end: 17491,
                        raw: '231',
                        value: 231
                      },
                      {
                        type: 'Identifier',
                        start: 17492,
                        end: 17493,
                        name: 'b'
                      },
                      {
                        type: 'UnaryExpression',
                        start: 17494,
                        end: 17502,
                        operator: 'typeof',
                        argument: {
                          type: 'Identifier',
                          start: 17501,
                          end: 17502,
                          name: 'c'
                        },
                        prefix: true
                      }
                    ]
                  }
                ]
              }
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 17505,
            end: 17513,
            argument: { type: 'Identifier', start: 17512, end: 17513, name: 'c' }
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 17514,
      end: 17524,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 17518,
          end: 17523,
          id: { type: 'Identifier', start: 17518, end: 17520, name: 'Lb' },
          init: {
            type: 'UnaryExpression',
            start: 17521,
            end: 17523,
            operator: '!',
            argument: {
              type: 'Literal',
              start: 17522,
              end: 17523,
              raw: '1',
              value: 1
            },
            prefix: true
          }
        }
      ]
    },
    {
      type: 'IfStatement',
      start: 17524,
      end: 17698,
      test: { type: 'Identifier', start: 17527, end: 17529, name: 'ia' },
      consequent: {
        type: 'TryStatement',
        start: 17530,
        end: 17698,
        block: {
          type: 'BlockStatement',
          start: 17533,
          end: 17683,
          body: [
            {
              type: 'VariableDeclaration',
              start: 17534,
              end: 17544,
              kind: 'var',
              declarations: [
                {
                  type: 'VariableDeclarator',
                  start: 17538,
                  end: 17543,
                  id: {
                    type: 'Identifier',
                    start: 17538,
                    end: 17540,
                    name: 'Mb'
                  },
                  init: {
                    type: 'ObjectExpression',
                    start: 17541,
                    end: 17543,
                    properties: []
                  }
                }
              ]
            },
            {
              type: 'ExpressionStatement',
              start: 17544,
              end: 17604,
              expression: {
                type: 'CallExpression',
                start: 17544,
                end: 17603,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 17544,
                  end: 17565,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 17544,
                    end: 17550,
                    name: 'Object'
                  },
                  property: {
                    type: 'Identifier',
                    start: 17551,
                    end: 17565,
                    name: 'defineProperty'
                  }
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 17566,
                    end: 17568,
                    name: 'Mb'
                  },
                  {
                    type: 'Literal',
                    start: 17569,
                    end: 17578,
                    value: 'passive',
                    raw: '"passive"'
                  },
                  {
                    type: 'ObjectExpression',
                    start: 17579,
                    end: 17602,
                    properties: [
                      {
                        type: 'Property',
                        start: 17580,
                        end: 17601,
                        method: false,
                        shorthand: false,
                        computed: false,
                        key: {
                          type: 'Identifier',
                          start: 17580,
                          end: 17583,
                          name: 'get'
                        },
                        value: {
                          type: 'FunctionExpression',
                          start: 17584,
                          end: 17601,
                          async: false,
                          generator: false,
                          id: null,
                          params: [],
                          body: {
                            type: 'BlockStatement',
                            start: 17594,
                            end: 17601,
                            body: [
                              {
                                type: 'ExpressionStatement',
                                start: 17595,
                                end: 17600,
                                expression: {
                                  type: 'AssignmentExpression',
                                  start: 17595,
                                  end: 17600,
                                  operator: '=',
                                  left: {
                                    type: 'Identifier',
                                    start: 17595,
                                    end: 17597,
                                    name: 'Lb'
                                  },
                                  right: {
                                    type: 'UnaryExpression',
                                    start: 17598,
                                    end: 17600,
                                    operator: '!',
                                    argument: {
                                      type: 'Literal',
                                      start: 17599,
                                      end: 17600,
                                      raw: '0',
                                      value: 0
                                    },
                                    prefix: true
                                  }
                                }
                              }
                            ]
                          },
                          expression: false
                        },
                        kind: 'init'
                      }
                    ]
                  }
                ]
              }
            },
            {
              type: 'ExpressionStatement',
              start: 17604,
              end: 17642,
              expression: {
                type: 'CallExpression',
                start: 17604,
                end: 17641,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 17604,
                  end: 17627,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 17604,
                    end: 17610,
                    name: 'window'
                  },
                  property: {
                    type: 'Identifier',
                    start: 17611,
                    end: 17627,
                    name: 'addEventListener'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 17628,
                    end: 17634,
                    value: 'test',
                    raw: '"test"'
                  },
                  {
                    type: 'Identifier',
                    start: 17635,
                    end: 17637,
                    name: 'Mb'
                  },
                  {
                    type: 'Identifier',
                    start: 17638,
                    end: 17640,
                    name: 'Mb'
                  }
                ]
              }
            },
            {
              type: 'ExpressionStatement',
              start: 17642,
              end: 17682,
              expression: {
                type: 'CallExpression',
                start: 17642,
                end: 17682,
                optional: false,
                callee: {
                  type: 'MemberExpression',
                  start: 17642,
                  end: 17668,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 17642,
                    end: 17648,
                    name: 'window'
                  },
                  property: {
                    type: 'Identifier',
                    start: 17649,
                    end: 17668,
                    name: 'removeEventListener'
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 17669,
                    end: 17675,
                    value: 'test',
                    raw: '"test"'
                  },
                  {
                    type: 'Identifier',
                    start: 17676,
                    end: 17678,
                    name: 'Mb'
                  },
                  {
                    type: 'Identifier',
                    start: 17679,
                    end: 17681,
                    name: 'Mb'
                  }
                ]
              }
            }
          ]
        },
        handler: {
          type: 'CatchClause',
          start: 17683,
          end: 17698,
          param: { type: 'Identifier', start: 17689, end: 17690, name: 'a' },
          body: {
            type: 'BlockStatement',
            start: 17691,
            end: 17698,
            body: [
              {
                type: 'ExpressionStatement',
                start: 17692,
                end: 17697,
                expression: {
                  type: 'AssignmentExpression',
                  start: 17692,
                  end: 17697,
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    start: 17692,
                    end: 17694,
                    name: 'Lb'
                  },
                  right: {
                    type: 'UnaryExpression',
                    start: 17695,
                    end: 17697,
                    operator: '!',
                    argument: {
                      type: 'Literal',
                      start: 17696,
                      end: 17697,
                      raw: '1',
                      value: 1
                    },
                    prefix: true
                  }
                }
              }
            ]
          }
        },
        finalizer: null
      },
      alternate: null
    },
    {
      type: 'FunctionDeclaration',
      start: 17698,
      end: 17818,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 17707, end: 17709, name: 'Nb' },
      params: [
        { type: 'Identifier', start: 17710, end: 17711, name: 'a' },
        { type: 'Identifier', start: 17712, end: 17713, name: 'b' },
        { type: 'Identifier', start: 17714, end: 17715, name: 'c' },
        { type: 'Identifier', start: 17716, end: 17717, name: 'd' },
        { type: 'Identifier', start: 17718, end: 17719, name: 'e' },
        { type: 'Identifier', start: 17720, end: 17721, name: 'f' },
        { type: 'Identifier', start: 17722, end: 17723, name: 'g' },
        { type: 'Identifier', start: 17724, end: 17725, name: 'h' },
        { type: 'Identifier', start: 17726, end: 17727, name: 'k' }
      ],
      body: {
        type: 'BlockStatement',
        start: 17728,
        end: 17818,
        body: [
          {
            type: 'VariableDeclaration',
            start: 17729,
            end: 17775,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 17733,
                end: 17774,
                id: {
                  type: 'Identifier',
                  start: 17733,
                  end: 17734,
                  name: 'l'
                },
                init: {
                  type: 'CallExpression',
                  start: 17735,
                  end: 17774,
                  optional: false,
                  callee: {
                    type: 'MemberExpression',
                    start: 17735,
                    end: 17761,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'MemberExpression',
                      start: 17735,
                      end: 17756,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'MemberExpression',
                        start: 17735,
                        end: 17750,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 17735,
                          end: 17740,
                          name: 'Array'
                        },
                        property: {
                          type: 'Identifier',
                          start: 17741,
                          end: 17750,
                          name: 'prototype'
                        }
                      },
                      property: {
                        type: 'Identifier',
                        start: 17751,
                        end: 17756,
                        name: 'slice'
                      }
                    },
                    property: {
                      type: 'Identifier',
                      start: 17757,
                      end: 17761,
                      name: 'call'
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      start: 17762,
                      end: 17771,
                      name: 'arguments'
                    },
                    {
                      type: 'Literal',
                      start: 17772,
                      end: 17773,
                      raw: '3',
                      value: 3
                    }
                  ]
                }
              }
            ]
          },
          {
            type: 'TryStatement',
            start: 17775,
            end: 17817,
            block: {
              type: 'BlockStatement',
              start: 17778,
              end: 17792,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 17779,
                  end: 17791,
                  expression: {
                    type: 'CallExpression',
                    start: 17779,
                    end: 17791,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 17779,
                      end: 17786,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 17779,
                        end: 17780,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 17781,
                        end: 17786,
                        name: 'apply'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 17787,
                        end: 17788,
                        name: 'c'
                      },
                      {
                        type: 'Identifier',
                        start: 17789,
                        end: 17790,
                        name: 'l'
                      }
                    ]
                  }
                }
              ]
            },
            handler: {
              type: 'CatchClause',
              start: 17792,
              end: 17817,
              param: {
                type: 'Identifier',
                start: 17798,
                end: 17799,
                name: 'm'
              },
              body: {
                type: 'BlockStatement',
                start: 17800,
                end: 17817,
                body: [
                  {
                    type: 'ExpressionStatement',
                    start: 17801,
                    end: 17816,
                    expression: {
                      type: 'CallExpression',
                      start: 17801,
                      end: 17816,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 17801,
                        end: 17813,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'ThisExpression',
                          start: 17801,
                          end: 17805
                        },
                        property: {
                          type: 'Identifier',
                          start: 17806,
                          end: 17813,
                          name: 'onError'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 17814,
                          end: 17815,
                          name: 'm'
                        }
                      ]
                    }
                  }
                ]
              }
            },
            finalizer: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'VariableDeclaration',
      start: 17818,
      end: 17887,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 17822,
          end: 17827,
          id: { type: 'Identifier', start: 17822, end: 17824, name: 'Ob' },
          init: {
            type: 'UnaryExpression',
            start: 17825,
            end: 17827,
            operator: '!',
            argument: {
              type: 'Literal',
              start: 17826,
              end: 17827,
              raw: '1',
              value: 1
            },
            prefix: true
          }
        },
        {
          type: 'VariableDeclarator',
          start: 17828,
          end: 17835,
          id: { type: 'Identifier', start: 17828, end: 17830, name: 'Pb' },
          init: {
            type: 'Literal',
            start: 17831,
            end: 17835,
            raw: 'null',
            value: null
          }
        },
        {
          type: 'VariableDeclarator',
          start: 17836,
          end: 17841,
          id: { type: 'Identifier', start: 17836, end: 17838, name: 'Qb' },
          init: {
            type: 'UnaryExpression',
            start: 17839,
            end: 17841,
            operator: '!',
            argument: {
              type: 'Literal',
              start: 17840,
              end: 17841,
              raw: '1',
              value: 1
            },
            prefix: true
          }
        },
        {
          type: 'VariableDeclarator',
          start: 17842,
          end: 17849,
          id: { type: 'Identifier', start: 17842, end: 17844, name: 'Rb' },
          init: {
            type: 'Literal',
            start: 17845,
            end: 17849,
            raw: 'null',
            value: null
          }
        },
        {
          type: 'VariableDeclarator',
          start: 17850,
          end: 17886,
          id: { type: 'Identifier', start: 17850, end: 17852, name: 'Sb' },
          init: {
            type: 'ObjectExpression',
            start: 17853,
            end: 17886,
            properties: [
              {
                type: 'Property',
                start: 17854,
                end: 17885,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 17854,
                  end: 17861,
                  name: 'onError'
                },
                value: {
                  type: 'FunctionExpression',
                  start: 17862,
                  end: 17885,
                  async: false,
                  generator: false,
                  id: null,
                  params: [
                    {
                      type: 'Identifier',
                      start: 17871,
                      end: 17872,
                      name: 'a'
                    }
                  ],
                  body: {
                    type: 'BlockStatement',
                    start: 17873,
                    end: 17885,
                    body: [
                      {
                        type: 'ExpressionStatement',
                        start: 17874,
                        end: 17880,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 17874,
                          end: 17879,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 17874,
                            end: 17876,
                            name: 'Ob'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 17877,
                            end: 17879,
                            operator: '!',
                            argument: {
                              type: 'Literal',
                              start: 17878,
                              end: 17879,
                              raw: '0',
                              value: 0
                            },
                            prefix: true
                          }
                        }
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 17880,
                        end: 17884,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 17880,
                          end: 17884,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 17880,
                            end: 17882,
                            name: 'Pb'
                          },
                          right: {
                            type: 'Identifier',
                            start: 17883,
                            end: 17884,
                            name: 'a'
                          }
                        }
                      }
                    ]
                  },
                  expression: false
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'FunctionDeclaration',
      start: 17887,
      end: 17955,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 17896, end: 17898, name: 'Tb' },
      params: [
        { type: 'Identifier', start: 17899, end: 17900, name: 'a' },
        { type: 'Identifier', start: 17901, end: 17902, name: 'b' },
        { type: 'Identifier', start: 17903, end: 17904, name: 'c' },
        { type: 'Identifier', start: 17905, end: 17906, name: 'd' },
        { type: 'Identifier', start: 17907, end: 17908, name: 'e' },
        { type: 'Identifier', start: 17909, end: 17910, name: 'f' },
        { type: 'Identifier', start: 17911, end: 17912, name: 'g' },
        { type: 'Identifier', start: 17913, end: 17914, name: 'h' },
        { type: 'Identifier', start: 17915, end: 17916, name: 'k' }
      ],
      body: {
        type: 'BlockStatement',
        start: 17917,
        end: 17955,
        body: [
          {
            type: 'ExpressionStatement',
            start: 17918,
            end: 17924,
            expression: {
              type: 'AssignmentExpression',
              start: 17918,
              end: 17923,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 17918,
                end: 17920,
                name: 'Ob'
              },
              right: {
                type: 'UnaryExpression',
                start: 17921,
                end: 17923,
                operator: '!',
                argument: {
                  type: 'Literal',
                  start: 17922,
                  end: 17923,
                  raw: '1',
                  value: 1
                },
                prefix: true
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 17924,
            end: 17932,
            expression: {
              type: 'AssignmentExpression',
              start: 17924,
              end: 17931,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 17924,
                end: 17926,
                name: 'Pb'
              },
              right: {
                type: 'Literal',
                start: 17927,
                end: 17931,
                raw: 'null',
                value: null
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 17932,
            end: 17954,
            expression: {
              type: 'CallExpression',
              start: 17932,
              end: 17954,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 17932,
                end: 17940,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 17932,
                  end: 17934,
                  name: 'Nb'
                },
                property: {
                  type: 'Identifier',
                  start: 17935,
                  end: 17940,
                  name: 'apply'
                }
              },
              arguments: [
                {
                  type: 'Identifier',
                  start: 17941,
                  end: 17943,
                  name: 'Sb'
                },
                {
                  type: 'Identifier',
                  start: 17944,
                  end: 17953,
                  name: 'arguments'
                }
              ]
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 17956,
      end: 18092,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 17965, end: 17967, name: 'Ub' },
      params: [
        { type: 'Identifier', start: 17968, end: 17969, name: 'a' },
        { type: 'Identifier', start: 17970, end: 17971, name: 'b' },
        { type: 'Identifier', start: 17972, end: 17973, name: 'c' },
        { type: 'Identifier', start: 17974, end: 17975, name: 'd' },
        { type: 'Identifier', start: 17976, end: 17977, name: 'e' },
        { type: 'Identifier', start: 17978, end: 17979, name: 'f' },
        { type: 'Identifier', start: 17980, end: 17981, name: 'g' },
        { type: 'Identifier', start: 17982, end: 17983, name: 'h' },
        { type: 'Identifier', start: 17984, end: 17985, name: 'k' }
      ],
      body: {
        type: 'BlockStatement',
        start: 17986,
        end: 18092,
        body: [
          {
            type: 'ExpressionStatement',
            start: 17987,
            end: 18012,
            expression: {
              type: 'CallExpression',
              start: 17987,
              end: 18011,
              optional: false,
              callee: {
                type: 'MemberExpression',
                start: 17987,
                end: 17995,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 17987,
                  end: 17989,
                  name: 'Tb'
                },
                property: {
                  type: 'Identifier',
                  start: 17990,
                  end: 17995,
                  name: 'apply'
                }
              },
              arguments: [
                { type: 'ThisExpression', start: 17996, end: 18000 },
                {
                  type: 'Identifier',
                  start: 18001,
                  end: 18010,
                  name: 'arguments'
                }
              ]
            }
          },
          {
            type: 'IfStatement',
            start: 18012,
            end: 18091,
            test: {
              type: 'Identifier',
              start: 18015,
              end: 18017,
              name: 'Ob'
            },
            consequent: {
              type: 'BlockStatement',
              start: 18018,
              end: 18091,
              body: [
                {
                  type: 'IfStatement',
                  start: 18019,
                  end: 18074,
                  test: {
                    type: 'Identifier',
                    start: 18022,
                    end: 18024,
                    name: 'Ob'
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 18025,
                    end: 18049,
                    body: [
                      {
                        type: 'VariableDeclaration',
                        start: 18026,
                        end: 18035,
                        kind: 'var',
                        declarations: [
                          {
                            type: 'VariableDeclarator',
                            start: 18030,
                            end: 18034,
                            id: {
                              type: 'Identifier',
                              start: 18030,
                              end: 18031,
                              name: 'l'
                            },
                            init: {
                              type: 'Identifier',
                              start: 18032,
                              end: 18034,
                              name: 'Pb'
                            }
                          }
                        ]
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 18035,
                        end: 18041,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 18035,
                          end: 18040,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18035,
                            end: 18037,
                            name: 'Ob'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 18038,
                            end: 18040,
                            operator: '!',
                            argument: {
                              type: 'Literal',
                              start: 18039,
                              end: 18040,
                              raw: '1',
                              value: 1
                            },
                            prefix: true
                          }
                        }
                      },
                      {
                        type: 'ExpressionStatement',
                        start: 18041,
                        end: 18048,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 18041,
                          end: 18048,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18041,
                            end: 18043,
                            name: 'Pb'
                          },
                          right: {
                            type: 'Literal',
                            start: 18044,
                            end: 18048,
                            raw: 'null',
                            value: null
                          }
                        }
                      }
                    ]
                  },
                  alternate: {
                    type: 'ThrowStatement',
                    start: 18054,
                    end: 18074,
                    argument: {
                      type: 'CallExpression',
                      start: 18060,
                      end: 18073,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 18060,
                        end: 18065,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 18066,
                          end: 18072,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 18066,
                            end: 18067,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 18068,
                              end: 18071,
                              raw: '198',
                              value: 198
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  start: 18074,
                  end: 18090,
                  expression: {
                    type: 'LogicalExpression',
                    start: 18074,
                    end: 18090,
                    operator: '||',
                    left: {
                      type: 'Identifier',
                      start: 18074,
                      end: 18076,
                      name: 'Qb'
                    },
                    right: {
                      type: 'SequenceExpression',
                      start: 18079,
                      end: 18089,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 18079,
                          end: 18084,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18079,
                            end: 18081,
                            name: 'Qb'
                          },
                          right: {
                            type: 'UnaryExpression',
                            start: 18082,
                            end: 18084,
                            operator: '!',
                            argument: {
                              type: 'Literal',
                              start: 18083,
                              end: 18084,
                              raw: '0',
                              value: 0
                            },
                            prefix: true
                          }
                        },
                        {
                          type: 'AssignmentExpression',
                          start: 18085,
                          end: 18089,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18085,
                            end: 18087,
                            name: 'Rb'
                          },
                          right: {
                            type: 'Identifier',
                            start: 18088,
                            end: 18089,
                            name: 'l'
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 18092,
      end: 18253,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 18101, end: 18103, name: 'Vb' },
      params: [ { type: 'Identifier', start: 18104, end: 18105, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 18106,
        end: 18253,
        body: [
          {
            type: 'VariableDeclaration',
            start: 18107,
            end: 18119,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 18111,
                end: 18114,
                id: {
                  type: 'Identifier',
                  start: 18111,
                  end: 18112,
                  name: 'b'
                },
                init: {
                  type: 'Identifier',
                  start: 18113,
                  end: 18114,
                  name: 'a'
                }
              },
              {
                type: 'VariableDeclarator',
                start: 18115,
                end: 18118,
                id: {
                  type: 'Identifier',
                  start: 18115,
                  end: 18116,
                  name: 'c'
                },
                init: {
                  type: 'Identifier',
                  start: 18117,
                  end: 18118,
                  name: 'a'
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 18119,
            end: 18229,
            test: {
              type: 'MemberExpression',
              start: 18122,
              end: 18133,
              computed: false,
              optional: false,
              object: {
                type: 'Identifier',
                start: 18122,
                end: 18123,
                name: 'a'
              },
              property: {
                type: 'Identifier',
                start: 18124,
                end: 18133,
                name: 'alternate'
              }
            },
            consequent: {
              type: 'ForStatement',
              start: 18134,
              end: 18160,
              init: null,
              test: {
                type: 'MemberExpression',
                start: 18139,
                end: 18147,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 18139,
                  end: 18140,
                  name: 'b'
                },
                property: {
                  type: 'Identifier',
                  start: 18141,
                  end: 18147,
                  name: 'return'
                }
              },
              update: null,
              body: {
                type: 'ExpressionStatement',
                start: 18149,
                end: 18160,
                expression: {
                  type: 'AssignmentExpression',
                  start: 18149,
                  end: 18159,
                  operator: '=',
                  left: {
                    type: 'Identifier',
                    start: 18149,
                    end: 18150,
                    name: 'b'
                  },
                  right: {
                    type: 'MemberExpression',
                    start: 18151,
                    end: 18159,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 18151,
                      end: 18152,
                      name: 'b'
                    },
                    property: {
                      type: 'Identifier',
                      start: 18153,
                      end: 18159,
                      name: 'return'
                    }
                  }
                }
              }
            },
            alternate: {
              type: 'BlockStatement',
              start: 18164,
              end: 18229,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 18165,
                  end: 18169,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 18165,
                    end: 18168,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 18165,
                      end: 18166,
                      name: 'a'
                    },
                    right: {
                      type: 'Identifier',
                      start: 18167,
                      end: 18168,
                      name: 'b'
                    }
                  }
                },
                {
                  type: 'DoWhileStatement',
                  start: 18169,
                  end: 18228,
                  body: {
                    type: 'ExpressionStatement',
                    start: 18172,
                    end: 18220,
                    expression: {
                      type: 'SequenceExpression',
                      start: 18172,
                      end: 18219,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 18172,
                          end: 18175,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18172,
                            end: 18173,
                            name: 'b'
                          },
                          right: {
                            type: 'Identifier',
                            start: 18174,
                            end: 18175,
                            name: 'a'
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 18176,
                          end: 18208,
                          operator: '&&',
                          left: {
                            type: 'BinaryExpression',
                            start: 18176,
                            end: 18194,
                            operator: '!==',
                            left: {
                              type: 'Literal',
                              start: 18176,
                              end: 18177,
                              raw: '0',
                              value: 0
                            },
                            right: {
                              type: 'BinaryExpression',
                              start: 18181,
                              end: 18193,
                              operator: '&',
                              left: {
                                type: 'MemberExpression',
                                start: 18181,
                                end: 18188,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 18181,
                                  end: 18182,
                                  name: 'b'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 18183,
                                  end: 18188,
                                  name: 'flags'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 18189,
                                end: 18193,
                                raw: '4098',
                                value: 4098
                              }
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 18197,
                            end: 18207,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 18197,
                              end: 18198,
                              name: 'c'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 18199,
                              end: 18207,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 18199,
                                end: 18200,
                                name: 'b'
                              },
                              property: {
                                type: 'Identifier',
                                start: 18201,
                                end: 18207,
                                name: 'return'
                              }
                            }
                          }
                        },
                        {
                          type: 'AssignmentExpression',
                          start: 18209,
                          end: 18219,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18209,
                            end: 18210,
                            name: 'a'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 18211,
                            end: 18219,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 18211,
                              end: 18212,
                              name: 'b'
                            },
                            property: {
                              type: 'Identifier',
                              start: 18213,
                              end: 18219,
                              name: 'return'
                            }
                          }
                        }
                      ]
                    }
                  },
                  test: {
                    type: 'Identifier',
                    start: 18226,
                    end: 18227,
                    name: 'a'
                  }
                }
              ]
            }
          },
          {
            type: 'ReturnStatement',
            start: 18229,
            end: 18252,
            argument: {
              type: 'ConditionalExpression',
              start: 18236,
              end: 18252,
              test: {
                type: 'BinaryExpression',
                start: 18236,
                end: 18245,
                operator: '===',
                left: {
                  type: 'Literal',
                  start: 18236,
                  end: 18237,
                  raw: '3',
                  value: 3
                },
                right: {
                  type: 'MemberExpression',
                  start: 18240,
                  end: 18245,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 18240,
                    end: 18241,
                    name: 'b'
                  },
                  property: {
                    type: 'Identifier',
                    start: 18242,
                    end: 18245,
                    name: 'tag'
                  }
                }
              },
              consequent: {
                type: 'Identifier',
                start: 18246,
                end: 18247,
                name: 'c'
              },
              alternate: {
                type: 'Literal',
                start: 18248,
                end: 18252,
                raw: 'null',
                value: null
              }
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 18253,
      end: 18405,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 18262, end: 18264, name: 'Wb' },
      params: [ { type: 'Identifier', start: 18265, end: 18266, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 18267,
        end: 18405,
        body: [
          {
            type: 'IfStatement',
            start: 18268,
            end: 18393,
            test: {
              type: 'BinaryExpression',
              start: 18271,
              end: 18281,
              operator: '===',
              left: {
                type: 'Literal',
                start: 18271,
                end: 18273,
                raw: '13',
                value: 13
              },
              right: {
                type: 'MemberExpression',
                start: 18276,
                end: 18281,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 18276,
                  end: 18277,
                  name: 'a'
                },
                property: {
                  type: 'Identifier',
                  start: 18278,
                  end: 18281,
                  name: 'tag'
                }
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 18282,
              end: 18393,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 18283,
                  end: 18305,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 18287,
                      end: 18304,
                      id: {
                        type: 'Identifier',
                        start: 18287,
                        end: 18288,
                        name: 'b'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 18289,
                        end: 18304,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 18289,
                          end: 18290,
                          name: 'a'
                        },
                        property: {
                          type: 'Identifier',
                          start: 18291,
                          end: 18304,
                          name: 'memoizedState'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'ExpressionStatement',
                  start: 18305,
                  end: 18361,
                  expression: {
                    type: 'LogicalExpression',
                    start: 18305,
                    end: 18360,
                    operator: '&&',
                    left: {
                      type: 'BinaryExpression',
                      start: 18305,
                      end: 18313,
                      operator: '===',
                      left: {
                        type: 'Literal',
                        start: 18305,
                        end: 18309,
                        raw: 'null',
                        value: null
                      },
                      right: {
                        type: 'Identifier',
                        start: 18312,
                        end: 18313,
                        name: 'b'
                      }
                    },
                    right: {
                      type: 'SequenceExpression',
                      start: 18316,
                      end: 18359,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 18316,
                          end: 18329,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18316,
                            end: 18317,
                            name: 'a'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 18318,
                            end: 18329,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 18318,
                              end: 18319,
                              name: 'a'
                            },
                            property: {
                              type: 'Identifier',
                              start: 18320,
                              end: 18329,
                              name: 'alternate'
                            }
                          }
                        },
                        {
                          type: 'LogicalExpression',
                          start: 18330,
                          end: 18359,
                          operator: '&&',
                          left: {
                            type: 'BinaryExpression',
                            start: 18330,
                            end: 18338,
                            operator: '!==',
                            left: {
                              type: 'Literal',
                              start: 18330,
                              end: 18334,
                              raw: 'null',
                              value: null
                            },
                            right: {
                              type: 'Identifier',
                              start: 18337,
                              end: 18338,
                              name: 'a'
                            }
                          },
                          right: {
                            type: 'AssignmentExpression',
                            start: 18341,
                            end: 18358,
                            operator: '=',
                            left: {
                              type: 'Identifier',
                              start: 18341,
                              end: 18342,
                              name: 'b'
                            },
                            right: {
                              type: 'MemberExpression',
                              start: 18343,
                              end: 18358,
                              computed: false,
                              optional: false,
                              object: {
                                type: 'Identifier',
                                start: 18343,
                                end: 18344,
                                name: 'a'
                              },
                              property: {
                                type: 'Identifier',
                                start: 18345,
                                end: 18358,
                                name: 'memoizedState'
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  type: 'IfStatement',
                  start: 18361,
                  end: 18392,
                  test: {
                    type: 'BinaryExpression',
                    start: 18364,
                    end: 18372,
                    operator: '!==',
                    left: {
                      type: 'Literal',
                      start: 18364,
                      end: 18368,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 18371,
                      end: 18372,
                      name: 'b'
                    }
                  },
                  consequent: {
                    type: 'ReturnStatement',
                    start: 18373,
                    end: 18392,
                    argument: {
                      type: 'MemberExpression',
                      start: 18380,
                      end: 18392,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 18380,
                        end: 18381,
                        name: 'b'
                      },
                      property: {
                        type: 'Identifier',
                        start: 18382,
                        end: 18392,
                        name: 'dehydrated'
                      }
                    }
                  },
                  alternate: null
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 18393,
            end: 18404,
            argument: {
              type: 'Literal',
              start: 18400,
              end: 18404,
              raw: 'null',
              value: null
            }
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 18405,
      end: 18454,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 18414, end: 18416, name: 'Xb' },
      params: [ { type: 'Identifier', start: 18417, end: 18418, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 18419,
        end: 18454,
        body: [
          {
            type: 'IfStatement',
            start: 18420,
            end: 18453,
            test: {
              type: 'BinaryExpression',
              start: 18423,
              end: 18432,
              operator: '!==',
              left: {
                type: 'CallExpression',
                start: 18423,
                end: 18428,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 18423,
                  end: 18425,
                  name: 'Vb'
                },
                arguments: [
                  {
                    type: 'Identifier',
                    start: 18426,
                    end: 18427,
                    name: 'a'
                  }
                ]
              },
              right: {
                type: 'Identifier',
                start: 18431,
                end: 18432,
                name: 'a'
              }
            },
            consequent: {
              type: 'ThrowStatement',
              start: 18433,
              end: 18453,
              argument: {
                type: 'CallExpression',
                start: 18439,
                end: 18452,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 18439,
                  end: 18444,
                  name: 'Error'
                },
                arguments: [
                  {
                    type: 'CallExpression',
                    start: 18445,
                    end: 18451,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 18445,
                      end: 18446,
                      name: 'p'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 18447,
                        end: 18450,
                        raw: '188',
                        value: 188
                      }
                    ]
                  }
                ]
              }
            },
            alternate: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'FunctionDeclaration',
      start: 18455,
      end: 19167,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 18464, end: 18466, name: 'Yb' },
      params: [ { type: 'Identifier', start: 18467, end: 18468, name: 'a' } ],
      body: {
        type: 'BlockStatement',
        start: 18469,
        end: 19167,
        body: [
          {
            type: 'VariableDeclaration',
            start: 18470,
            end: 18488,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 18474,
                end: 18487,
                id: {
                  type: 'Identifier',
                  start: 18474,
                  end: 18475,
                  name: 'b'
                },
                init: {
                  type: 'MemberExpression',
                  start: 18476,
                  end: 18487,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 18476,
                    end: 18477,
                    name: 'a'
                  },
                  property: {
                    type: 'Identifier',
                    start: 18478,
                    end: 18487,
                    name: 'alternate'
                  }
                }
              }
            ]
          },
          {
            type: 'IfStatement',
            start: 18488,
            end: 18555,
            test: {
              type: 'UnaryExpression',
              start: 18491,
              end: 18493,
              operator: '!',
              argument: {
                type: 'Identifier',
                start: 18492,
                end: 18493,
                name: 'b'
              },
              prefix: true
            },
            consequent: {
              type: 'BlockStatement',
              start: 18494,
              end: 18555,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 18495,
                  end: 18503,
                  expression: {
                    type: 'AssignmentExpression',
                    start: 18495,
                    end: 18502,
                    operator: '=',
                    left: {
                      type: 'Identifier',
                      start: 18495,
                      end: 18496,
                      name: 'b'
                    },
                    right: {
                      type: 'CallExpression',
                      start: 18497,
                      end: 18502,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 18497,
                        end: 18499,
                        name: 'Vb'
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 18500,
                          end: 18501,
                          name: 'a'
                        }
                      ]
                    }
                  }
                },
                {
                  type: 'IfStatement',
                  start: 18503,
                  end: 18535,
                  test: {
                    type: 'BinaryExpression',
                    start: 18506,
                    end: 18514,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 18506,
                      end: 18510,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 18513,
                      end: 18514,
                      name: 'b'
                    }
                  },
                  consequent: {
                    type: 'ThrowStatement',
                    start: 18515,
                    end: 18535,
                    argument: {
                      type: 'CallExpression',
                      start: 18521,
                      end: 18534,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 18521,
                        end: 18526,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 18527,
                          end: 18533,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 18527,
                            end: 18528,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 18529,
                              end: 18532,
                              raw: '188',
                              value: 188
                            }
                          ]
                        }
                      ]
                    }
                  },
                  alternate: null
                },
                {
                  type: 'ReturnStatement',
                  start: 18535,
                  end: 18554,
                  argument: {
                    type: 'ConditionalExpression',
                    start: 18542,
                    end: 18554,
                    test: {
                      type: 'BinaryExpression',
                      start: 18542,
                      end: 18547,
                      operator: '!==',
                      left: {
                        type: 'Identifier',
                        start: 18542,
                        end: 18543,
                        name: 'b'
                      },
                      right: {
                        type: 'Identifier',
                        start: 18546,
                        end: 18547,
                        name: 'a'
                      }
                    },
                    consequent: {
                      type: 'Literal',
                      start: 18548,
                      end: 18552,
                      raw: 'null',
                      value: null
                    },
                    alternate: {
                      type: 'Identifier',
                      start: 18553,
                      end: 18554,
                      name: 'a'
                    }
                  }
                }
              ]
            },
            alternate: null
          },
          {
            type: 'ForStatement',
            start: 18555,
            end: 19099,
            init: {
              type: 'VariableDeclaration',
              start: 18559,
              end: 18570,
              kind: 'var',
              declarations: [
                {
                  type: 'VariableDeclarator',
                  start: 18563,
                  end: 18566,
                  id: {
                    type: 'Identifier',
                    start: 18563,
                    end: 18564,
                    name: 'c'
                  },
                  init: {
                    type: 'Identifier',
                    start: 18565,
                    end: 18566,
                    name: 'a'
                  }
                },
                {
                  type: 'VariableDeclarator',
                  start: 18567,
                  end: 18570,
                  id: {
                    type: 'Identifier',
                    start: 18567,
                    end: 18568,
                    name: 'd'
                  },
                  init: {
                    type: 'Identifier',
                    start: 18569,
                    end: 18570,
                    name: 'b'
                  }
                }
              ]
            },
            test: null,
            update: null,
            body: {
              type: 'BlockStatement',
              start: 18573,
              end: 19099,
              body: [
                {
                  type: 'VariableDeclaration',
                  start: 18574,
                  end: 18589,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 18578,
                      end: 18588,
                      id: {
                        type: 'Identifier',
                        start: 18578,
                        end: 18579,
                        name: 'e'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 18580,
                        end: 18588,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 18580,
                          end: 18581,
                          name: 'c'
                        },
                        property: {
                          type: 'Identifier',
                          start: 18582,
                          end: 18588,
                          name: 'return'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'IfStatement',
                  start: 18589,
                  end: 18607,
                  test: {
                    type: 'BinaryExpression',
                    start: 18592,
                    end: 18600,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 18592,
                      end: 18596,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 18599,
                      end: 18600,
                      name: 'e'
                    }
                  },
                  consequent: {
                    type: 'BreakStatement',
                    start: 18601,
                    end: 18607,
                    label: null
                  },
                  alternate: null
                },
                {
                  type: 'VariableDeclaration',
                  start: 18607,
                  end: 18625,
                  kind: 'var',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      start: 18611,
                      end: 18624,
                      id: {
                        type: 'Identifier',
                        start: 18611,
                        end: 18612,
                        name: 'f'
                      },
                      init: {
                        type: 'MemberExpression',
                        start: 18613,
                        end: 18624,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 18613,
                          end: 18614,
                          name: 'e'
                        },
                        property: {
                          type: 'Identifier',
                          start: 18615,
                          end: 18624,
                          name: 'alternate'
                        }
                      }
                    }
                  ]
                },
                {
                  type: 'IfStatement',
                  start: 18625,
                  end: 18681,
                  test: {
                    type: 'BinaryExpression',
                    start: 18628,
                    end: 18636,
                    operator: '===',
                    left: {
                      type: 'Literal',
                      start: 18628,
                      end: 18632,
                      raw: 'null',
                      value: null
                    },
                    right: {
                      type: 'Identifier',
                      start: 18635,
                      end: 18636,
                      name: 'f'
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 18637,
                    end: 18681,
                    body: [
                      {
                        type: 'ExpressionStatement',
                        start: 18638,
                        end: 18649,
                        expression: {
                          type: 'AssignmentExpression',
                          start: 18638,
                          end: 18648,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18638,
                            end: 18639,
                            name: 'd'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 18640,
                            end: 18648,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 18640,
                              end: 18641,
                              name: 'e'
                            },
                            property: {
                              type: 'Identifier',
                              start: 18642,
                              end: 18648,
                              name: 'return'
                            }
                          }
                        }
                      },
                      {
                        type: 'IfStatement',
                        start: 18649,
                        end: 18675,
                        test: {
                          type: 'BinaryExpression',
                          start: 18652,
                          end: 18660,
                          operator: '!==',
                          left: {
                            type: 'Literal',
                            start: 18652,
                            end: 18656,
                            raw: 'null',
                            value: null
                          },
                          right: {
                            type: 'Identifier',
                            start: 18659,
                            end: 18660,
                            name: 'd'
                          }
                        },
                        consequent: {
                          type: 'BlockStatement',
                          start: 18661,
                          end: 18675,
                          body: [
                            {
                              type: 'ExpressionStatement',
                              start: 18662,
                              end: 18666,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 18662,
                                end: 18665,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 18662,
                                  end: 18663,
                                  name: 'c'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 18664,
                                  end: 18665,
                                  name: 'd'
                                }
                              }
                            },
                            {
                              type: 'ContinueStatement',
                              start: 18666,
                              end: 18674,
                              label: null
                            }
                          ]
                        },
                        alternate: null
                      },
                      {
                        type: 'BreakStatement',
                        start: 18675,
                        end: 18680,
                        label: null
                      }
                    ]
                  },
                  alternate: null
                },
                {
                  type: 'IfStatement',
                  start: 18681,
                  end: 18802,
                  test: {
                    type: 'BinaryExpression',
                    start: 18684,
                    end: 18701,
                    operator: '===',
                    left: {
                      type: 'MemberExpression',
                      start: 18684,
                      end: 18691,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 18684,
                        end: 18685,
                        name: 'e'
                      },
                      property: {
                        type: 'Identifier',
                        start: 18686,
                        end: 18691,
                        name: 'child'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 18694,
                      end: 18701,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 18694,
                        end: 18695,
                        name: 'f'
                      },
                      property: {
                        type: 'Identifier',
                        start: 18696,
                        end: 18701,
                        name: 'child'
                      }
                    }
                  },
                  consequent: {
                    type: 'BlockStatement',
                    start: 18702,
                    end: 18802,
                    body: [
                      {
                        type: 'ForStatement',
                        start: 18703,
                        end: 18781,
                        init: {
                          type: 'AssignmentExpression',
                          start: 18707,
                          end: 18716,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18707,
                            end: 18708,
                            name: 'f'
                          },
                          right: {
                            type: 'MemberExpression',
                            start: 18709,
                            end: 18716,
                            computed: false,
                            optional: false,
                            object: {
                              type: 'Identifier',
                              start: 18709,
                              end: 18710,
                              name: 'e'
                            },
                            property: {
                              type: 'Identifier',
                              start: 18711,
                              end: 18716,
                              name: 'child'
                            }
                          }
                        },
                        test: {
                          type: 'Identifier',
                          start: 18717,
                          end: 18718,
                          name: 'f'
                        },
                        update: null,
                        body: {
                          type: 'BlockStatement',
                          start: 18720,
                          end: 18781,
                          body: [
                            {
                              type: 'IfStatement',
                              start: 18721,
                              end: 18745,
                              test: {
                                type: 'BinaryExpression',
                                start: 18724,
                                end: 18729,
                                operator: '===',
                                left: {
                                  type: 'Identifier',
                                  start: 18724,
                                  end: 18725,
                                  name: 'f'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 18728,
                                  end: 18729,
                                  name: 'c'
                                }
                              },
                              consequent: {
                                type: 'ReturnStatement',
                                start: 18730,
                                end: 18745,
                                argument: {
                                  type: 'SequenceExpression',
                                  start: 18737,
                                  end: 18744,
                                  expressions: [
                                    {
                                      type: 'CallExpression',
                                      start: 18737,
                                      end: 18742,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 18737,
                                        end: 18739,
                                        name: 'Xb'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 18740,
                                          end: 18741,
                                          name: 'e'
                                        }
                                      ]
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 18743,
                                      end: 18744,
                                      name: 'a'
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            },
                            {
                              type: 'IfStatement',
                              start: 18745,
                              end: 18769,
                              test: {
                                type: 'BinaryExpression',
                                start: 18748,
                                end: 18753,
                                operator: '===',
                                left: {
                                  type: 'Identifier',
                                  start: 18748,
                                  end: 18749,
                                  name: 'f'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 18752,
                                  end: 18753,
                                  name: 'd'
                                }
                              },
                              consequent: {
                                type: 'ReturnStatement',
                                start: 18754,
                                end: 18769,
                                argument: {
                                  type: 'SequenceExpression',
                                  start: 18761,
                                  end: 18768,
                                  expressions: [
                                    {
                                      type: 'CallExpression',
                                      start: 18761,
                                      end: 18766,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 18761,
                                        end: 18763,
                                        name: 'Xb'
                                      },
                                      arguments: [
                                        {
                                          type: 'Identifier',
                                          start: 18764,
                                          end: 18765,
                                          name: 'e'
                                        }
                                      ]
                                    },
                                    {
                                      type: 'Identifier',
                                      start: 18767,
                                      end: 18768,
                                      name: 'b'
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 18769,
                              end: 18780,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 18769,
                                end: 18780,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 18769,
                                  end: 18770,
                                  name: 'f'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 18771,
                                  end: 18780,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 18771,
                                    end: 18772,
                                    name: 'f'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 18773,
                                    end: 18780,
                                    name: 'sibling'
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        type: 'ThrowStatement',
                        start: 18781,
                        end: 18801,
                        argument: {
                          type: 'CallExpression',
                          start: 18787,
                          end: 18800,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 18787,
                            end: 18792,
                            name: 'Error'
                          },
                          arguments: [
                            {
                              type: 'CallExpression',
                              start: 18793,
                              end: 18799,
                              optional: false,
                              callee: {
                                type: 'Identifier',
                                start: 18793,
                                end: 18794,
                                name: 'p'
                              },
                              arguments: [
                                {
                                  type: 'Literal',
                                  start: 18795,
                                  end: 18798,
                                  raw: '188',
                                  value: 188
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  alternate: null
                },
                {
                  type: 'IfStatement',
                  start: 18802,
                  end: 19059,
                  test: {
                    type: 'BinaryExpression',
                    start: 18805,
                    end: 18824,
                    operator: '!==',
                    left: {
                      type: 'MemberExpression',
                      start: 18805,
                      end: 18813,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 18805,
                        end: 18806,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 18807,
                        end: 18813,
                        name: 'return'
                      }
                    },
                    right: {
                      type: 'MemberExpression',
                      start: 18816,
                      end: 18824,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 18816,
                        end: 18817,
                        name: 'd'
                      },
                      property: {
                        type: 'Identifier',
                        start: 18818,
                        end: 18824,
                        name: 'return'
                      }
                    }
                  },
                  consequent: {
                    type: 'ExpressionStatement',
                    start: 18825,
                    end: 18833,
                    expression: {
                      type: 'SequenceExpression',
                      start: 18825,
                      end: 18832,
                      expressions: [
                        {
                          type: 'AssignmentExpression',
                          start: 18825,
                          end: 18828,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18825,
                            end: 18826,
                            name: 'c'
                          },
                          right: {
                            type: 'Identifier',
                            start: 18827,
                            end: 18828,
                            name: 'e'
                          }
                        },
                        {
                          type: 'AssignmentExpression',
                          start: 18829,
                          end: 18832,
                          operator: '=',
                          left: {
                            type: 'Identifier',
                            start: 18829,
                            end: 18830,
                            name: 'd'
                          },
                          right: {
                            type: 'Identifier',
                            start: 18831,
                            end: 18832,
                            name: 'f'
                          }
                        }
                      ]
                    }
                  },
                  alternate: {
                    type: 'BlockStatement',
                    start: 18837,
                    end: 19059,
                    body: [
                      {
                        type: 'ForStatement',
                        start: 18838,
                        end: 18935,
                        init: {
                          type: 'VariableDeclaration',
                          start: 18842,
                          end: 18860,
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              start: 18846,
                              end: 18850,
                              id: {
                                type: 'Identifier',
                                start: 18846,
                                end: 18847,
                                name: 'g'
                              },
                              init: {
                                type: 'UnaryExpression',
                                start: 18848,
                                end: 18850,
                                operator: '!',
                                argument: {
                                  type: 'Literal',
                                  start: 18849,
                                  end: 18850,
                                  raw: '1',
                                  value: 1
                                },
                                prefix: true
                              }
                            },
                            {
                              type: 'VariableDeclarator',
                              start: 18851,
                              end: 18860,
                              id: {
                                type: 'Identifier',
                                start: 18851,
                                end: 18852,
                                name: 'h'
                              },
                              init: {
                                type: 'MemberExpression',
                                start: 18853,
                                end: 18860,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 18853,
                                  end: 18854,
                                  name: 'e'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 18855,
                                  end: 18860,
                                  name: 'child'
                                }
                              }
                            }
                          ]
                        },
                        test: {
                          type: 'Identifier',
                          start: 18861,
                          end: 18862,
                          name: 'h'
                        },
                        update: null,
                        body: {
                          type: 'BlockStatement',
                          start: 18864,
                          end: 18935,
                          body: [
                            {
                              type: 'IfStatement',
                              start: 18865,
                              end: 18894,
                              test: {
                                type: 'BinaryExpression',
                                start: 18868,
                                end: 18873,
                                operator: '===',
                                left: {
                                  type: 'Identifier',
                                  start: 18868,
                                  end: 18869,
                                  name: 'h'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 18872,
                                  end: 18873,
                                  name: 'c'
                                }
                              },
                              consequent: {
                                type: 'BlockStatement',
                                start: 18874,
                                end: 18894,
                                body: [
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18875,
                                    end: 18880,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18875,
                                      end: 18879,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18875,
                                        end: 18876,
                                        name: 'g'
                                      },
                                      right: {
                                        type: 'UnaryExpression',
                                        start: 18877,
                                        end: 18879,
                                        operator: '!',
                                        argument: {
                                          type: 'Literal',
                                          start: 18878,
                                          end: 18879,
                                          raw: '0',
                                          value: 0
                                        },
                                        prefix: true
                                      }
                                    }
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18880,
                                    end: 18884,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18880,
                                      end: 18883,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18880,
                                        end: 18881,
                                        name: 'c'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18882,
                                        end: 18883,
                                        name: 'e'
                                      }
                                    }
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18884,
                                    end: 18888,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18884,
                                      end: 18887,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18884,
                                        end: 18885,
                                        name: 'd'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18886,
                                        end: 18887,
                                        name: 'f'
                                      }
                                    }
                                  },
                                  {
                                    type: 'BreakStatement',
                                    start: 18888,
                                    end: 18893,
                                    label: null
                                  }
                                ]
                              },
                              alternate: null
                            },
                            {
                              type: 'IfStatement',
                              start: 18894,
                              end: 18923,
                              test: {
                                type: 'BinaryExpression',
                                start: 18897,
                                end: 18902,
                                operator: '===',
                                left: {
                                  type: 'Identifier',
                                  start: 18897,
                                  end: 18898,
                                  name: 'h'
                                },
                                right: {
                                  type: 'Identifier',
                                  start: 18901,
                                  end: 18902,
                                  name: 'd'
                                }
                              },
                              consequent: {
                                type: 'BlockStatement',
                                start: 18903,
                                end: 18923,
                                body: [
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18904,
                                    end: 18909,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18904,
                                      end: 18908,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18904,
                                        end: 18905,
                                        name: 'g'
                                      },
                                      right: {
                                        type: 'UnaryExpression',
                                        start: 18906,
                                        end: 18908,
                                        operator: '!',
                                        argument: {
                                          type: 'Literal',
                                          start: 18907,
                                          end: 18908,
                                          raw: '0',
                                          value: 0
                                        },
                                        prefix: true
                                      }
                                    }
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18909,
                                    end: 18913,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18909,
                                      end: 18912,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18909,
                                        end: 18910,
                                        name: 'd'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18911,
                                        end: 18912,
                                        name: 'e'
                                      }
                                    }
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 18913,
                                    end: 18917,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 18913,
                                      end: 18916,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 18913,
                                        end: 18914,
                                        name: 'c'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18915,
                                        end: 18916,
                                        name: 'f'
                                      }
                                    }
                                  },
                                  {
                                    type: 'BreakStatement',
                                    start: 18917,
                                    end: 18922,
                                    label: null
                                  }
                                ]
                              },
                              alternate: null
                            },
                            {
                              type: 'ExpressionStatement',
                              start: 18923,
                              end: 18934,
                              expression: {
                                type: 'AssignmentExpression',
                                start: 18923,
                                end: 18934,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 18923,
                                  end: 18924,
                                  name: 'h'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 18925,
                                  end: 18934,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 18925,
                                    end: 18926,
                                    name: 'h'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 18927,
                                    end: 18934,
                                    name: 'sibling'
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        type: 'IfStatement',
                        start: 18935,
                        end: 19058,
                        test: {
                          type: 'UnaryExpression',
                          start: 18938,
                          end: 18940,
                          operator: '!',
                          argument: {
                            type: 'Identifier',
                            start: 18939,
                            end: 18940,
                            name: 'g'
                          },
                          prefix: true
                        },
                        consequent: {
                          type: 'BlockStatement',
                          start: 18941,
                          end: 19058,
                          body: [
                            {
                              type: 'ForStatement',
                              start: 18942,
                              end: 19031,
                              init: {
                                type: 'AssignmentExpression',
                                start: 18946,
                                end: 18955,
                                operator: '=',
                                left: {
                                  type: 'Identifier',
                                  start: 18946,
                                  end: 18947,
                                  name: 'h'
                                },
                                right: {
                                  type: 'MemberExpression',
                                  start: 18948,
                                  end: 18955,
                                  computed: false,
                                  optional: false,
                                  object: {
                                    type: 'Identifier',
                                    start: 18948,
                                    end: 18949,
                                    name: 'f'
                                  },
                                  property: {
                                    type: 'Identifier',
                                    start: 18950,
                                    end: 18955,
                                    name: 'child'
                                  }
                                }
                              },
                              test: {
                                type: 'Identifier',
                                start: 18956,
                                end: 18957,
                                name: 'h'
                              },
                              update: null,
                              body: {
                                type: 'BlockStatement',
                                start: 18959,
                                end: 19031,
                                body: [
                                  {
                                    type: 'IfStatement',
                                    start: 18960,
                                    end: 18990,
                                    test: {
                                      type: 'BinaryExpression',
                                      start: 18963,
                                      end: 18969,
                                      operator: '===',
                                      left: {
                                        type: 'Identifier',
                                        start: 18963,
                                        end: 18964,
                                        name: 'h'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18968,
                                        end: 18969,
                                        name: 'c'
                                      }
                                    },
                                    consequent: {
                                      type: 'BlockStatement',
                                      start: 18970,
                                      end: 18990,
                                      body: [
                                        {
                                          type: 'ExpressionStatement',
                                          start: 18971,
                                          end: 18976,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 18971,
                                            end: 18975,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 18971,
                                              end: 18972,
                                              name: 'g'
                                            },
                                            right: {
                                              type: 'UnaryExpression',
                                              start: 18973,
                                              end: 18975,
                                              operator: '!',
                                              argument: {
                                                type: 'Literal',
                                                start: 18974,
                                                end: 18975,
                                                raw: '0',
                                                value: 0
                                              },
                                              prefix: true
                                            }
                                          }
                                        },
                                        {
                                          type: 'ExpressionStatement',
                                          start: 18976,
                                          end: 18980,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 18976,
                                            end: 18979,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 18976,
                                              end: 18977,
                                              name: 'c'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 18978,
                                              end: 18979,
                                              name: 'f'
                                            }
                                          }
                                        },
                                        {
                                          type: 'ExpressionStatement',
                                          start: 18980,
                                          end: 18984,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 18980,
                                            end: 18983,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 18980,
                                              end: 18981,
                                              name: 'd'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 18982,
                                              end: 18983,
                                              name: 'e'
                                            }
                                          }
                                        },
                                        {
                                          type: 'BreakStatement',
                                          start: 18984,
                                          end: 18989,
                                          label: null
                                        }
                                      ]
                                    },
                                    alternate: null
                                  },
                                  {
                                    type: 'IfStatement',
                                    start: 18990,
                                    end: 19019,
                                    test: {
                                      type: 'BinaryExpression',
                                      start: 18993,
                                      end: 18998,
                                      operator: '===',
                                      left: {
                                        type: 'Identifier',
                                        start: 18993,
                                        end: 18994,
                                        name: 'h'
                                      },
                                      right: {
                                        type: 'Identifier',
                                        start: 18997,
                                        end: 18998,
                                        name: 'd'
                                      }
                                    },
                                    consequent: {
                                      type: 'BlockStatement',
                                      start: 18999,
                                      end: 19019,
                                      body: [
                                        {
                                          type: 'ExpressionStatement',
                                          start: 19000,
                                          end: 19005,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 19000,
                                            end: 19004,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 19000,
                                              end: 19001,
                                              name: 'g'
                                            },
                                            right: {
                                              type: 'UnaryExpression',
                                              start: 19002,
                                              end: 19004,
                                              operator: '!',
                                              argument: {
                                                type: 'Literal',
                                                start: 19003,
                                                end: 19004,
                                                raw: '0',
                                                value: 0
                                              },
                                              prefix: true
                                            }
                                          }
                                        },
                                        {
                                          type: 'ExpressionStatement',
                                          start: 19005,
                                          end: 19009,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 19005,
                                            end: 19008,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 19005,
                                              end: 19006,
                                              name: 'd'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 19007,
                                              end: 19008,
                                              name: 'f'
                                            }
                                          }
                                        },
                                        {
                                          type: 'ExpressionStatement',
                                          start: 19009,
                                          end: 19013,
                                          expression: {
                                            type: 'AssignmentExpression',
                                            start: 19009,
                                            end: 19012,
                                            operator: '=',
                                            left: {
                                              type: 'Identifier',
                                              start: 19009,
                                              end: 19010,
                                              name: 'c'
                                            },
                                            right: {
                                              type: 'Identifier',
                                              start: 19011,
                                              end: 19012,
                                              name: 'e'
                                            }
                                          }
                                        },
                                        {
                                          type: 'BreakStatement',
                                          start: 19013,
                                          end: 19018,
                                          label: null
                                        }
                                      ]
                                    },
                                    alternate: null
                                  },
                                  {
                                    type: 'ExpressionStatement',
                                    start: 19019,
                                    end: 19030,
                                    expression: {
                                      type: 'AssignmentExpression',
                                      start: 19019,
                                      end: 19030,
                                      operator: '=',
                                      left: {
                                        type: 'Identifier',
                                        start: 19019,
                                        end: 19020,
                                        name: 'h'
                                      },
                                      right: {
                                        type: 'MemberExpression',
                                        start: 19021,
                                        end: 19030,
                                        computed: false,
                                        optional: false,
                                        object: {
                                          type: 'Identifier',
                                          start: 19021,
                                          end: 19022,
                                          name: 'h'
                                        },
                                        property: {
                                          type: 'Identifier',
                                          start: 19023,
                                          end: 19030,
                                          name: 'sibling'
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              type: 'IfStatement',
                              start: 19031,
                              end: 19057,
                              test: {
                                type: 'UnaryExpression',
                                start: 19034,
                                end: 19036,
                                operator: '!',
                                argument: {
                                  type: 'Identifier',
                                  start: 19035,
                                  end: 19036,
                                  name: 'g'
                                },
                                prefix: true
                              },
                              consequent: {
                                type: 'ThrowStatement',
                                start: 19037,
                                end: 19057,
                                argument: {
                                  type: 'CallExpression',
                                  start: 19043,
                                  end: 19056,
                                  optional: false,
                                  callee: {
                                    type: 'Identifier',
                                    start: 19043,
                                    end: 19048,
                                    name: 'Error'
                                  },
                                  arguments: [
                                    {
                                      type: 'CallExpression',
                                      start: 19049,
                                      end: 19055,
                                      optional: false,
                                      callee: {
                                        type: 'Identifier',
                                        start: 19049,
                                        end: 19050,
                                        name: 'p'
                                      },
                                      arguments: [
                                        {
                                          type: 'Literal',
                                          start: 19051,
                                          end: 19054,
                                          raw: '189',
                                          value: 189
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              alternate: null
                            }
                          ]
                        },
                        alternate: null
                      }
                    ]
                  }
                },
                {
                  type: 'IfStatement',
                  start: 19059,
                  end: 19098,
                  test: {
                    type: 'BinaryExpression',
                    start: 19062,
                    end: 19077,
                    operator: '!==',
                    left: {
                      type: 'MemberExpression',
                      start: 19062,
                      end: 19073,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 19062,
                        end: 19063,
                        name: 'c'
                      },
                      property: {
                        type: 'Identifier',
                        start: 19064,
                        end: 19073,
                        name: 'alternate'
                      }
                    },
                    right: {
                      type: 'Identifier',
                      start: 19076,
                      end: 19077,
                      name: 'd'
                    }
                  },
                  consequent: {
                    type: 'ThrowStatement',
                    start: 19078,
                    end: 19098,
                    argument: {
                      type: 'CallExpression',
                      start: 19084,
                      end: 19097,
                      optional: false,
                      callee: {
                        type: 'Identifier',
                        start: 19084,
                        end: 19089,
                        name: 'Error'
                      },
                      arguments: [
                        {
                          type: 'CallExpression',
                          start: 19090,
                          end: 19096,
                          optional: false,
                          callee: {
                            type: 'Identifier',
                            start: 19090,
                            end: 19091,
                            name: 'p'
                          },
                          arguments: [
                            {
                              type: 'Literal',
                              start: 19092,
                              end: 19095,
                              raw: '190',
                              value: 190
                            }
                          ]
                        }
                      ]
                    }
                  },
                  alternate: null
                }
              ]
            }
          },
          {
            type: 'IfStatement',
            start: 19099,
            end: 19132,
            test: {
              type: 'BinaryExpression',
              start: 19102,
              end: 19111,
              operator: '!==',
              left: {
                type: 'Literal',
                start: 19102,
                end: 19103,
                raw: '3',
                value: 3
              },
              right: {
                type: 'MemberExpression',
                start: 19106,
                end: 19111,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 19106,
                  end: 19107,
                  name: 'c'
                },
                property: {
                  type: 'Identifier',
                  start: 19108,
                  end: 19111,
                  name: 'tag'
                }
              }
            },
            consequent: {
              type: 'ThrowStatement',
              start: 19112,
              end: 19132,
              argument: {
                type: 'CallExpression',
                start: 19118,
                end: 19131,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 19118,
                  end: 19123,
                  name: 'Error'
                },
                arguments: [
                  {
                    type: 'CallExpression',
                    start: 19124,
                    end: 19130,
                    optional: false,
                    callee: {
                      type: 'Identifier',
                      start: 19124,
                      end: 19125,
                      name: 'p'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 19126,
                        end: 19129,
                        raw: '188',
                        value: 188
                      }
                    ]
                  }
                ]
              }
            },
            alternate: null
          },
          {
            type: 'ReturnStatement',
            start: 19132,
            end: 19166,
            argument: {
              type: 'ConditionalExpression',
              start: 19139,
              end: 19166,
              test: {
                type: 'BinaryExpression',
                start: 19139,
                end: 19162,
                operator: '===',
                left: {
                  type: 'MemberExpression',
                  start: 19139,
                  end: 19158,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'MemberExpression',
                    start: 19139,
                    end: 19150,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 19139,
                      end: 19140,
                      name: 'c'
                    },
                    property: {
                      type: 'Identifier',
                      start: 19141,
                      end: 19150,
                      name: 'stateNode'
                    }
                  },
                  property: {
                    type: 'Identifier',
                    start: 19151,
                    end: 19158,
                    name: 'current'
                  }
                },
                right: {
                  type: 'Identifier',
                  start: 19161,
                  end: 19162,
                  name: 'c'
                }
              },
              consequent: {
                type: 'Identifier',
                start: 19163,
                end: 19164,
                name: 'a'
              },
              alternate: {
                type: 'Identifier',
                start: 19165,
                end: 19166,
                name: 'b'
              }
            }
          }
        ]
      },
      expression: false
    },
    ... 401 more items
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 1019,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 55,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 7,
          end: 27,
          local: {
            type: 'Identifier',
            start: 12,
            end: 27,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 33,
        end: 54,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 56,
      end: 188,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 65,
          end: 91,
          imported: { type: 'Identifier', start: 65, end: 73, name: '__module' },
          local: {
            type: 'Identifier',
            start: 77,
            end: 91,
            name: 'reactDomModule'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 99,
        end: 187,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js?commonjs-module',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js?commonjs-module"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 189,
      end: 227,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 193,
          end: 226,
          id: {
            type: 'Identifier',
            start: 193,
            end: 201,
            name: 'reactDom'
          },
          init: {
            type: 'MemberExpression',
            start: 204,
            end: 226,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 204,
              end: 218,
              name: 'reactDomModule'
            },
            property: {
              type: 'Identifier',
              start: 219,
              end: 226,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ImportDeclaration',
      start: 228,
      end: 362,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 235,
          end: 245,
          local: {
            type: 'Identifier',
            start: 235,
            end: 245,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 251,
        end: 361,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'ExpressionStatement',
      start: 364,
      end: 377,
      expression: {
        type: 'Literal',
        start: 364,
        end: 376,
        value: 'use strict',
        raw: '"use strict"'
      }
    },
    {
      type: 'FunctionDeclaration',
      start: 378,
      end: 701,
      async: false,
      generator: false,
      id: { type: 'Identifier', start: 387, end: 395, name: 'checkDCE' },
      params: [],
      body: {
        type: 'BlockStatement',
        start: 398,
        end: 701,
        body: [
          {
            type: 'IfStatement',
            start: 402,
            end: 543,
            test: {
              type: 'LogicalExpression',
              start: 406,
              end: 524,
              operator: '||',
              left: {
                type: 'BinaryExpression',
                start: 406,
                end: 459,
                operator: '===',
                left: {
                  type: 'UnaryExpression',
                  start: 406,
                  end: 443,
                  operator: 'typeof',
                  argument: {
                    type: 'Identifier',
                    start: 413,
                    end: 443,
                    name: '__REACT_DEVTOOLS_GLOBAL_HOOK__'
                  },
                  prefix: true
                },
                right: {
                  type: 'Literal',
                  start: 448,
                  end: 459,
                  value: 'undefined',
                  raw: '"undefined"'
                }
              },
              right: {
                type: 'BinaryExpression',
                start: 463,
                end: 524,
                operator: '!==',
                left: {
                  type: 'UnaryExpression',
                  start: 463,
                  end: 509,
                  operator: 'typeof',
                  argument: {
                    type: 'MemberExpression',
                    start: 470,
                    end: 509,
                    computed: false,
                    optional: false,
                    object: {
                      type: 'Identifier',
                      start: 470,
                      end: 500,
                      name: '__REACT_DEVTOOLS_GLOBAL_HOOK__'
                    },
                    property: {
                      type: 'Identifier',
                      start: 501,
                      end: 509,
                      name: 'checkDCE'
                    }
                  },
                  prefix: true
                },
                right: {
                  type: 'Literal',
                  start: 514,
                  end: 524,
                  value: 'function',
                  raw: '"function"'
                }
              }
            },
            consequent: {
              type: 'BlockStatement',
              start: 526,
              end: 543,
              body: [
                {
                  type: 'ReturnStatement',
                  start: 532,
                  end: 539,
                  argument: null
                }
              ]
            },
            alternate: null
          },
          {
            type: 'IfStatement',
            start: 546,
            end: 590,
            test: {
              type: 'Literal',
              start: 550,
              end: 555,
              value: false,
              raw: 'false'
            },
            consequent: {
              type: 'BlockStatement',
              start: 557,
              end: 590,
              body: [
                {
                  type: 'ThrowStatement',
                  start: 563,
                  end: 586,
                  argument: {
                    type: 'NewExpression',
                    start: 569,
                    end: 585,
                    callee: {
                      type: 'Identifier',
                      start: 573,
                      end: 578,
                      name: 'Error'
                    },
                    arguments: [
                      {
                        type: 'Literal',
                        start: 579,
                        end: 584,
                        value: '^_^',
                        raw: '"^_^"'
                      }
                    ]
                  }
                }
              ]
            },
            alternate: null
          },
          {
            type: 'TryStatement',
            start: 593,
            end: 699,
            block: {
              type: 'BlockStatement',
              start: 597,
              end: 657,
              body: [
                {
                  type: 'ExpressionStatement',
                  start: 603,
                  end: 653,
                  expression: {
                    type: 'CallExpression',
                    start: 603,
                    end: 652,
                    optional: false,
                    callee: {
                      type: 'MemberExpression',
                      start: 603,
                      end: 642,
                      computed: false,
                      optional: false,
                      object: {
                        type: 'Identifier',
                        start: 603,
                        end: 633,
                        name: '__REACT_DEVTOOLS_GLOBAL_HOOK__'
                      },
                      property: {
                        type: 'Identifier',
                        start: 634,
                        end: 642,
                        name: 'checkDCE'
                      }
                    },
                    arguments: [
                      {
                        type: 'Identifier',
                        start: 643,
                        end: 651,
                        name: 'checkDCE'
                      }
                    ]
                  }
                }
              ]
            },
            handler: {
              type: 'CatchClause',
              start: 658,
              end: 699,
              param: { type: 'Identifier', start: 665, end: 668, name: 'err' },
              body: {
                type: 'BlockStatement',
                start: 670,
                end: 699,
                body: [
                  {
                    type: 'ExpressionStatement',
                    start: 676,
                    end: 695,
                    expression: {
                      type: 'CallExpression',
                      start: 676,
                      end: 694,
                      optional: false,
                      callee: {
                        type: 'MemberExpression',
                        start: 676,
                        end: 689,
                        computed: false,
                        optional: false,
                        object: {
                          type: 'Identifier',
                          start: 676,
                          end: 683,
                          name: 'console'
                        },
                        property: {
                          type: 'Identifier',
                          start: 684,
                          end: 689,
                          name: 'error'
                        }
                      },
                      arguments: [
                        {
                          type: 'Identifier',
                          start: 690,
                          end: 693,
                          name: 'err'
                        }
                      ]
                    }
                  }
                ]
              }
            },
            finalizer: null
          }
        ]
      },
      expression: false
    },
    {
      type: 'IfStatement',
      start: 702,
      end: 839,
      test: {
        type: 'Literal',
        start: 706,
        end: 710,
        value: true,
        raw: 'true'
      },
      consequent: {
        type: 'BlockStatement',
        start: 712,
        end: 768,
        body: [
          {
            type: 'ExpressionStatement',
            start: 716,
            end: 727,
            expression: {
              type: 'CallExpression',
              start: 716,
              end: 726,
              optional: false,
              callee: {
                type: 'Identifier',
                start: 716,
                end: 724,
                name: 'checkDCE'
              },
              arguments: []
            }
          },
          {
            type: 'ExpressionStatement',
            start: 730,
            end: 766,
            expression: {
              type: 'AssignmentExpression',
              start: 730,
              end: 765,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 730,
                end: 752,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 730,
                  end: 744,
                  name: 'reactDomModule'
                },
                property: {
                  type: 'Identifier',
                  start: 745,
                  end: 752,
                  name: 'exports'
                }
              },
              right: {
                type: 'Identifier',
                start: 755,
                end: 765,
                name: 'require$$0'
              }
            }
          }
        ]
      },
      alternate: {
        type: 'BlockStatement',
        start: 774,
        end: 839,
        body: [
          {
            type: 'ExpressionStatement',
            start: 778,
            end: 837,
            expression: {
              type: 'AssignmentExpression',
              start: 778,
              end: 836,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 778,
                end: 792,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 778,
                  end: 784,
                  name: 'module'
                },
                property: {
                  type: 'Identifier',
                  start: 785,
                  end: 792,
                  name: 'exports'
                }
              },
              right: {
                type: 'CallExpression',
                start: 795,
                end: 836,
                optional: false,
                callee: {
                  type: 'Identifier',
                  start: 795,
                  end: 802,
                  name: 'require'
                },
                arguments: [
                  {
                    type: 'Literal',
                    start: 803,
                    end: 835,
                    value: './cjs/react-dom.development.js',
                    raw: '"./cjs/react-dom.development.js"'
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      type: 'VariableDeclaration',
      start: 841,
      end: 886,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 845,
          end: 885,
          id: {
            type: 'Identifier',
            start: 845,
            end: 860,
            name: 'reactDomExports'
          },
          init: {
            type: 'MemberExpression',
            start: 863,
            end: 885,
            computed: false,
            optional: false,
            object: {
              type: 'Identifier',
              start: 863,
              end: 877,
              name: 'reactDomModule'
            },
            property: {
              type: 'Identifier',
              start: 878,
              end: 885,
              name: 'exports'
            }
          }
        }
      ]
    },
    {
      type: 'ExportDefaultDeclaration',
      start: 887,
      end: 972,
      declaration: {
        type: 'CallExpression',
        start: 915,
        end: 971,
        optional: false,
        _rollupAnnotations: [ { end: 915, start: 902, type: 'pure' } ],
        callee: {
          type: 'MemberExpression',
          start: 915,
          end: 954,
          computed: false,
          optional: false,
          object: {
            type: 'Identifier',
            start: 915,
            end: 930,
            name: 'commonjsHelpers'
          },
          property: {
            type: 'Identifier',
            start: 931,
            end: 954,
            name: 'getDefaultExportFromCjs'
          }
        },
        arguments: [
          {
            type: 'Identifier',
            start: 955,
            end: 970,
            name: 'reactDomExports'
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 973,
      end: 1019,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 982,
          end: 1016,
          local: {
            type: 'Identifier',
            start: 982,
            end: 997,
            name: 'reactDomExports'
          },
          exported: {
            type: 'Identifier',
            start: 1001,
            end: 1016,
            name: '__moduleExports'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 1012,
  body: [
    {
      type: 'ImportDeclaration',
      start: 0,
      end: 55,
      specifiers: [
        {
          type: 'ImportNamespaceSpecifier',
          start: 7,
          end: 27,
          local: {
            type: 'Identifier',
            start: 12,
            end: 27,
            name: 'commonjsHelpers'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 33,
        end: 54,
        value: '\x00commonjsHelpers.js',
        raw: '"\x00commonjsHelpers.js"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 56,
      end: 183,
      specifiers: [
        {
          type: 'ImportSpecifier',
          start: 65,
          end: 84,
          imported: { type: 'Identifier', start: 65, end: 74, name: '__exports' },
          local: { type: 'Identifier', start: 78, end: 84, name: 'client' }
        }
      ],
      source: {
        type: 'Literal',
        start: 92,
        end: 182,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react-dom/client.js?commonjs-exports',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react-dom/client.js?commonjs-exports"'
      },
      attributes: []
    },
    {
      type: 'ImportDeclaration',
      start: 184,
      end: 295,
      specifiers: [
        {
          type: 'ImportDefaultSpecifier',
          start: 191,
          end: 201,
          local: {
            type: 'Identifier',
            start: 191,
            end: 201,
            name: 'require$$0'
          }
        }
      ],
      source: {
        type: 'Literal',
        start: 207,
        end: 294,
        value: '\x00/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js?commonjs-proxy',
        raw: '"\\u0000/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js?commonjs-proxy"'
      },
      attributes: []
    },
    {
      type: 'VariableDeclaration',
      start: 297,
      end: 313,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 301,
          end: 312,
          id: {
            type: 'Identifier',
            start: 301,
            end: 312,
            name: 'hydrateRoot'
          },
          init: null
        }
      ]
    },
    {
      type: 'VariableDeclaration',
      start: 314,
      end: 329,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 318,
          end: 328,
          id: {
            type: 'Identifier',
            start: 318,
            end: 328,
            name: 'createRoot'
          },
          init: null
        }
      ]
    },
    {
      type: 'ExpressionStatement',
      start: 330,
      end: 343,
      expression: {
        type: 'Literal',
        start: 330,
        end: 342,
        value: 'use strict',
        raw: '"use strict"'
      }
    },
    {
      type: 'VariableDeclaration',
      start: 344,
      end: 363,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 348,
          end: 362,
          id: { type: 'Identifier', start: 348, end: 349, name: 'm' },
          init: {
            type: 'Identifier',
            start: 352,
            end: 362,
            name: 'require$$0'
          }
        }
      ]
    },
    {
      type: 'IfStatement',
      start: 364,
      end: 929,
      test: {
        type: 'Literal',
        start: 368,
        end: 372,
        value: true,
        raw: 'true'
      },
      consequent: {
        type: 'BlockStatement',
        start: 374,
        end: 478,
        body: [
          {
            type: 'ExpressionStatement',
            start: 378,
            end: 424,
            expression: {
              type: 'AssignmentExpression',
              start: 378,
              end: 423,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 378,
                end: 388,
                name: 'createRoot'
              },
              right: {
                type: 'AssignmentExpression',
                start: 391,
                end: 423,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 391,
                  end: 408,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 391,
                    end: 397,
                    name: 'client'
                  },
                  property: {
                    type: 'Identifier',
                    start: 398,
                    end: 408,
                    name: 'createRoot'
                  }
                },
                right: {
                  type: 'MemberExpression',
                  start: 411,
                  end: 423,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 411,
                    end: 412,
                    name: 'm'
                  },
                  property: {
                    type: 'Identifier',
                    start: 413,
                    end: 423,
                    name: 'createRoot'
                  }
                }
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 427,
            end: 476,
            expression: {
              type: 'AssignmentExpression',
              start: 427,
              end: 475,
              operator: '=',
              left: {
                type: 'Identifier',
                start: 427,
                end: 438,
                name: 'hydrateRoot'
              },
              right: {
                type: 'AssignmentExpression',
                start: 441,
                end: 475,
                operator: '=',
                left: {
                  type: 'MemberExpression',
                  start: 441,
                  end: 459,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 441,
                    end: 447,
                    name: 'client'
                  },
                  property: {
                    type: 'Identifier',
                    start: 448,
                    end: 459,
                    name: 'hydrateRoot'
                  }
                },
                right: {
                  type: 'MemberExpression',
                  start: 462,
                  end: 475,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 462,
                    end: 463,
                    name: 'm'
                  },
                  property: {
                    type: 'Identifier',
                    start: 464,
                    end: 475,
                    name: 'hydrateRoot'
                  }
                }
              }
            }
          }
        ]
      },
      alternate: {
        type: 'BlockStatement',
        start: 484,
        end: 929,
        body: [
          {
            type: 'VariableDeclaration',
            start: 488,
            end: 549,
            kind: 'var',
            declarations: [
              {
                type: 'VariableDeclarator',
                start: 492,
                end: 548,
                id: { type: 'Identifier', start: 492, end: 493, name: 'i' },
                init: {
                  type: 'MemberExpression',
                  start: 496,
                  end: 548,
                  computed: false,
                  optional: false,
                  object: {
                    type: 'Identifier',
                    start: 496,
                    end: 497,
                    name: 'm'
                  },
                  property: {
                    type: 'Identifier',
                    start: 498,
                    end: 548,
                    name: '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'
                  }
                }
              }
            ]
          },
          {
            type: 'ExpressionStatement',
            start: 552,
            end: 734,
            expression: {
              type: 'AssignmentExpression',
              start: 552,
              end: 733,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 552,
                end: 570,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 552,
                  end: 559,
                  name: 'exports'
                },
                property: {
                  type: 'Identifier',
                  start: 560,
                  end: 570,
                  name: 'createRoot'
                }
              },
              right: {
                type: 'FunctionExpression',
                start: 573,
                end: 733,
                async: false,
                generator: false,
                id: null,
                params: [
                  {
                    type: 'Identifier',
                    start: 582,
                    end: 583,
                    name: 'c'
                  },
                  {
                    type: 'Identifier',
                    start: 585,
                    end: 586,
                    name: 'o'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 588,
                  end: 733,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 594,
                      end: 625,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 594,
                        end: 624,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 594,
                          end: 617,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 594,
                            end: 595,
                            name: 'i'
                          },
                          property: {
                            type: 'Identifier',
                            start: 596,
                            end: 617,
                            name: 'usingClientEntryPoint'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 620,
                          end: 624,
                          value: true,
                          raw: 'true'
                        }
                      }
                    },
                    {
                      type: 'TryStatement',
                      start: 630,
                      end: 729,
                      block: {
                        type: 'BlockStatement',
                        start: 634,
                        end: 674,
                        body: [
                          {
                            type: 'ReturnStatement',
                            start: 642,
                            end: 668,
                            argument: {
                              type: 'CallExpression',
                              start: 649,
                              end: 667,
                              optional: false,
                              callee: {
                                type: 'MemberExpression',
                                start: 649,
                                end: 661,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 649,
                                  end: 650,
                                  name: 'm'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 651,
                                  end: 661,
                                  name: 'createRoot'
                                }
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 662,
                                  end: 663,
                                  name: 'c'
                                },
                                {
                                  type: 'Identifier',
                                  start: 665,
                                  end: 666,
                                  name: 'o'
                                }
                              ]
                            }
                          }
                        ]
                      },
                      handler: null,
                      finalizer: {
                        type: 'BlockStatement',
                        start: 683,
                        end: 729,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 691,
                            end: 723,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 691,
                              end: 722,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 691,
                                end: 714,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 691,
                                  end: 692,
                                  name: 'i'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 693,
                                  end: 714,
                                  name: 'usingClientEntryPoint'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 717,
                                end: 722,
                                value: false,
                                raw: 'false'
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                expression: false
              }
            }
          },
          {
            type: 'ExpressionStatement',
            start: 737,
            end: 927,
            expression: {
              type: 'AssignmentExpression',
              start: 737,
              end: 926,
              operator: '=',
              left: {
                type: 'MemberExpression',
                start: 737,
                end: 756,
                computed: false,
                optional: false,
                object: {
                  type: 'Identifier',
                  start: 737,
                  end: 744,
                  name: 'exports'
                },
                property: {
                  type: 'Identifier',
                  start: 745,
                  end: 756,
                  name: 'hydrateRoot'
                }
              },
              right: {
                type: 'FunctionExpression',
                start: 759,
                end: 926,
                async: false,
                generator: false,
                id: null,
                params: [
                  {
                    type: 'Identifier',
                    start: 768,
                    end: 769,
                    name: 'c'
                  },
                  {
                    type: 'Identifier',
                    start: 771,
                    end: 772,
                    name: 'h'
                  },
                  {
                    type: 'Identifier',
                    start: 774,
                    end: 775,
                    name: 'o'
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  start: 777,
                  end: 926,
                  body: [
                    {
                      type: 'ExpressionStatement',
                      start: 783,
                      end: 814,
                      expression: {
                        type: 'AssignmentExpression',
                        start: 783,
                        end: 813,
                        operator: '=',
                        left: {
                          type: 'MemberExpression',
                          start: 783,
                          end: 806,
                          computed: false,
                          optional: false,
                          object: {
                            type: 'Identifier',
                            start: 783,
                            end: 784,
                            name: 'i'
                          },
                          property: {
                            type: 'Identifier',
                            start: 785,
                            end: 806,
                            name: 'usingClientEntryPoint'
                          }
                        },
                        right: {
                          type: 'Literal',
                          start: 809,
                          end: 813,
                          value: true,
                          raw: 'true'
                        }
                      }
                    },
                    {
                      type: 'TryStatement',
                      start: 819,
                      end: 922,
                      block: {
                        type: 'BlockStatement',
                        start: 823,
                        end: 867,
                        body: [
                          {
                            type: 'ReturnStatement',
                            start: 831,
                            end: 861,
                            argument: {
                              type: 'CallExpression',
                              start: 838,
                              end: 860,
                              optional: false,
                              callee: {
                                type: 'MemberExpression',
                                start: 838,
                                end: 851,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 838,
                                  end: 839,
                                  name: 'm'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 840,
                                  end: 851,
                                  name: 'hydrateRoot'
                                }
                              },
                              arguments: [
                                {
                                  type: 'Identifier',
                                  start: 852,
                                  end: 853,
                                  name: 'c'
                                },
                                {
                                  type: 'Identifier',
                                  start: 855,
                                  end: 856,
                                  name: 'h'
                                },
                                {
                                  type: 'Identifier',
                                  start: 858,
                                  end: 859,
                                  name: 'o'
                                }
                              ]
                            }
                          }
                        ]
                      },
                      handler: null,
                      finalizer: {
                        type: 'BlockStatement',
                        start: 876,
                        end: 922,
                        body: [
                          {
                            type: 'ExpressionStatement',
                            start: 884,
                            end: 916,
                            expression: {
                              type: 'AssignmentExpression',
                              start: 884,
                              end: 915,
                              operator: '=',
                              left: {
                                type: 'MemberExpression',
                                start: 884,
                                end: 907,
                                computed: false,
                                optional: false,
                                object: {
                                  type: 'Identifier',
                                  start: 884,
                                  end: 885,
                                  name: 'i'
                                },
                                property: {
                                  type: 'Identifier',
                                  start: 886,
                                  end: 907,
                                  name: 'usingClientEntryPoint'
                                }
                              },
                              right: {
                                type: 'Literal',
                                start: 910,
                                end: 915,
                                value: false,
                                raw: 'false'
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                expression: false
              }
            }
          }
        ]
      }
    },
    {
      type: 'ExportNamedDeclaration',
      start: 931,
      end: 1012,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 940,
          end: 965,
          local: { type: 'Identifier', start: 940, end: 946, name: 'client' },
          exported: {
            type: 'Identifier',
            start: 950,
            end: 965,
            name: '__moduleExports'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 967,
          end: 977,
          local: {
            type: 'Identifier',
            start: 967,
            end: 977,
            name: 'createRoot'
          },
          exported: {
            type: 'Identifier',
            start: 967,
            end: 977,
            name: 'createRoot'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 979,
          end: 990,
          local: {
            type: 'Identifier',
            start: 979,
            end: 990,
            name: 'hydrateRoot'
          },
          exported: {
            type: 'Identifier',
            start: 979,
            end: 990,
            name: 'hydrateRoot'
          }
        },
        {
          type: 'ExportSpecifier',
          start: 992,
          end: 1009,
          local: { type: 'Identifier', start: 992, end: 998, name: 'client' },
          exported: {
            type: 'Identifier',
            start: 1002,
            end: 1009,
            name: 'default'
          }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 45,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 16,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 15,
          id: { type: 'Identifier', start: 4, end: 10, name: 'client' },
          init: {
            type: 'ObjectExpression',
            start: 13,
            end: 15,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 17,
      end: 45,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 25,
          end: 44,
          local: { type: 'Identifier', start: 25, end: 31, name: 'client' },
          exported: { type: 'Identifier', start: 35, end: 44, name: '__exports' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 110,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 110,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 109,
        value: '/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/react-dom/index.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 59,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 29,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 28,
          id: { type: 'Identifier', start: 4, end: 12, name: 'reactDom' },
          init: {
            type: 'ObjectExpression',
            start: 15,
            end: 28,
            properties: [
              {
                type: 'Property',
                start: 16,
                end: 27,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 16,
                  end: 23,
                  name: 'exports'
                },
                value: {
                  type: 'ObjectExpression',
                  start: 25,
                  end: 27,
                  properties: []
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 30,
      end: 59,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 38,
          end: 58,
          local: { type: 'Identifier', start: 38, end: 46, name: 'reactDom' },
          exported: { type: 'Identifier', start: 50, end: 58, name: '__module' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 133,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 133,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 132,
        value: '/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/react-dom/cjs/react-dom.production.min.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 79,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 33,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 32,
          id: {
            type: 'Identifier',
            start: 4,
            end: 27,
            name: 'reactDom_production_min'
          },
          init: {
            type: 'ObjectExpression',
            start: 30,
            end: 32,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 34,
      end: 79,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 42,
          end: 78,
          local: {
            type: 'Identifier',
            start: 42,
            end: 65,
            name: 'reactDom_production_min'
          },
          exported: { type: 'Identifier', start: 69, end: 78, name: '__exports' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 110,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 110,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 109,
        value: '/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/scheduler/index.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 61,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 30,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 29,
          id: { type: 'Identifier', start: 4, end: 13, name: 'scheduler' },
          init: {
            type: 'ObjectExpression',
            start: 16,
            end: 29,
            properties: [
              {
                type: 'Property',
                start: 17,
                end: 28,
                method: false,
                shorthand: false,
                computed: false,
                key: {
                  type: 'Identifier',
                  start: 17,
                  end: 24,
                  name: 'exports'
                },
                value: {
                  type: 'ObjectExpression',
                  start: 26,
                  end: 28,
                  properties: []
                },
                kind: 'init'
              }
            ]
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 31,
      end: 61,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 39,
          end: 60,
          local: { type: 'Identifier', start: 39, end: 48, name: 'scheduler' },
          exported: { type: 'Identifier', start: 52, end: 60, name: '__module' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 133,
  body: [
    {
      type: 'ExportNamedDeclaration',
      start: 0,
      end: 133,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 9,
          end: 35,
          local: {
            type: 'Identifier',
            start: 9,
            end: 24,
            name: '__moduleExports'
          },
          exported: { type: 'Identifier', start: 28, end: 35, name: 'default' }
        }
      ],
      source: {
        type: 'Literal',
        start: 43,
        end: 132,
        value: '/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js',
        raw: '"/home/muiga/Dev/Work/translation/node_modules/scheduler/cjs/scheduler.production.min.js"'
      },
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
{
  type: 'Program',
  start: 0,
  end: 81,
  body: [
    {
      type: 'VariableDeclaration',
      start: 0,
      end: 34,
      kind: 'var',
      declarations: [
        {
          type: 'VariableDeclarator',
          start: 4,
          end: 33,
          id: {
            type: 'Identifier',
            start: 4,
            end: 28,
            name: 'scheduler_production_min'
          },
          init: {
            type: 'ObjectExpression',
            start: 31,
            end: 33,
            properties: []
          }
        }
      ]
    },
    {
      type: 'ExportNamedDeclaration',
      start: 35,
      end: 81,
      specifiers: [
        {
          type: 'ExportSpecifier',
          start: 43,
          end: 80,
          local: {
            type: 'Identifier',
            start: 43,
            end: 67,
            name: 'scheduler_production_min'
          },
          exported: { type: 'Identifier', start: 71, end: 80, name: '__exports' }
        }
      ],
      source: null,
      attributes: [],
      declaration: null
    }
  ],
  sourceType: 'module'
}
✓ 36 modules transformed.
rendering chunks...
computing gzip size...
dist/index.html                   0.46 kB │ gzip:  0.30 kB
dist/assets/react-CHdo91hT.svg    4.13 kB │ gzip:  2.14 kB
dist/assets/index-n_ryQ3BS.css    1.39 kB │ gzip:  0.72 kB
dist/assets/index-B58hAjfT.js   143.41 kB │ gzip: 46.18 kB
✓ built in 1.70s
